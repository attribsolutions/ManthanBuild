{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\components\\\\Common\\\\ComponentRelatedCommonFile\\\\CommonMasterListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Breadcrumb from \"../Breadcrumb3\";\nimport { Col, Modal, Row } from \"reactstrap\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useDispatch } from \"react-redux\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { useHistory } from \"react-router-dom\";\nimport { AlertState, BreadcrumbFilterSize } from \"../../../store/actions\";\nimport { excelDownCommonFunc, listPageCommonButtonFunction, saveDissable } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { defaultSearch, mySearchProps } from \"./MySearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet sortType = \"asc\";\nlet searchCount = 0;\nlet downList = [];\nlet listObj = {};\nlet searchProps = {\n  onClear: function onClear() {},\n  onSearch: function onSearch() {},\n  searchText: \"\"\n};\nexport const countlabelFunc = (toolkitProps, paginationProps, dispatch, ButtonMsgLable) => {\n  let iscall = 0;\n\n  if (paginationProps.dataSize) {\n    iscall = paginationProps.dataSize;\n  }\n\n  if (!(iscall === searchCount)) {\n    dispatch(BreadcrumbFilterSize(`${ButtonMsgLable} Count :${iscall}`));\n    searchCount = paginationProps.dataSize;\n  }\n\n  searchProps = toolkitProps.searchProps;\n};\n\nconst CommonListPage = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userAccState, setUserAccState] = useState('');\n  const [modal_edit, setmodal_edit] = useState(false);\n  const [masterPath, setmasterPath] = useState('');\n  const {\n    tableList,\n    editData,\n    updateMsg,\n    deleteMsg,\n    userAccess,\n    postMsg,\n    pageField\n  } = props.reducers;\n  const {\n    getList,\n    editId,\n    deleteId,\n    postSucc,\n    updateSucc,\n    deleteSucc\n  } = props.action;\n  const {\n    MasterModal,\n    ButtonMsgLable,\n    deleteName,\n    showBreadcrumb = true\n  } = props;\n  const {\n    PageFieldMaster = []\n  } = { ...pageField\n  };\n  useEffect(() => {\n    debugger;\n    const locationPath = history.location.pathname;\n    let userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserAccState(userAcc);\n    }\n  }, [userAccess]); // this useEffect for MasterPagePath dynamically work \n\n  useEffect(() => {\n    const locationPath = history.location.pathname;\n    let userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n    let MasterPagePath = userAccess.find(inx => {\n      return inx.id === userAcc.RelatedPageID;\n    });\n\n    if (!(MasterPagePath === undefined)) {\n      setmasterPath(`/${MasterPagePath.ActualPagePath}`);\n    }\n  }, [userAccess]);\n  const downList = useMemo(() => {\n    return excelDownCommonFunc({\n      tableList,\n      PageFieldMaster\n    });\n  }, [tableList]); // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\n\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200) {\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      dispatch(updateSucc({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: updateMsg.Message,\n        AfterResponseAction: getList\n      }));\n      tog_center();\n    } else if (updateMsg.Status === true) {\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      dispatch(updateSucc({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg]);\n  useEffect(() => {\n    if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\n      dispatch(deleteSucc({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: deleteMsg.Message,\n        AfterResponseAction: getList\n      }));\n    } else if (deleteMsg.Status === true) {\n      dispatch(deleteSucc({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(deleteMsg.Message)\n      }));\n    }\n  }, [deleteMsg]);\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(postSucc({\n        Status: false\n      }));\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      tog_center();\n      dispatch(getList());\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: postMsg.Message\n      }));\n    } else if (postMsg.Status === true) {\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      dispatch(postSucc({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMsg.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]); // Edit Modal Show When Edit Data is true\n\n  useEffect(() => {\n    if (editData.Status === true) {\n      if (pageField.IsEditPopuporComponent) {\n        history.push({\n          pathname: masterPath,\n          editValue: editData.Data,\n          pageMode: editData.pageMode\n        });\n      } else {\n        tog_center();\n      }\n    }\n  }, [editData]);\n\n  function tog_center() {\n    setmodal_edit(!modal_edit); //when edit mode show in pop up that modal view controle\n  }\n\n  PageFieldMaster.sort(function (a, b) {\n    //sort function is  sort list page coloumn by asending order by listpage sequense\n    return a.ListPageSeq - b.ListPageSeq;\n  });\n  let sortLabel = \"\";\n  const columns = [];\n  PageFieldMaster.forEach((i, k) => {\n    if (i.ShowInListPage) {\n      columns.push({\n        text: i.FieldLabel,\n        dataField: i.ControlID,\n        sort: true\n      });\n\n      if (i.DefaultSort === 1) {\n        sortLabel = i.ControlID;\n        sortType = \"asc\";\n      } else if (i.DefaultSort === 2) {\n        sortLabel = i.ControlID;\n        sortType = \"desc\";\n      }\n    }\n\n    if (PageFieldMaster.length - 1 === k) {\n      columns.push(listPageCommonButtonFunction({\n        dispatchHook: dispatch,\n        ButtonMsgLable: ButtonMsgLable,\n        deleteName: deleteName,\n        userAccState: userAccState,\n        editActionFun: editId,\n        deleteActionFun: deleteId\n      }));\n    }\n  });\n  const defaultSorted = [{\n    dataField: sortLabel,\n    // if dataField is not match to any column you defined, it will be ignored.\n    order: sortType // desc or asc\n\n  }];\n  const pageOptions = {\n    sizePerPage: 15,\n    // totalSize: tableList.length,\n    custom: true\n  };\n\n  if (!(userAccState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userAccState.PageHeading, \"| FoodERP-React FrontEnd\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [showBreadcrumb ? /*#__PURE__*/_jsxDEV(Breadcrumb, {\n          pageHeading: userAccState.PageHeading,\n          newBtnView: userAccState.RoleAccess_IsSave ? true : false,\n          showCount: true,\n          excelBtnView: userAccState.RoleAccess_Exceldownload ? true : false // handleDataChange={ }\n          ,\n          excelData: downList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(PaginationProvider, {\n          pagination: paginationFactory(pageOptions),\n          children: _ref => {\n            let {\n              paginationProps,\n              paginationTableProps\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"id\",\n              data: tableList,\n              columns: columns // search={ defaultSearch }\n              ,\n              search: defaultSearch(pageField.id),\n              children: (toolkitProps, a) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"table-responsive table \",\n                      children: /*#__PURE__*/_jsxDEV(BootstrapTable //  expandRow={ expandRow }\n                      , {\n                        keyField: \"id\",\n                        responsive: true,\n                        bordered: false,\n                        defaultSorted: defaultSorted // onDataSizeChange={handleDataChange}\n                        ,\n                        striped: true,\n                        classes: \"table  table-bordered table-hover\",\n                        noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-danger text-center \",\n                          children: \"Data Not available\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 47\n                        }, this),\n                        ...toolkitProps.baseProps,\n                        ...paginationTableProps\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this), countlabelFunc(toolkitProps, paginationProps, dispatch, ButtonMsgLable), mySearchProps(toolkitProps.searchProps, pageField.id)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-md-center mt-30\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pagination pagination-rounded justify-content-end mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal_edit,\n          toggle: () => {\n            tog_center();\n          },\n          size: \"xl\",\n          children: /*#__PURE__*/_jsxDEV(MasterModal, {\n            editValue: editData.Data,\n            masterPath: masterPath,\n            pageMode: editData.pageMode,\n            pageHeading: userAccess.pageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CommonListPage, \"eZg5gaxv2n6npwTNk0SbcSGl4IM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = CommonListPage;\nexport default CommonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonListPage\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Breadcrumb","Col","Modal","Row","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","Search","BootstrapTable","useDispatch","MetaTags","useHistory","AlertState","BreadcrumbFilterSize","excelDownCommonFunc","listPageCommonButtonFunction","saveDissable","defaultSearch","mySearchProps","sortType","searchCount","downList","listObj","searchProps","onClear","onSearch","searchText","countlabelFunc","toolkitProps","paginationProps","dispatch","ButtonMsgLable","iscall","dataSize","CommonListPage","props","history","userAccState","setUserAccState","modal_edit","setmodal_edit","masterPath","setmasterPath","tableList","editData","updateMsg","deleteMsg","userAccess","postMsg","pageField","reducers","getList","editId","deleteId","postSucc","updateSucc","deleteSucc","action","MasterModal","deleteName","showBreadcrumb","PageFieldMaster","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","MasterPagePath","id","RelatedPageID","Status","StatusCode","Type","Message","AfterResponseAction","tog_center","JSON","stringify","RedirectPath","IsEditPopuporComponent","push","editValue","Data","pageMode","sort","a","b","ListPageSeq","sortLabel","columns","forEach","i","k","ShowInListPage","text","FieldLabel","dataField","ControlID","DefaultSort","length","dispatchHook","editActionFun","deleteActionFun","defaultSorted","order","pageOptions","sizePerPage","custom","PageHeading","RoleAccess_IsSave","RoleAccess_Exceldownload","paginationTableProps","baseProps","pageHeading"],"sources":["D:/Rohit/Git projects/Manthan/src/components/Common/ComponentRelatedCommonFile/CommonMasterListPage.js"],"sourcesContent":["\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport Breadcrumb from \"../Breadcrumb3\";\r\nimport { Col, Modal, Row } from \"reactstrap\";\r\nimport paginationFactory, {\r\n  PaginationListStandalone,\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { AlertState, BreadcrumbFilterSize } from \"../../../store/actions\";\r\nimport { excelDownCommonFunc, listPageCommonButtonFunction, saveDissable }\r\n  from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport { defaultSearch, mySearchProps } from \"./MySearch\";\r\n\r\nlet sortType = \"asc\"\r\nlet searchCount = 0\r\nlet downList = []\r\nlet listObj = {}\r\n\r\n\r\nlet searchProps = {\r\n  onClear: function onClear() { },\r\n  onSearch: function onSearch() { },\r\n  searchText: \"\"\r\n}\r\n\r\nexport const countlabelFunc = (toolkitProps, paginationProps, dispatch, ButtonMsgLable) => {\r\n\r\n  let iscall = 0\r\n  if (paginationProps.dataSize) {\r\n    iscall = paginationProps.dataSize\r\n  }\r\n\r\n  if (!(iscall === searchCount)) {\r\n    dispatch(BreadcrumbFilterSize(`${ButtonMsgLable} Count :${iscall}`))\r\n    searchCount = paginationProps.dataSize\r\n  }\r\n  searchProps = toolkitProps.searchProps\r\n}\r\n\r\nconst CommonListPage = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [userAccState, setUserAccState] = useState('');\r\n  const [modal_edit, setmodal_edit] = useState(false);\r\n  const [masterPath, setmasterPath] = useState('');\r\n\r\n\r\n  const {\r\n    tableList,\r\n    editData,\r\n    updateMsg,\r\n    deleteMsg,\r\n    userAccess,\r\n    postMsg,\r\n    pageField\r\n\r\n  } = props.reducers;\r\n\r\n\r\n\r\n  const {\r\n    getList,\r\n    editId,\r\n    deleteId,\r\n    postSucc,\r\n    updateSucc,\r\n    deleteSucc\r\n\r\n  } = props.action\r\n\r\n  const {\r\n    MasterModal,\r\n    ButtonMsgLable,\r\n    deleteName,\r\n    showBreadcrumb = true\r\n  } = props;\r\n\r\n  const { PageFieldMaster = [] } = { ...pageField };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    debugger\r\n\r\n    const locationPath = history.location.pathname\r\n    let userAcc = userAccess.find((inx) => {\r\n      return (`/${inx.ActualPagePath}` === locationPath)\r\n    })\r\n    if (!(userAcc === undefined)) {\r\n      setUserAccState(userAcc)\r\n    }\r\n  }, [userAccess])\r\n\r\n  // this useEffect for MasterPagePath dynamically work \r\n  useEffect(() => {\r\n\r\n    const locationPath = history.location.pathname\r\n\r\n    let userAcc = userAccess.find((inx) => {\r\n      return (`/${inx.ActualPagePath}` === locationPath)\r\n    })\r\n\r\n    let MasterPagePath = userAccess.find((inx) => {\r\n      return (inx.id === userAcc.RelatedPageID)\r\n    })\r\n\r\n    if (!(MasterPagePath === undefined)) {\r\n      setmasterPath(`/${MasterPagePath.ActualPagePath}`)\r\n    }\r\n\r\n  }, [userAccess])\r\n\r\n\r\n  const downList = useMemo(() => {\r\n    return excelDownCommonFunc({ tableList, PageFieldMaster })\r\n  }, [tableList])\r\n\r\n  // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\r\n  useEffect(() => {\r\n\r\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200) {\r\n      saveDissable(false);//+++++++++save Button Is enable function\r\n\r\n      dispatch(updateSucc({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 1,\r\n          Status: true,\r\n          Message: updateMsg.Message,\r\n          AfterResponseAction: getList,\r\n        })\r\n      );\r\n      tog_center();\r\n    } else if (updateMsg.Status === true) {\r\n      \r\n      saveDissable(false);//+++++++++save Button Is enable function\r\n      dispatch(updateSucc({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 3,\r\n          Status: true,\r\n          Message: JSON.stringify(updateMsg.Message),\r\n        })\r\n      );\r\n    }\r\n  }, [updateMsg]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\r\n      dispatch(deleteSucc({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 1,\r\n          Status: true,\r\n          Message: deleteMsg.Message,\r\n          AfterResponseAction: getList,\r\n        })\r\n      );\r\n    } else if (deleteMsg.Status === true) {\r\n      dispatch(deleteSucc({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 3,\r\n          Status: true,\r\n          Message: JSON.stringify(deleteMsg.Message),\r\n        })\r\n      );\r\n    }\r\n  }, [deleteMsg]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n      dispatch(postSucc({ Status: false }))\r\n      saveDissable(false);//+++++++++save Button Is enable function\r\n      tog_center();\r\n      dispatch(getList());\r\n      dispatch(AlertState({\r\n        Type: 1,\r\n        Status: true,\r\n        Message: postMsg.Message,\r\n      }))\r\n    }\r\n\r\n    else if ((postMsg.Status === true)) {\r\n      saveDissable(false);//+++++++++save Button Is enable function\r\n      dispatch(postSucc({ Status: false }))\r\n      dispatch(AlertState({\r\n        Type: 4,\r\n        Status: true,\r\n        Message: JSON.stringify(postMsg.Message),\r\n        RedirectPath: false,\r\n        AfterResponseAction: false\r\n      }));\r\n    }\r\n\r\n\r\n  }, [postMsg])\r\n\r\n  // Edit Modal Show When Edit Data is true\r\n  useEffect(() => {\r\n\r\n    if (editData.Status === true) {\r\n      if (pageField.IsEditPopuporComponent) {\r\n        history.push({\r\n          pathname: masterPath,\r\n          editValue: editData.Data,\r\n          pageMode: editData.pageMode,\r\n\r\n        })\r\n      }\r\n      else {\r\n        tog_center();\r\n      }\r\n    }\r\n  }, [editData]);\r\n\r\n  function tog_center() {\r\n    setmodal_edit(!modal_edit); //when edit mode show in pop up that modal view controle\r\n  }\r\n\r\n  PageFieldMaster.sort(function (a, b) {  //sort function is  sort list page coloumn by asending order by listpage sequense\r\n    return a.ListPageSeq - b.ListPageSeq\r\n  });\r\n\r\n  let sortLabel = \"\"\r\n  const columns = []\r\n\r\n  PageFieldMaster.forEach((i, k) => {\r\n    if (i.ShowInListPage) {\r\n      columns.push({\r\n        text: i.FieldLabel,\r\n        dataField: i.ControlID,\r\n        sort: true,\r\n      })\r\n\r\n      if (i.DefaultSort === 1) {\r\n        sortLabel = i.ControlID\r\n        sortType = \"asc\"\r\n      } else if (i.DefaultSort === 2) {\r\n        sortLabel = i.ControlID;\r\n        sortType = \"desc\"\r\n      }\r\n    }\r\n    if (PageFieldMaster.length - 1 === k) {\r\n      columns.push(listPageCommonButtonFunction({\r\n        dispatchHook: dispatch,\r\n        ButtonMsgLable: ButtonMsgLable,\r\n        deleteName: deleteName,\r\n        userAccState: userAccState,\r\n        editActionFun: editId,\r\n        deleteActionFun: deleteId\r\n      })\r\n      )\r\n    }\r\n  })\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: sortLabel, // if dataField is not match to any column you defined, it will be ignored.\r\n      order: sortType, // desc or asc\r\n    },\r\n  ];\r\n\r\n  const pageOptions = {\r\n    sizePerPage: 15,\r\n    // totalSize: tableList.length,\r\n    custom: true,\r\n  };\r\n\r\n  if (!(userAccState === '')) {\r\n    return (\r\n      <React.Fragment>\r\n        <MetaTags>\r\n          <title>{userAccState.PageHeading}| FoodERP-React FrontEnd</title>\r\n        </MetaTags>\r\n        <div className=\"page-content\">\r\n          {showBreadcrumb ?\r\n            <Breadcrumb\r\n              pageHeading={userAccState.PageHeading}\r\n              newBtnView={(userAccState.RoleAccess_IsSave) ? true : false}\r\n              showCount={true}\r\n              excelBtnView={(userAccState.RoleAccess_Exceldownload)  ? true : false}\r\n              // handleDataChange={ }\r\n          excelData={downList}\r\n            />\r\n          : null\r\n          }\r\n          <PaginationProvider pagination={paginationFactory(pageOptions)}>\r\n            {({ paginationProps, paginationTableProps }) => (\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={tableList}\r\n                columns={columns}\r\n                // search={ defaultSearch }\r\n                search={defaultSearch(pageField.id)}\r\n              >\r\n                {(toolkitProps, a) => (\r\n                  <React.Fragment>\r\n                    <Row>\r\n                      <Col xl=\"12\">\r\n                        <div className=\"table-responsive table \" >\r\n                          <BootstrapTable\r\n                            //  expandRow={ expandRow }\r\n\r\n                            keyField={\"id\"}\r\n                            responsive\r\n                            bordered={false}\r\n                            defaultSorted={defaultSorted}\r\n                            // onDataSizeChange={handleDataChange}\r\n                            striped={true}\r\n                            classes={\"table  table-bordered table-hover\"}\r\n                            noDataIndication={<div className=\"text-danger text-center \">Data Not available</div>}\r\n                            {...toolkitProps.baseProps}\r\n                            {...paginationTableProps}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      {countlabelFunc(toolkitProps, paginationProps, dispatch, ButtonMsgLable)}\r\n                      {mySearchProps(toolkitProps.searchProps, pageField.id)}\r\n                    </Row>\r\n                    <Row className=\"align-items-md-center mt-30\">\r\n                      <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </Col>\r\n                    </Row>\r\n                  </React.Fragment>\r\n                )}\r\n              </ToolkitProvider>\r\n            )}\r\n          </PaginationProvider>\r\n          <Modal\r\n            isOpen={modal_edit}\r\n            toggle={() => {\r\n              tog_center();\r\n            }}\r\n            size=\"xl\"\r\n          >\r\n\r\n            <MasterModal editValue={editData.Data} masterPath={masterPath} pageMode={editData.pageMode} pageHeading={userAccess.pageHeading} />\r\n          </Modal>\r\n        </div>\r\n        {/* {(isRedirect) ? <Redirect to={{\r\n          pathname: masterPath,\r\n          state: editData.Data, relatatedPage: masterPath, pageMode: editData.pageMode\r\n        }} /> : null} */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <React.Fragment></React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommonListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}