{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { saveBankAssign_Success, PartyBankfilterSuccess } from \"./action\";\nimport { Post_Bank_Assign_API, PartyBankfilter_API } from \"../../../helpers/backend_helper\";\nimport { PARTY_BANK_FILTER, SAVE_BANK_ASSIGN } from \"./actionType\";\nimport { CommonConsole, loginJsonBody } from \"../../../components/Common/CommonFunction\";\n\nfunction* Save_Method_ForBankAssign_GenFun(_ref) {\n  let {\n    config\n  } = _ref;\n\n  // Save API\n  try {\n    const response = yield call(Post_Bank_Assign_API, config);\n    yield put(saveBankAssign_Success(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c = Save_Method_ForBankAssign_GenFun;\n\nfunction* PartyBank_Assign_GenFunc() {\n  const filters = loginJsonBody(); // required only PartyID and CompanyID\n\n  try {\n    const response = yield call(PartyBankfilter_API, filters);\n    yield put(PartyBankfilterSuccess(response.Data));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c2 = PartyBank_Assign_GenFunc;\n\nfunction* BankSaga() {\n  yield takeEvery(SAVE_BANK_ASSIGN, Save_Method_ForBankAssign_GenFun);\n  yield takeEvery(PARTY_BANK_FILTER, PartyBank_Assign_GenFunc);\n}\n\n_c3 = BankSaga;\nexport default BankSaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Save_Method_ForBankAssign_GenFun\");\n$RefreshReg$(_c2, \"PartyBank_Assign_GenFunc\");\n$RefreshReg$(_c3, \"BankSaga\");","map":{"version":3,"names":["call","put","takeEvery","saveBankAssign_Success","PartyBankfilterSuccess","Post_Bank_Assign_API","PartyBankfilter_API","PARTY_BANK_FILTER","SAVE_BANK_ASSIGN","CommonConsole","loginJsonBody","Save_Method_ForBankAssign_GenFun","config","response","error","PartyBank_Assign_GenFunc","filters","Data","BankSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Accounting/BankAssignRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n    saveBankAssign_Success,\r\n    PartyBankfilterSuccess\r\n} from \"./action\";\r\nimport {\r\n    Post_Bank_Assign_API,\r\n    PartyBankfilter_API\r\n} from \"../../../helpers/backend_helper\";\r\nimport {\r\n    PARTY_BANK_FILTER,\r\n    SAVE_BANK_ASSIGN\r\n} from \"./actionType\";\r\nimport { CommonConsole, loginJsonBody } from \"../../../components/Common/CommonFunction\";\r\n\r\n\r\nfunction* Save_Method_ForBankAssign_GenFun({ config }) {             // Save API\r\n    try {\r\n        const response = yield call(Post_Bank_Assign_API, config);\r\n        yield put(saveBankAssign_Success(response));\r\n    } catch (error) { CommonConsole(error) }\r\n}\r\n\r\n\r\nfunction* PartyBank_Assign_GenFunc() {\r\n    const filters = loginJsonBody();// required only PartyID and CompanyID\r\n    try {\r\n        const response = yield call(PartyBankfilter_API, filters);\r\n        yield put(PartyBankfilterSuccess(response.Data));\r\n    } catch (error) { CommonConsole(error) }\r\n}\r\n\r\n\r\nfunction* BankSaga() {\r\n    yield takeEvery(SAVE_BANK_ASSIGN, Save_Method_ForBankAssign_GenFun)\r\n    yield takeEvery(PARTY_BANK_FILTER, PartyBank_Assign_GenFunc)\r\n}\r\n\r\nexport default BankSaga;"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SACIC,sBADJ,EAEIC,sBAFJ,QAGO,UAHP;AAIA,SACIC,oBADJ,EAEIC,mBAFJ,QAGO,iCAHP;AAIA,SACIC,iBADJ,EAEIC,gBAFJ,QAGO,cAHP;AAIA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,2CAA7C;;AAGA,UAAUC,gCAAV,OAAuD;EAAA,IAAZ;IAAEC;EAAF,CAAY;;EAAc;EACjE,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMb,IAAI,CAACK,oBAAD,EAAuBO,MAAvB,CAA3B;IACA,MAAMX,GAAG,CAACE,sBAAsB,CAACU,QAAD,CAAvB,CAAT;EACH,CAHD,CAGE,OAAOC,KAAP,EAAc;IAAEL,aAAa,CAACK,KAAD,CAAb;EAAsB;AAC3C;;KALSH,gC;;AAQV,UAAUI,wBAAV,GAAqC;EACjC,MAAMC,OAAO,GAAGN,aAAa,EAA7B,CADiC,CACD;;EAChC,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMb,IAAI,CAACM,mBAAD,EAAsBU,OAAtB,CAA3B;IACA,MAAMf,GAAG,CAACG,sBAAsB,CAACS,QAAQ,CAACI,IAAV,CAAvB,CAAT;EACH,CAHD,CAGE,OAAOH,KAAP,EAAc;IAAEL,aAAa,CAACK,KAAD,CAAb;EAAsB;AAC3C;;MANSC,wB;;AASV,UAAUG,QAAV,GAAqB;EACjB,MAAMhB,SAAS,CAACM,gBAAD,EAAmBG,gCAAnB,CAAf;EACA,MAAMT,SAAS,CAACK,iBAAD,EAAoBQ,wBAApB,CAAf;AACH;;MAHSG,Q;AAKV,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}