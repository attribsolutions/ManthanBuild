{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Dashboard\\\\Dashboard_1\\\\GRNList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { date_ymd_func, loginPartyID } from '../../../components/Common/CommonFunction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { order_Type } from '../../../components/Common/C-Varialbes';\nimport { getOrderListPage } from '../../../store/Purchase/OrderPageRedux/actions';\nimport { mySearchProps } from '../../../components/Common/SearchBox/MySearch';\nimport { Button } from 'reactstrap';\nimport { makeGRN_Mode_1Action } from '../../../store/Inventory/GRNRedux/actions';\nimport { mode, url } from \"../../../routes/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InvoiceForGRN() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const currentDate_ymd = date_ymd_func();\n  const {\n    tableList,\n    GRNitem\n  } = useSelector(state => ({\n    tableList: state.OrderReducer.orderList,\n    GRNitem: state.GRNReducer.GRNitem\n  }));\n  useEffect(() => {\n    let subPageMode = url.GRN_STP_3;\n    const gobtnId = `gobtn-${subPageMode}`;\n    const filtersBody = JSON.stringify({\n      FromDate: currentDate_ymd,\n      ToDate: currentDate_ymd,\n      Supplier: \"\",\n      Customer: loginPartyID(),\n      OrderType: order_Type.InvoiceToGRN,\n      IBType: \"\"\n    });\n    dispatch(getOrderListPage({\n      subPageMode,\n      filtersBody,\n      btnId: gobtnId\n    }));\n  }, []);\n  useEffect(() => {\n    if (GRNitem.Status === true && GRNitem.StatusCode === 200) {\n      history.push({\n        pathname: GRNitem.path,\n        page_Mode: GRNitem.page_Mode\n      });\n    }\n  }, [GRNitem]);\n\n  function makeBtnHandler(rowData, btnId) {\n    const list = [rowData];\n    var isGRNSelect = '';\n    var challanNo = '';\n    const grnRef = [];\n\n    if (list.length > 0) {\n      list.forEach(ele => {\n        grnRef.push({\n          Invoice: ele.id,\n          Order: null,\n          ChallanNo: ele.FullOrderNumber,\n          Inward: true,\n          Challan: ''\n        });\n        isGRNSelect = isGRNSelect.concat(`${ele.id},`);\n        challanNo = challanNo.concat(`${ele.FullOrderNumber},`);\n      });\n\n      if (isGRNSelect) {\n        let path = url.GRN_ADD_3;\n        isGRNSelect = isGRNSelect.replace(/,*$/, ''); //****** withoutLastComma  function */\n\n        challanNo = challanNo.replace(/,*$/, ''); //****** withoutLastComma  function */\n\n        const jsonBody = JSON.stringify({\n          OrderIDs: isGRNSelect,\n          Mode: 3\n        });\n        dispatch(makeGRN_Mode_1Action({\n          jsonBody,\n          pageMode: mode.modeSTPsave,\n          path: path,\n          grnRef,\n          challanNo\n        }));\n      } else {\n        alert(\"Please Select Order1\");\n      }\n    }\n  }\n\n  const pagesListColumns = [{\n    text: \"InvoiceDate\",\n    dataField: \"OrderDate\"\n  }, {\n    text: \"InvoiceNo\",\n    dataField: \"FullOrderNumber\"\n  }, {\n    text: \"InvoiceAmount\",\n    dataField: \"OrderAmount\",\n    align: \"right\"\n  }, {\n    text: \"Action\",\n    dataField: \"\",\n    formatter: (cellContent, rowData) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          id: `btn-makeBtn-${rowData.id}`,\n          className: \"badge badge-soft-info font-size-12 btn btn-info waves-effect waves-light w-xxs border border-light \",\n          title: \"Make GRN\",\n          onClick: () => {\n            const btnId = `btn-makeBtn-${rowData.id}`;\n            makeBtnHandler(rowData, btnId);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"6px\",\n              marginRight: \"6px\"\n            },\n            className: \" fas fa-file-invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n    keyField: \"Invoice\",\n    data: tableList,\n    columns: pagesListColumns,\n    search: true,\n    children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table table-responsive\",\n        children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n          keyField: \"Invoice\",\n          bordered: true,\n          striped: false,\n          noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger text-center \",\n            children: \"Record Not available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 47\n          }, this),\n          classes: \"table align-middle table-nowrap table-hover\",\n          headerWrapperClasses: \"thead-light\",\n          ...toolkitProps.baseProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), mySearchProps(toolkitProps.searchProps)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InvoiceForGRN, \"KSanEvc4BXqnRpiskPeUeB85ZzM=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = InvoiceForGRN;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForGRN\");","map":{"version":3,"names":["React","useEffect","ToolkitProvider","BootstrapTable","date_ymd_func","loginPartyID","useDispatch","useSelector","useHistory","order_Type","getOrderListPage","mySearchProps","Button","makeGRN_Mode_1Action","mode","url","InvoiceForGRN","dispatch","history","currentDate_ymd","tableList","GRNitem","state","OrderReducer","orderList","GRNReducer","subPageMode","GRN_STP_3","gobtnId","filtersBody","JSON","stringify","FromDate","ToDate","Supplier","Customer","OrderType","InvoiceToGRN","IBType","btnId","Status","StatusCode","push","pathname","path","page_Mode","makeBtnHandler","rowData","list","isGRNSelect","challanNo","grnRef","length","forEach","ele","Invoice","id","Order","ChallanNo","FullOrderNumber","Inward","Challan","concat","GRN_ADD_3","replace","jsonBody","OrderIDs","Mode","pageMode","modeSTPsave","alert","pagesListColumns","text","dataField","align","formatter","cellContent","marginLeft","marginRight","toolkitProps","baseProps","searchProps"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Dashboard/Dashboard_1/GRNList.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { date_ymd_func, loginPartyID } from '../../../components/Common/CommonFunction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { order_Type } from '../../../components/Common/C-Varialbes';\r\nimport { getOrderListPage } from '../../../store/Purchase/OrderPageRedux/actions';\r\nimport { mySearchProps } from '../../../components/Common/SearchBox/MySearch';\r\nimport { Button } from 'reactstrap';\r\nimport { makeGRN_Mode_1Action } from '../../../store/Inventory/GRNRedux/actions';\r\nimport { mode, url } from \"../../../routes/index\";\r\n\r\nexport default function InvoiceForGRN() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const currentDate_ymd = date_ymd_func();\r\n\r\n    const { tableList, GRNitem } = useSelector((state) => ({\r\n        tableList: state.OrderReducer.orderList,\r\n        GRNitem: state.GRNReducer.GRNitem,\r\n    }));\r\n\r\n    useEffect(() => {\r\n\r\n        let subPageMode = url.GRN_STP_3\r\n        const gobtnId = `gobtn-${subPageMode}`\r\n        const filtersBody = JSON.stringify({\r\n            FromDate: currentDate_ymd,\r\n            ToDate: currentDate_ymd,\r\n            Supplier: \"\",\r\n            Customer: loginPartyID(),\r\n            OrderType: order_Type.InvoiceToGRN,\r\n            IBType: \"\"\r\n        });\r\n        dispatch(getOrderListPage({ subPageMode, filtersBody, btnId: gobtnId }));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (GRNitem.Status === true && GRNitem.StatusCode === 200) {\r\n            history.push({\r\n                pathname: GRNitem.path,\r\n                page_Mode: GRNitem.page_Mode,\r\n            })\r\n        }\r\n    }, [GRNitem])\r\n\r\n    function makeBtnHandler(rowData, btnId) {\r\n\r\n        const list = [rowData]\r\n        var isGRNSelect = ''\r\n        var challanNo = ''\r\n        const grnRef = []\r\n        if (list.length > 0) {\r\n            list.forEach(ele => {\r\n                grnRef.push({\r\n                    Invoice: ele.id,\r\n                    Order: null,\r\n                    ChallanNo: ele.FullOrderNumber,\r\n                    Inward: true,\r\n                    Challan: ''\r\n                });\r\n                isGRNSelect = isGRNSelect.concat(`${ele.id},`)\r\n                challanNo = challanNo.concat(`${ele.FullOrderNumber},`)\r\n            });\r\n\r\n            if (isGRNSelect) {\r\n                let path = url.GRN_ADD_3\r\n                isGRNSelect = isGRNSelect.replace(/,*$/, '');//****** withoutLastComma  function */\r\n                challanNo = challanNo.replace(/,*$/, '');           //****** withoutLastComma  function */\r\n\r\n\r\n                const jsonBody = JSON.stringify({\r\n                    OrderIDs: isGRNSelect,\r\n                    Mode: 3\r\n                })\r\n\r\n                dispatch(makeGRN_Mode_1Action({ jsonBody, pageMode: mode.modeSTPsave, path: path, grnRef, challanNo }))\r\n\r\n            } else {\r\n                alert(\"Please Select Order1\")\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const pagesListColumns = [\r\n        {\r\n            text: \"InvoiceDate\",\r\n            dataField: \"OrderDate\",\r\n        },\r\n        {\r\n            text: \"InvoiceNo\",\r\n            dataField: \"FullOrderNumber\",\r\n        },\r\n        {\r\n            text: \"InvoiceAmount\",\r\n            dataField: \"OrderAmount\",\r\n            align:\"right\"\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, rowData) => {\r\n                return (<>\r\n                    < Button\r\n                        type=\"button\"\r\n                        id={`btn-makeBtn-${rowData.id}`}\r\n                        className=\"badge badge-soft-info font-size-12 btn btn-info waves-effect waves-light w-xxs border border-light \"\r\n                        title=\"Make GRN\"\r\n                        onClick={() => {\r\n                            const btnId = `btn-makeBtn-${rowData.id}`\r\n                            makeBtnHandler(rowData, btnId)\r\n                        }}\r\n                    >\r\n                        <span style={{ marginLeft: \"6px\", marginRight: \"6px\" }}\r\n                            className=\" fas fa-file-invoice\" ></span> </Button>\r\n                </>)\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <ToolkitProvider\r\n            keyField=\"Invoice\"\r\n            data={tableList}\r\n            columns={pagesListColumns}\r\n            search\r\n        >\r\n            {toolkitProps => (\r\n                <React.Fragment>\r\n                    <div className=\"table table-responsive\">\r\n                        <BootstrapTable\r\n                            keyField={\"Invoice\"}\r\n                            bordered={true}\r\n                            striped={false}\r\n                            noDataIndication={<div className=\"text-danger text-center \">Record Not available</div>}\r\n                            classes={\"table align-middle table-nowrap table-hover\"}\r\n                            headerWrapperClasses={\"thead-light\"}\r\n\r\n                            {...toolkitProps.baseProps}\r\n\r\n                        />\r\n                        {mySearchProps(toolkitProps.searchProps)}\r\n                    </div>\r\n\r\n                </React.Fragment>\r\n            )}\r\n        </ToolkitProvider>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}