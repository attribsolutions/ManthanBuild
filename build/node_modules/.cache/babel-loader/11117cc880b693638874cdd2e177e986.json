{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\SubGroupPages\\\\SubGroupMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { Breadcrumb_inputName, commonPageField, commonPageFieldSuccess, editSubGroupIDSuccess, getGroupList, getSubGroupList, getSubGroupListSuccess, postSubGroupList, postSubGroupSuccess, updateSubGroupID, updateSubgroupIDSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { comAddPageFieldFunc, formValid, initialFiledFunc, onChangeSelect, onChangeText } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\"; // import { getGroupList } from \"../../../store/Administrator/GroupRedux/action\";\n\nimport { SUBGROUP_LIST } from \"../../../routes/route_url\";\nimport { SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\nimport { saveDissable } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubGroupMaster = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [EditData, setEditData] = useState({});\n  const [pageMode, setPageMode] = useState(\"\");\n  const [modalCss, setModalCss] = useState(false);\n  const [userPageAccessState, setUserPageAccessState] = useState(''); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    groupList,\n    updateMsg,\n    pageField,\n    userAccess\n  } = useSelector(state => ({\n    postMsg: state.SubGroupReducer.postMsg,\n    updateMsg: state.SubGroupReducer.updateMsg,\n    groupList: state.GroupReducer.groupList,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  {\n    /** Dyanamic Page access state and OnChange function */\n  }\n  const fileds = {\n    id: \"\",\n    Name: \"\",\n    Group: \"\",\n    GroupName: \"\"\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  useEffect(() => {\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(61));\n    dispatch(getGroupList());\n  }, []);\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]);\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        setEditData(hasEditVal);\n        const {\n          id,\n          Name,\n          Group,\n          GroupName\n        } = hasEditVal;\n        const {\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        } = { ...state\n        };\n        values.Name = Name;\n        values.id = id;\n        values.Group = Group;\n        values.GroupName = {\n          label: GroupName,\n          value: Group\n        };\n        hasValid.id.valid = true;\n        hasValid.Name.valid = true;\n        hasValid.GroupName.valid = true;\n        hasValid.Group.valid = true;\n        setState({\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        });\n        dispatch(Breadcrumb_inputName(hasEditVal.Name));\n      }\n\n      dispatch(editSubGroupIDSuccess({\n        Status: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(postSubGroupSuccess({\n        Status: false\n      }));\n      setState(() => initialFiledFunc(fileds)); //+++++++++ Clear form values \n\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message,\n          RedirectPath: SUBGROUP_LIST\n        }));\n      }\n    } else if (postMsg.Status === true) {\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      dispatch(getSubGroupListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\n      saveDissable(false); //+++++++++Update Button Is enable function\n\n      setState(() => initialFiledFunc(fileds)); //+++++++++ Clear form values\n\n      history.push({\n        pathname: SUBGROUP_LIST\n      });\n    } else if (updateMsg.Status === true && !modalCss) {\n      saveDissable(false); //+++++++++Update Button Is enable function\n\n      dispatch(updateSubgroupIDSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg, modalCss]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      }); // new change\n    }\n  }, [pageField]); // get method for dropdown\n\n  useEffect(() => {\n    dispatch(getSubGroupList());\n  }, [dispatch]);\n  const GroupValues = groupList.map(Data => ({\n    value: Data.id,\n    label: Data.Name\n  }));\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        id: values.id,\n        Name: values.Name,\n        Group: values.GroupName.value,\n        CreatedBy: 1,\n        CreatedOn: \"2022-11-19T00:00:00\",\n        UpdatedBy: 1,\n        UpdatedOn: \"2022-11-19T00:00:00\"\n      });\n      saveDissable(true); //+++++++++save Button Is dissable function\n\n      if (pageMode === \"edit\") {\n        dispatch(updateSubGroupID(jsonBody, values.id));\n      } else {\n        dispatch(postSubGroupList(jsonBody));\n      }\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [userPageAccessState.PageHeading, \" | FoodERP-React FrontEnd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            pageHeading: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black c_card_header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    style: {\n                      height: \"9cm\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        className: \"c_card_body\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [fieldLabel.Name, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 288,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                children: [/*#__PURE__*/_jsxDEV(Input, {\n                                  name: \"Name\",\n                                  id: \"txtName\",\n                                  value: values.Name,\n                                  type: \"text\",\n                                  className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                  placeholder: \"Please Enter Name\",\n                                  autoComplete: \"off\",\n                                  autoFocus: true,\n                                  onChange: event => {\n                                    onChangeText({\n                                      event,\n                                      state,\n                                      setState\n                                    });\n                                    dispatch(Breadcrumb_inputName(event.target.value));\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 291,\n                                  columnNumber: 69\n                                }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"invalid-feedback\",\n                                  children: isError.Name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 307,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 290,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 287,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 286,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-3 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [\" \", fieldLabel.GroupName, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 319,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                name: \"GroupName\" // defaultValue={EmployeeType_DropdownOptions[0]}\n                                ,\n                                value: values.GroupName,\n                                isSearchable: true,\n                                className: \"react-dropdown\",\n                                options: GroupValues,\n                                onChange: (hasSelect, evn) => onChangeSelect({\n                                  hasSelect,\n                                  evn,\n                                  state,\n                                  setState\n                                }),\n                                classNamePrefix: \"dropdown\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 322,\n                                columnNumber: 65\n                              }, this), isError.GroupName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"text-danger f-8\",\n                                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                                  children: isError.GroupName\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 333,\n                                  columnNumber: 103\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 333,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 317,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 316,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                                  pageMode: pageMode,\n                                  userAcc: userPageAccessState,\n                                  module: \"GroupMaster\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 345,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 344,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 343,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 342,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(SubGroupMaster, \"bK1IggFHusNCWx+DWgt5bQnxO1E=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = SubGroupMaster;\nexport default SubGroupMaster; // import React, { useEffect, useRef, useState } from 'react'\n// import { MetaTags } from 'react-meta-tags'\n// import { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from 'reactstrap'\n// import Select from \"react-select\";\n// import SaveButton from '../../../components/Common/CommonSaveButton';\n// import { useHistory } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { initialFiledFunc } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\n// import { commonPageField, commonPageFieldSuccess } from '../../../store/actions';\n// const SubGroupMaster = (props) => {\n//     const formRef = useRef(null);\n//     const history = useHistory()\n//     const dispatch = useDispatch();\n//     const [EditData, setEditData] = useState({});\n//     const [pageMode, setPageMode] = useState(\"\");\n//     const [modalCss, setModalCss] = useState(false);\n//     const [userPageAccessState, ssetUserPageAccessState] = useState('');\n//     const {\n//         pageField,\n//         userAccess } = useSelector((state) => ({\n//             userAccess: state.Login.RoleAccessUpdateData,\n//             pageField: state.CommonPageFieldReducer.pageField\n//         }));\n//     const initialFiled = {\n//         id: \"\",\n//         Name: \"\",\n//         GroupName: \"\"\n//     }\n//     const [state, setState] = useState(initialFiledFunc(initialFiled))\n//     const values = { ...state.values }\n//     const { isError } = state;\n//     const { fieldLabel } = state;\n//     useEffect(() => {\n//         dispatch(commonPageFieldSuccess(null));\n//         dispatch(commonPageField(50))\n//     }, []);\n//     const location = { ...history.location }\n//     // const hasShowloction = location.hasOwnProperty(\"editValue\")\n//     const hasShowModal = props.hasOwnProperty(\"editValue\")\n//     // userAccess useEffect\n//     useEffect(() => {\n//         let userAcc = null;\n//         let locationPath = location.pathname;\n//         if (hasShowModal) {\n//             locationPath = props.masterPath;\n//         };\n//         userAcc = userAccess.find((inx) => {\n//             return (`/${inx.ActualPagePath}` === locationPath)\n//         })\n//         if (userAcc) {\n//             ssetUserPageAccessState(userAcc)\n//         };\n//     }, [userAccess])\n//     return (\n//         <React.Fragment>\n//             <div className=\"page-content\" >\n//                 <Container fluid>\n//                     <MetaTags>\n//                         <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\n//                     </MetaTags>\n//                     {/* <Breadcrumb pageHeading={userPageAccessState.PageHeading} /> */}\n//                     <Card className=\"text-black\">\n//                         <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\n//                             <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\n//                             <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\n//                         </CardHeader>\n//                         <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\n//                             <form>\n//                                 <Row>\n//                                     <Col md={12} style={{ height: \"9cm\" }}>\n//                                         <Card>\n//                                             <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\n//                                                 <Row>\n//                                                     <Col sm=\"4\">\n//                                                         <FormGroup className='mb-3'>\n//                                                             <Label></Label>\n//                                                             <Col>\n//                                                                 <Input\n//                                                                     name=\"Name\"\n//                                                                     type=\"text\"\n//                                                                     placeholder=\"Please Enter Name\"\n//                                                                     autoComplete='off'\n//                                                                     className=\"form-control\"\n//                                                                 />\n//                                                             </Col>\n//                                                         </FormGroup>\n//                                                     </Col>\n//                                                     <Row>\n//                                                         <FormGroup className=\"mb-3 col col-sm-4 \">\n//                                                             <Label></Label>\n//                                                             <Select\n//                                                                 classNamePrefix=\"dropdown\"\n//                                                                 className=\"react-dropdown\"\n//                                                             />\n//                                                         </FormGroup>\n//                                                     </Row>\n//                                                     <FormGroup>\n//                                                         <Row>\n//                                                             <Col sm={2}>\n//                                                                 {/* <SaveButton\n//                                                                 pageMode={pageMode} userAcc={userPageAccessState}\n//                                                                 module={\"\"}/> */}\n//                                                             </Col>\n//                                                         </Row>\n//                                                     </FormGroup>\n//                                                 </Row>\n//                                             </CardBody>\n//                                         </Card>\n//                                     </Col>\n//                                 </Row>\n//                             </form>\n//                         </CardBody>\n//                     </Card>\n//                 </Container>\n//             </div>\n//         </React.Fragment>\n//     )\n// }\n// export default SubGroupMaster\n\nvar _c;\n\n$RefreshReg$(_c, \"SubGroupMaster\");","map":{"version":3,"names":["React","useEffect","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","Select","MetaTags","Breadcrumb_inputName","commonPageField","commonPageFieldSuccess","editSubGroupIDSuccess","getGroupList","getSubGroupList","getSubGroupListSuccess","postSubGroupList","postSubGroupSuccess","updateSubGroupID","updateSubgroupIDSuccess","useDispatch","useSelector","AlertState","useHistory","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeSelect","onChangeText","SUBGROUP_LIST","SaveButton","saveDissable","SubGroupMaster","props","history","dispatch","EditData","setEditData","pageMode","setPageMode","modalCss","setModalCss","userPageAccessState","setUserPageAccessState","postMsg","groupList","updateMsg","pageField","userAccess","state","SubGroupReducer","GroupReducer","Login","RoleAccessUpdateData","CommonPageFieldReducer","fileds","id","Name","Group","GroupName","setState","values","isError","fieldLabel","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","hasValid","required","label","value","valid","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","push","fieldArr","PageFieldMaster","GroupValues","map","Data","formSubmitHandler","event","preventDefault","jsonBody","CreatedBy","CreatedOn","UpdatedBy","UpdatedOn","IsEditMode_Css","marginTop","PageHeading","PageDescription","PageDescriptionDetails","height","length","target","hasSelect","evn"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/SubGroupPages/SubGroupMaster.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport {\r\n    Breadcrumb_inputName,\r\n    commonPageField,\r\n    commonPageFieldSuccess,\r\n    editSubGroupIDSuccess,\r\n    getGroupList,\r\n    getSubGroupList,\r\n    getSubGroupListSuccess,\r\n    postSubGroupList,\r\n    postSubGroupSuccess,\r\n    updateSubGroupID,\r\n    updateSubgroupIDSuccess\r\n} from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n    onChangeSelect,\r\n    onChangeText,\r\n\r\n} from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\r\n// import { getGroupList } from \"../../../store/Administrator/GroupRedux/action\";\r\nimport { SUBGROUP_LIST } from \"../../../routes/route_url\"\r\nimport { SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\r\nimport { saveDissable } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\n\r\n\r\nconst SubGroupMaster = (props) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const [EditData, setEditData] = useState({});\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        postMsg,\r\n        groupList,\r\n        updateMsg,\r\n        pageField,\r\n        userAccess } = useSelector((state) => ({\r\n            postMsg: state.SubGroupReducer.postMsg,\r\n            updateMsg: state.SubGroupReducer.updateMsg,\r\n            groupList: state.GroupReducer.groupList,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageField\r\n        }));\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n\r\n    const fileds = {\r\n        id: \"\",\r\n        Name: \"\",\r\n        Group: \"\",\r\n        GroupName: \"\"\r\n    }\r\n\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(61))\r\n        dispatch(getGroupList())\r\n    }, []);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                setEditData(hasEditVal)\r\n\r\n                const { id, Name, Group, GroupName } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n\r\n                values.Name = Name;\r\n                values.id = id\r\n                values.Group = Group\r\n                values.GroupName = { label: GroupName, value: Group };\r\n\r\n                hasValid.id.valid = true;\r\n                hasValid.Name.valid = true;\r\n                hasValid.GroupName.valid = true;\r\n                hasValid.Group.valid = true;\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(Breadcrumb_inputName(hasEditVal.Name))\r\n\r\n            }\r\n            dispatch(editSubGroupIDSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(postSubGroupSuccess({ Status: false }))\r\n            setState(() => initialFiledFunc(fileds)) //+++++++++ Clear form values \r\n            saveDissable(false);//+++++++++save Button Is enable function\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: SUBGROUP_LIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            saveDissable(false);//+++++++++save Button Is enable function\r\n            dispatch(getSubGroupListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n        if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\r\n            saveDissable(false);//+++++++++Update Button Is enable function\r\n            setState(() => initialFiledFunc(fileds)) //+++++++++ Clear form values\r\n            history.push({\r\n                pathname: SUBGROUP_LIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            saveDissable(false);//+++++++++Update Button Is enable function\r\n            dispatch(updateSubgroupIDSuccess({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })// new change\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    // get method for dropdown\r\n    useEffect(() => {\r\n        dispatch(getSubGroupList());\r\n    }, [dispatch]);\r\n\r\n    const GroupValues = groupList.map((Data) => ({\r\n        value: Data.id,\r\n        label: Data.Name\r\n    }));\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                id: values.id,\r\n                Name: values.Name,\r\n                Group: values.GroupName.value,\r\n                CreatedBy: 1,\r\n                CreatedOn: \"2022-11-19T00:00:00\",\r\n                UpdatedBy: 1,\r\n                UpdatedOn: \"2022-11-19T00:00:00\"\r\n            });\r\n\r\n            saveDissable(true);//+++++++++save Button Is dissable function\r\n\r\n            if (pageMode === \"edit\") {\r\n                dispatch(updateSubGroupID(jsonBody, values.id));\r\n            }\r\n            else {\r\n                dispatch(postSubGroupList(jsonBody));\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    \r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb pageHeading={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black c_card_header\" >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" >\r\n                                <form onSubmit={formSubmitHandler}noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12} style={{ height: \"9cm\" }}>\r\n                                            <Card>\r\n                                                <CardBody className=\"c_card_body\">\r\n                                                    <Row>\r\n\r\n                                                        <Col sm=\"4\">\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n\r\n                                                                <Col>\r\n                                                                    <Input\r\n                                                                        name=\"Name\"\r\n                                                                        id=\"txtName\"\r\n                                                                        value={values.Name}\r\n                                                                        type=\"text\"\r\n                                                                        className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                        placeholder=\"Please Enter Name\"\r\n                                                                        autoComplete='off'\r\n                                                                        autoFocus={true}\r\n                                                                        onChange={(event) => {\r\n                                                                            onChangeText({ event, state, setState })\r\n                                                                            dispatch(Breadcrumb_inputName(event.target.value))\r\n                                                                        }}\r\n\r\n                                                                    />\r\n                                                                    {isError.Name.length > 0 && (\r\n                                                                        <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-3 col col-sm-4 \">\r\n\r\n                                                                <Label htmlFor=\"validationCustom01\"> {fieldLabel.GroupName} </Label>\r\n\r\n\r\n                                                                <Select\r\n                                                                    name=\"GroupName\"\r\n                                                                    // defaultValue={EmployeeType_DropdownOptions[0]}\r\n                                                                    value={values.GroupName}\r\n                                                                    isSearchable={true}\r\n                                                                    className=\"react-dropdown\"\r\n                                                                    options={GroupValues}\r\n                                                                    onChange={(hasSelect, evn) => onChangeSelect({ hasSelect, evn, state, setState, })}\r\n                                                                    classNamePrefix=\"dropdown\"\r\n                                                                />\r\n                                                                {isError.GroupName.length > 0 && (\r\n                                                                    <span className=\"text-danger f-8\"><small>{isError.GroupName}</small></span>\r\n                                                                )}\r\n\r\n\r\n\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup >\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <SaveButton pageMode={pageMode} userAcc={userPageAccessState}\r\n                                                                        module={\"GroupMaster\"}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default SubGroupMaster\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useRef, useState } from 'react'\r\n// import { MetaTags } from 'react-meta-tags'\r\n// import { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from 'reactstrap'\r\n// import Select from \"react-select\";\r\n// import SaveButton from '../../../components/Common/CommonSaveButton';\r\n// import { useHistory } from 'react-router-dom';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n\r\n// import { initialFiledFunc } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\r\n// import { commonPageField, commonPageFieldSuccess } from '../../../store/actions';\r\n\r\n\r\n// const SubGroupMaster = (props) => {\r\n\r\n//     const formRef = useRef(null);\r\n//     const history = useHistory()\r\n//     const dispatch = useDispatch();\r\n\r\n//     const [EditData, setEditData] = useState({});\r\n//     const [pageMode, setPageMode] = useState(\"\");\r\n//     const [modalCss, setModalCss] = useState(false);\r\n//     const [userPageAccessState, ssetUserPageAccessState] = useState('');\r\n\r\n//     const {\r\n\r\n//         pageField,\r\n//         userAccess } = useSelector((state) => ({\r\n//             userAccess: state.Login.RoleAccessUpdateData,\r\n//             pageField: state.CommonPageFieldReducer.pageField\r\n//         }));\r\n//     const initialFiled = {\r\n//         id: \"\",\r\n//         Name: \"\",\r\n//         GroupName: \"\"\r\n//     }\r\n\r\n//     const [state, setState] = useState(initialFiledFunc(initialFiled))\r\n//     const values = { ...state.values }\r\n//     const { isError } = state;\r\n//     const { fieldLabel } = state;\r\n\r\n//     useEffect(() => {\r\n//         dispatch(commonPageFieldSuccess(null));\r\n//         dispatch(commonPageField(50))\r\n//     }, []);\r\n//     const location = { ...history.location }\r\n//     // const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n//     const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n//     // userAccess useEffect\r\n//     useEffect(() => {\r\n//         let userAcc = null;\r\n//         let locationPath = location.pathname;\r\n\r\n//         if (hasShowModal) {\r\n//             locationPath = props.masterPath;\r\n//         };\r\n\r\n//         userAcc = userAccess.find((inx) => {\r\n//             return (`/${inx.ActualPagePath}` === locationPath)\r\n//         })\r\n\r\n//         if (userAcc) {\r\n//             ssetUserPageAccessState(userAcc)\r\n//         };\r\n//     }, [userAccess])\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div className=\"page-content\" >\r\n//                 <Container fluid>\r\n//                     <MetaTags>\r\n//                         <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n//                     </MetaTags>\r\n//                     {/* <Breadcrumb pageHeading={userPageAccessState.PageHeading} /> */}\r\n//                     <Card className=\"text-black\">\r\n//                         <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n//                             <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n//                             <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n//                         </CardHeader>\r\n\r\n//                         <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n//                             <form>\r\n//                                 <Row>\r\n//                                     <Col md={12} style={{ height: \"9cm\" }}>\r\n//                                         <Card>\r\n//                                             <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n//                                                 <Row>\r\n//                                                     <Col sm=\"4\">\r\n//                                                         <FormGroup className='mb-3'>\r\n//                                                             <Label></Label>\r\n\r\n//                                                             <Col>\r\n//                                                                 <Input\r\n//                                                                     name=\"Name\"\r\n//                                                                     type=\"text\"\r\n//                                                                     placeholder=\"Please Enter Name\"\r\n//                                                                     autoComplete='off'\r\n//                                                                     className=\"form-control\"\r\n//                                                                 />\r\n//                                                             </Col>\r\n//                                                         </FormGroup>\r\n//                                                     </Col>\r\n//                                                     <Row>\r\n//                                                         <FormGroup className=\"mb-3 col col-sm-4 \">\r\n\r\n//                                                             <Label></Label>\r\n\r\n//                                                             <Select\r\n//                                                                 classNamePrefix=\"dropdown\"\r\n//                                                                 className=\"react-dropdown\"\r\n//                                                             />\r\n//                                                         </FormGroup>\r\n//                                                     </Row>\r\n//                                                     <FormGroup>\r\n//                                                         <Row>\r\n//                                                             <Col sm={2}>\r\n//                                                                 {/* <SaveButton\r\n//                                                                 pageMode={pageMode} userAcc={userPageAccessState}\r\n//                                                                 module={\"\"}/> */}\r\n//                                                             </Col>\r\n//                                                         </Row>\r\n//                                                     </FormGroup>\r\n//                                                 </Row>\r\n//                                             </CardBody>\r\n//                                         </Card>\r\n\r\n//                                     </Col>\r\n//                                 </Row>\r\n\r\n\r\n\r\n\r\n\r\n//                             </form>\r\n\r\n//                         </CardBody>\r\n\r\n\r\n//                     </Card>\r\n\r\n\r\n\r\n//                 </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n//             </div>\r\n//         </React.Fragment>\r\n//     )\r\n// }\r\n\r\n// export default SubGroupMaster"],"mappings":"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},"metadata":{},"sourceType":"module"}