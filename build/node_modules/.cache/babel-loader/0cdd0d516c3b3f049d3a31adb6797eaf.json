{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as apiCall from \"../../../helpers/backend_helper\";\nimport * as actionType from \"./actionType\";\nimport * as action from \"./action\";\nimport { CommonConsole, amountCommaSeparateFunc, concatDateAndTime, date_dmy_func, loginCompanyID, loginPartyID } from \"../../../components/Common/CommonFunction\";\nimport * as url from \"../../../routes/route_url\"; // customer dropdown click then table values display\n\nfunction* ReceiptGoButtonGenFunc(_ref) {\n  let {\n    config\n  } = _ref;\n  const {\n    ListData,\n    jsonBody,\n    path,\n    pageMode\n  } = config;\n\n  try {\n    const response = yield call(apiCall.Receipt_Go_Button_API, config);\n    response[\"pageMode\"] = pageMode;\n    response[\"ListData\"] = ListData;\n    response[\"path\"] = path;\n    response.Data.map(index => {\n      // index.BalanceAmount = amountCommaSeparateFunc(index.BalanceAmount) //  BalanceAmount show with commas\n      // index.PaidAmount = amountCommaSeparateFunc(index.PaidAmount) //  PaidAmount show with commas\n      // index.GrandTotal = amountCommaSeparateFunc(index.GrandTotal) //  GrandTotal show with commas\n      index.InvoiceDate = concatDateAndTime(index.InvoiceDate, index.CreatedOn);\n      index[\"Calculate\"] = 0;\n      return index;\n    });\n    yield put(action.ReceiptGoButtonMaster_Success(response));\n  } catch (error) {\n    yield put(action.ReceiptAndPaymentApiErrorAction());\n  }\n} // OpeningBalance value\n\n\n_c = ReceiptGoButtonGenFunc;\n\nfunction* OpeningBalanceGenFunc(_ref2) {\n  let {\n    jsonBody\n  } = _ref2;\n\n  try {\n    const response = yield call(apiCall.Opening_balance_API, jsonBody);\n    yield put(action.GetOpeningBalance_Success(response.Data));\n  } catch (error) {\n    yield put(action.ReceiptAndPaymentApiErrorAction());\n  }\n} // Receipt List API\n\n\n_c2 = OpeningBalanceGenFunc;\n\nfunction* Receipt_List_GenFun(_ref3) {\n  let {\n    jsonBody,\n    subPageMode\n  } = _ref3;\n  let response;\n\n  try {\n    if (subPageMode === url.PAYMENT_ENTRY_LIST || subPageMode === url.RECEIPTS_LIST) {\n      response = yield call(apiCall.Receipt_Filter_API, jsonBody);\n    } else if (subPageMode === url.RECEIPTS_LIST_2) {\n      response = yield call(apiCall.Make_Receipt_to_Payment_API, jsonBody);\n    }\n\n    const newList = yield response.Data.map(i => {\n      i.AmountPaid = amountCommaSeparateFunc(i.AmountPaid); //  AmountPaid show with commas\n\n      i[\"preReceipDate\"] = i.ReceiptDate;\n      i.ReceiptDate = concatDateAndTime(i.ReceiptDate, i.CreatedOn);\n      i.ChequeDate = date_dmy_func(i.ChequeDate);\n      return i;\n    });\n    yield put(action.ReceiptListAPISuccess(newList));\n  } catch (error) {\n    yield put(action.ReceiptAndPaymentApiErrorAction());\n  }\n} // Post API \n\n\n_c3 = Receipt_List_GenFun;\n\nfunction* save_Receipt_GenFunc(_ref4) {\n  let {\n    config\n  } = _ref4;\n\n  try {\n    const response = yield call(apiCall.Receipt_Post_API, config);\n    yield put(action.saveReceiptMaster_Success(response));\n  } catch (error) {\n    yield put(action.ReceiptAndPaymentApiErrorAction());\n  }\n} // Receipt Type API\n\n\nfunction* Receipt_Type_GenFunc(_ref5) {\n  let {\n    jsonBody\n  } = _ref5;\n\n  try {\n    const response = yield call(apiCall.Receipt_Type_API, jsonBody);\n    yield put(action.ReceiptTypeAPISuccess(response.Data));\n  } catch (error) {\n    yield put(action.ReceiptAndPaymentApiErrorAction());\n  }\n} // delete API\n\n\n_c4 = Receipt_Type_GenFunc;\n\nfunction* Delete_Receipt_ID_GenFunc(_ref6) {\n  let {\n    config\n  } = _ref6;\n\n  try {\n    const response = yield call(apiCall.Receipt_Delete_API, config);\n    yield put(action.deleteReceiptList_Success(response));\n  } catch (error) {\n    yield put(action.ReceiptAndPaymentApiErrorAction());\n  }\n} // Bank list Dropdown API\n\n\n_c5 = Delete_Receipt_ID_GenFunc;\n\nfunction* Bank_List_GenFunc() {\n  const jsonBody = {\n    \"PartyID\": loginPartyID(),\n    \"CompanyID\": loginCompanyID()\n  };\n\n  try {\n    const response = yield call(apiCall.Bank_List_API, jsonBody);\n    yield put(action.BankListAPISuccess(response.Data));\n  } catch (error) {\n    yield put(action.ReceiptAndPaymentApiErrorAction());\n  }\n}\n\n_c6 = Bank_List_GenFunc;\n\nfunction* ReceiptSaga() {\n  yield takeEvery(actionType.RECEIPT_GO_BUTTON_MASTER, ReceiptGoButtonGenFunc);\n  yield takeEvery(actionType.GET_OPENING_BALANCE, OpeningBalanceGenFunc);\n  yield takeEvery(actionType.RECEIPT_LIST_API, Receipt_List_GenFun);\n  yield takeEvery(actionType.SAVE_RECEIPT_MASTER, save_Receipt_GenFunc);\n  yield takeEvery(actionType.RECEIPT_TYPE_API, Receipt_Type_GenFunc);\n  yield takeEvery(actionType.DELETE_RECEIPT_LIST, Delete_Receipt_ID_GenFunc);\n  yield takeEvery(actionType.BANK_LIST_API, Bank_List_GenFunc);\n}\n\n_c7 = ReceiptSaga;\nexport default ReceiptSaga;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ReceiptGoButtonGenFunc\");\n$RefreshReg$(_c2, \"OpeningBalanceGenFunc\");\n$RefreshReg$(_c3, \"Receipt_List_GenFun\");\n$RefreshReg$(_c4, \"Receipt_Type_GenFunc\");\n$RefreshReg$(_c5, \"Delete_Receipt_ID_GenFunc\");\n$RefreshReg$(_c6, \"Bank_List_GenFunc\");\n$RefreshReg$(_c7, \"ReceiptSaga\");","map":{"version":3,"names":["call","put","takeEvery","apiCall","actionType","action","CommonConsole","amountCommaSeparateFunc","concatDateAndTime","date_dmy_func","loginCompanyID","loginPartyID","url","ReceiptGoButtonGenFunc","config","ListData","jsonBody","path","pageMode","response","Receipt_Go_Button_API","Data","map","index","InvoiceDate","CreatedOn","ReceiptGoButtonMaster_Success","error","ReceiptAndPaymentApiErrorAction","OpeningBalanceGenFunc","Opening_balance_API","GetOpeningBalance_Success","Receipt_List_GenFun","subPageMode","PAYMENT_ENTRY_LIST","RECEIPTS_LIST","Receipt_Filter_API","RECEIPTS_LIST_2","Make_Receipt_to_Payment_API","newList","i","AmountPaid","ReceiptDate","ChequeDate","ReceiptListAPISuccess","save_Receipt_GenFunc","Receipt_Post_API","saveReceiptMaster_Success","Receipt_Type_GenFunc","Receipt_Type_API","ReceiptTypeAPISuccess","Delete_Receipt_ID_GenFunc","Receipt_Delete_API","deleteReceiptList_Success","Bank_List_GenFunc","Bank_List_API","BankListAPISuccess","ReceiptSaga","RECEIPT_GO_BUTTON_MASTER","GET_OPENING_BALANCE","RECEIPT_LIST_API","SAVE_RECEIPT_MASTER","RECEIPT_TYPE_API","DELETE_RECEIPT_LIST","BANK_LIST_API"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Accounting/Receipt/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport * as  apiCall from \"../../../helpers/backend_helper\";\r\nimport * as actionType from \"./actionType\";\r\nimport * as action from \"./action\";\r\nimport { CommonConsole, amountCommaSeparateFunc, concatDateAndTime, date_dmy_func, loginCompanyID, loginPartyID } from \"../../../components/Common/CommonFunction\";\r\nimport * as url from \"../../../routes/route_url\";\r\n\r\n// customer dropdown click then table values display\r\nfunction* ReceiptGoButtonGenFunc({ config }) {\r\n\r\n  const { ListData, jsonBody, path, pageMode } = config\r\n  try {\r\n    \r\n    const response = yield call(apiCall.Receipt_Go_Button_API, config);\r\n    response[\"pageMode\"] = pageMode;\r\n    response[\"ListData\"] = ListData;\r\n    response[\"path\"] = path;\r\n    response.Data.map((index) => {\r\n      // index.BalanceAmount = amountCommaSeparateFunc(index.BalanceAmount) //  BalanceAmount show with commas\r\n      // index.PaidAmount = amountCommaSeparateFunc(index.PaidAmount) //  PaidAmount show with commas\r\n      // index.GrandTotal = amountCommaSeparateFunc(index.GrandTotal) //  GrandTotal show with commas\r\n      index.InvoiceDate = concatDateAndTime(index.InvoiceDate, index.CreatedOn)\r\n      index[\"Calculate\"] = 0\r\n      return index\r\n    });\r\n\r\n    yield put(action.ReceiptGoButtonMaster_Success(response));\r\n  } catch (error) { yield put(action.ReceiptAndPaymentApiErrorAction()) }\r\n}\r\n\r\n// OpeningBalance value\r\nfunction* OpeningBalanceGenFunc({ jsonBody }) {\r\n\r\n  try {\r\n    const response = yield call(apiCall.Opening_balance_API, jsonBody);\r\n    yield put(action.GetOpeningBalance_Success(response.Data));\r\n  } catch (error) { yield put(action.ReceiptAndPaymentApiErrorAction()) }\r\n}\r\n\r\n// Receipt List API\r\nfunction* Receipt_List_GenFun({ jsonBody, subPageMode }) {\r\n\r\n  let response;\r\n  try {\r\n    if ((subPageMode === url.PAYMENT_ENTRY_LIST) || subPageMode === url.RECEIPTS_LIST) {\r\n      response = yield call(apiCall.Receipt_Filter_API, jsonBody);\r\n    }\r\n    else if (subPageMode === url.RECEIPTS_LIST_2) {\r\n      response = yield call(apiCall.Make_Receipt_to_Payment_API, jsonBody);\r\n    }\r\n\r\n    const newList = yield response.Data.map((i) => {\r\n      i.AmountPaid = amountCommaSeparateFunc(i.AmountPaid) //  AmountPaid show with commas\r\n      i[\"preReceipDate\"] = i.ReceiptDate;\r\n      i.ReceiptDate = concatDateAndTime(i.ReceiptDate, i.CreatedOn)\r\n      i.ChequeDate = date_dmy_func(i.ChequeDate)\r\n      return i\r\n    })\r\n\r\n    yield put(action.ReceiptListAPISuccess(newList));\r\n  } catch (error) { yield put(action.ReceiptAndPaymentApiErrorAction()) }\r\n}\r\n\r\n// Post API \r\nfunction* save_Receipt_GenFunc({ config }) {\r\n  try {\r\n    const response = yield call(apiCall.Receipt_Post_API, config);\r\n    yield put(action.saveReceiptMaster_Success(response));\r\n\r\n  } catch (error) { yield put(action.ReceiptAndPaymentApiErrorAction()) }\r\n}\r\n\r\n// Receipt Type API\r\nfunction* Receipt_Type_GenFunc({ jsonBody }) {\r\n\r\n  try {\r\n    const response = yield call(apiCall.Receipt_Type_API, jsonBody);\r\n    yield put(action.ReceiptTypeAPISuccess(response.Data));\r\n  } catch (error) { yield put(action.ReceiptAndPaymentApiErrorAction()) }\r\n}\r\n\r\n// delete API\r\nfunction* Delete_Receipt_ID_GenFunc({ config }) {\r\n\r\n  try {\r\n    const response = yield call(apiCall.Receipt_Delete_API, config);\r\n    yield put(action.deleteReceiptList_Success(response))\r\n  } catch (error) { yield put(action.ReceiptAndPaymentApiErrorAction()) }\r\n}\r\n\r\n// Bank list Dropdown API\r\nfunction* Bank_List_GenFunc() {\r\n  const jsonBody = { \"PartyID\": loginPartyID(), \"CompanyID\": loginCompanyID() }\r\n  try {\r\n    const response = yield call(apiCall.Bank_List_API, jsonBody);\r\n    yield put(action.BankListAPISuccess(response.Data));\r\n  } catch (error) { yield put(action.ReceiptAndPaymentApiErrorAction()) }\r\n}\r\n\r\nfunction* ReceiptSaga() {\r\n  yield takeEvery(actionType.RECEIPT_GO_BUTTON_MASTER, ReceiptGoButtonGenFunc)\r\n  yield takeEvery(actionType.GET_OPENING_BALANCE, OpeningBalanceGenFunc)\r\n  yield takeEvery(actionType.RECEIPT_LIST_API, Receipt_List_GenFun)\r\n  yield takeEvery(actionType.SAVE_RECEIPT_MASTER, save_Receipt_GenFunc)\r\n  yield takeEvery(actionType.RECEIPT_TYPE_API, Receipt_Type_GenFunc)\r\n  yield takeEvery(actionType.DELETE_RECEIPT_LIST, Delete_Receipt_ID_GenFunc)\r\n  yield takeEvery(actionType.BANK_LIST_API, Bank_List_GenFunc)\r\n\r\n}\r\nexport default ReceiptSaga;  "],"mappings":"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"},"metadata":{},"sourceType":"module"}