{"ast":null,"code":"export var calculateSalesReturnFunc=function calculateSalesReturnFunc(row){var rate=0;var quantity=0;var gstPercentage=0;if(row.rate!==''){rate=parseFloat(row.rate);}if(row.quantity!==''){quantity=parseFloat(row.quantity);}var basicAmount=rate*quantity;if(isNaN(basicAmount)){basicAmount=0;}if(row.gstPercentage!==''){gstPercentage=parseFloat(row.gstPercentage);}var gstAmount=basicAmount*gstPercentage/100;var totalAmount=gstAmount+basicAmount;var CGST_Amount=(gstAmount/2).toFixed(2);var SGST_Amount=CGST_Amount;var roundedGstAmount=gstAmount.toFixed(2);var roundedTotalAmount=totalAmount.toFixed(2);return{basicAmount:basicAmount,roundedGstAmount:roundedGstAmount,roundedTotalAmount:roundedTotalAmount,CGST_Amount:CGST_Amount,SGST_Amount:SGST_Amount};};export var return_discountCalculate_Func=function return_discountCalculate_Func(row){// Extract values from the input parameters\nvar rate=Number(row.Rate)||0;var qty=Number(row.Quantity)||0;var gstPercentage=Number(row.GSTPercentage)||0;var discount=Number(row.Discount)||0;var discountType=Number(row.DiscountType)&&Number(row.DiscountType)>0?Number(row.DiscountType):2;// Calculate the base amount\nvar basicAmount=rate*qty;// Calculate the discount amount based on the discount type\nvar disCountAmt=discountType===2?basicAmount-basicAmount/((100+discount)/100):qty*discount;// Calculate the discounted base amount\nvar discountBaseAmt=basicAmount-disCountAmt;// Calculate the GST amount\nvar gstAmt=discountBaseAmt*(gstPercentage/100);var CGST_Amount=Number((gstAmt/2).toFixed(2));var SGST_Amount=CGST_Amount;var IGST_Amount=0;//initial GST Amount \n// Calculate the total amount after discount and GST\nvar roundedGstAmount=CGST_Amount+SGST_Amount;var total=roundedGstAmount+discountBaseAmt;var GST_Percentage=Number(row.GSTPercentage)||0;var IGST_Percentage=0;var SGST_Percentage=GST_Percentage/2;var CGST_Percentage=GST_Percentage/2;// Return the calculated values as an object\nreturn{discountBaseAmt:Number(discountBaseAmt.toFixed(2)),disCountAmt:Number(disCountAmt.toFixed(2)),roundedGstAmount:Number(roundedGstAmount.toFixed(2)),roundedTotalAmount:Number(total.toFixed(2)),CGST_Amount:CGST_Amount,SGST_Amount:SGST_Amount,IGST_Amount:IGST_Amount,GST_Percentage:GST_Percentage.toFixed(2),CGST_Percentage:CGST_Percentage.toFixed(2),SGST_Percentage:SGST_Percentage.toFixed(2),IGST_Percentage:IGST_Percentage.toFixed(2),discount:discount,discountType:discountType};};","map":{"version":3,"names":["calculateSalesReturnFunc","row","rate","quantity","gstPercentage","parseFloat","basicAmount","isNaN","gstAmount","totalAmount","CGST_Amount","toFixed","SGST_Amount","roundedGstAmount","roundedTotalAmount","return_discountCalculate_Func","Number","Rate","qty","Quantity","GSTPercentage","discount","Discount","discountType","DiscountType","disCountAmt","discountBaseAmt","gstAmt","IGST_Amount","total","GST_Percentage","IGST_Percentage","SGST_Percentage","CGST_Percentage"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Purchase/Return/PurchaseReturnCalculation.js"],"sourcesContent":["\r\nexport const calculateSalesReturnFunc = (row) => {\r\n    let rate = 0;\r\n    let quantity = 0;\r\n    let gstPercentage = 0;\r\n\r\n    if (row.rate !== '') {\r\n        rate = parseFloat(row.rate);\r\n    }\r\n\r\n    if (row.quantity !== '') {\r\n        quantity = parseFloat(row.quantity);\r\n    }\r\n\r\n    let basicAmount = rate * quantity;\r\n    if (isNaN(basicAmount)) {\r\n        basicAmount = 0;\r\n    }\r\n\r\n    if (row.gstPercentage !== '') {\r\n        gstPercentage = parseFloat(row.gstPercentage);\r\n    }\r\n\r\n    let gstAmount = (basicAmount * gstPercentage) / 100;\r\n    const totalAmount = gstAmount + basicAmount;\r\n    const CGST_Amount = (gstAmount / 2).toFixed(2);\r\n    const SGST_Amount = CGST_Amount;\r\n    const roundedGstAmount = gstAmount.toFixed(2);\r\n    const roundedTotalAmount = totalAmount.toFixed(2);\r\n\r\n    return {\r\n        basicAmount,\r\n        roundedGstAmount,\r\n        roundedTotalAmount,\r\n        CGST_Amount,\r\n        SGST_Amount,\r\n    };\r\n};\r\n\r\nexport const return_discountCalculate_Func = (row,) => {\r\n    // Extract values from the input parameters\r\n    const rate = Number(row.Rate) || 0;\r\n    const qty = Number(row.Quantity) || 0;\r\n    const gstPercentage = Number(row.GSTPercentage) || 0;\r\n    const discount = Number(row.Discount) || 0;\r\n    const discountType = Number(row.DiscountType) && Number(row.DiscountType) > 0 ? Number(row.DiscountType) : 2;\r\n\r\n    // Calculate the base amount\r\n    const basicAmount = rate * qty;\r\n\r\n    // Calculate the discount amount based on the discount type\r\n    const disCountAmt = discountType === 2 ? basicAmount - (basicAmount / ((100 + discount) / 100)) : qty * discount;\r\n\r\n    // Calculate the discounted base amount\r\n    const discountBaseAmt = basicAmount - disCountAmt;\r\n\r\n    // Calculate the GST amount\r\n    let gstAmt = discountBaseAmt * (gstPercentage / 100);\r\n    let CGST_Amount = Number((gstAmt / 2).toFixed(2));\r\n    let SGST_Amount = CGST_Amount;\r\n    let IGST_Amount = 0 //initial GST Amount \r\n\r\n    // Calculate the total amount after discount and GST\r\n    const roundedGstAmount = CGST_Amount + SGST_Amount;\r\n    let total = roundedGstAmount + discountBaseAmt;\r\n\r\n    let GST_Percentage = Number(row.GSTPercentage) || 0;\r\n    let IGST_Percentage = 0;\r\n    let SGST_Percentage = (GST_Percentage / 2);\r\n    let CGST_Percentage = (GST_Percentage / 2);\r\n\r\n\r\n    // Return the calculated values as an object\r\n    return {\r\n        discountBaseAmt: Number(discountBaseAmt.toFixed(2)),\r\n        disCountAmt: Number(disCountAmt.toFixed(2)),\r\n        roundedGstAmount: Number(roundedGstAmount.toFixed(2)),\r\n        roundedTotalAmount: Number(total.toFixed(2)),\r\n        CGST_Amount,\r\n        SGST_Amount,\r\n        IGST_Amount,\r\n        GST_Percentage: GST_Percentage.toFixed(2),\r\n        CGST_Percentage: CGST_Percentage.toFixed(2),\r\n        SGST_Percentage: SGST_Percentage.toFixed(2),\r\n        IGST_Percentage: IGST_Percentage.toFixed(2),\r\n        discount,\r\n        discountType\r\n    };\r\n};\r\n\r\n"],"mappings":"AACA,MAAO,IAAMA,yBAAwB,CAAG,QAA3BA,yBAA2B,CAACC,GAAD,CAAS,CAC7C,GAAIC,KAAI,CAAG,CAAX,CACA,GAAIC,SAAQ,CAAG,CAAf,CACA,GAAIC,cAAa,CAAG,CAApB,CAEA,GAAIH,GAAG,CAACC,IAAJ,GAAa,EAAjB,CAAqB,CACjBA,IAAI,CAAGG,UAAU,CAACJ,GAAG,CAACC,IAAL,CAAjB,CACH,CAED,GAAID,GAAG,CAACE,QAAJ,GAAiB,EAArB,CAAyB,CACrBA,QAAQ,CAAGE,UAAU,CAACJ,GAAG,CAACE,QAAL,CAArB,CACH,CAED,GAAIG,YAAW,CAAGJ,IAAI,CAAGC,QAAzB,CACA,GAAII,KAAK,CAACD,WAAD,CAAT,CAAwB,CACpBA,WAAW,CAAG,CAAd,CACH,CAED,GAAIL,GAAG,CAACG,aAAJ,GAAsB,EAA1B,CAA8B,CAC1BA,aAAa,CAAGC,UAAU,CAACJ,GAAG,CAACG,aAAL,CAA1B,CACH,CAED,GAAII,UAAS,CAAIF,WAAW,CAAGF,aAAf,CAAgC,GAAhD,CACA,GAAMK,YAAW,CAAGD,SAAS,CAAGF,WAAhC,CACA,GAAMI,YAAW,CAAG,CAACF,SAAS,CAAG,CAAb,EAAgBG,OAAhB,CAAwB,CAAxB,CAApB,CACA,GAAMC,YAAW,CAAGF,WAApB,CACA,GAAMG,iBAAgB,CAAGL,SAAS,CAACG,OAAV,CAAkB,CAAlB,CAAzB,CACA,GAAMG,mBAAkB,CAAGL,WAAW,CAACE,OAAZ,CAAoB,CAApB,CAA3B,CAEA,MAAO,CACHL,WAAW,CAAXA,WADG,CAEHO,gBAAgB,CAAhBA,gBAFG,CAGHC,kBAAkB,CAAlBA,kBAHG,CAIHJ,WAAW,CAAXA,WAJG,CAKHE,WAAW,CAAXA,WALG,CAAP,CAOH,CApCM,CAsCP,MAAO,IAAMG,8BAA6B,CAAG,QAAhCA,8BAAgC,CAACd,GAAD,CAAU,CACnD;AACA,GAAMC,KAAI,CAAGc,MAAM,CAACf,GAAG,CAACgB,IAAL,CAAN,EAAoB,CAAjC,CACA,GAAMC,IAAG,CAAGF,MAAM,CAACf,GAAG,CAACkB,QAAL,CAAN,EAAwB,CAApC,CACA,GAAMf,cAAa,CAAGY,MAAM,CAACf,GAAG,CAACmB,aAAL,CAAN,EAA6B,CAAnD,CACA,GAAMC,SAAQ,CAAGL,MAAM,CAACf,GAAG,CAACqB,QAAL,CAAN,EAAwB,CAAzC,CACA,GAAMC,aAAY,CAAGP,MAAM,CAACf,GAAG,CAACuB,YAAL,CAAN,EAA4BR,MAAM,CAACf,GAAG,CAACuB,YAAL,CAAN,CAA2B,CAAvD,CAA2DR,MAAM,CAACf,GAAG,CAACuB,YAAL,CAAjE,CAAsF,CAA3G,CAEA;AACA,GAAMlB,YAAW,CAAGJ,IAAI,CAAGgB,GAA3B,CAEA;AACA,GAAMO,YAAW,CAAGF,YAAY,GAAK,CAAjB,CAAqBjB,WAAW,CAAIA,WAAW,EAAI,CAAC,IAAMe,QAAP,EAAmB,GAAvB,CAA/C,CAA8EH,GAAG,CAAGG,QAAxG,CAEA;AACA,GAAMK,gBAAe,CAAGpB,WAAW,CAAGmB,WAAtC,CAEA;AACA,GAAIE,OAAM,CAAGD,eAAe,EAAItB,aAAa,CAAG,GAApB,CAA5B,CACA,GAAIM,YAAW,CAAGM,MAAM,CAAC,CAACW,MAAM,CAAG,CAAV,EAAahB,OAAb,CAAqB,CAArB,CAAD,CAAxB,CACA,GAAIC,YAAW,CAAGF,WAAlB,CACA,GAAIkB,YAAW,CAAG,CAAlB,CAAoB;AAEpB;AACA,GAAMf,iBAAgB,CAAGH,WAAW,CAAGE,WAAvC,CACA,GAAIiB,MAAK,CAAGhB,gBAAgB,CAAGa,eAA/B,CAEA,GAAII,eAAc,CAAGd,MAAM,CAACf,GAAG,CAACmB,aAAL,CAAN,EAA6B,CAAlD,CACA,GAAIW,gBAAe,CAAG,CAAtB,CACA,GAAIC,gBAAe,CAAIF,cAAc,CAAG,CAAxC,CACA,GAAIG,gBAAe,CAAIH,cAAc,CAAG,CAAxC,CAGA;AACA,MAAO,CACHJ,eAAe,CAAEV,MAAM,CAACU,eAAe,CAACf,OAAhB,CAAwB,CAAxB,CAAD,CADpB,CAEHc,WAAW,CAAET,MAAM,CAACS,WAAW,CAACd,OAAZ,CAAoB,CAApB,CAAD,CAFhB,CAGHE,gBAAgB,CAAEG,MAAM,CAACH,gBAAgB,CAACF,OAAjB,CAAyB,CAAzB,CAAD,CAHrB,CAIHG,kBAAkB,CAAEE,MAAM,CAACa,KAAK,CAAClB,OAAN,CAAc,CAAd,CAAD,CAJvB,CAKHD,WAAW,CAAXA,WALG,CAMHE,WAAW,CAAXA,WANG,CAOHgB,WAAW,CAAXA,WAPG,CAQHE,cAAc,CAAEA,cAAc,CAACnB,OAAf,CAAuB,CAAvB,CARb,CASHsB,eAAe,CAAEA,eAAe,CAACtB,OAAhB,CAAwB,CAAxB,CATd,CAUHqB,eAAe,CAAEA,eAAe,CAACrB,OAAhB,CAAwB,CAAxB,CAVd,CAWHoB,eAAe,CAAEA,eAAe,CAACpB,OAAhB,CAAwB,CAAxB,CAXd,CAYHU,QAAQ,CAARA,QAZG,CAaHE,YAAY,CAAZA,YAbG,CAAP,CAeH,CAjDM"},"metadata":{},"sourceType":"module"}