{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { getpartysettingApiErrorAction, getpartysetting_API_Success, postOrderSummary_API_Success, savePartySettingMaster_Success } from \"./action\";\nimport { GET_PARTY_SETTING_API, SAVE_PARTY_SETTING_MASTER } from \"./actionType\";\nimport { PartySettingApi, save_PartySetting_API } from \"../../../helpers/backend_helper\";\n\nfunction* Save_Method_ForPartySetting_GenFun(_ref) {\n  let {\n    config\n  } = _ref;\n\n  try {\n    const response = yield call(save_PartySetting_API, config);\n    yield put(savePartySettingMaster_Success(response));\n  } catch (error) {\n    yield put(getpartysettingApiErrorAction());\n  }\n}\n\n_c = Save_Method_ForPartySetting_GenFun;\n\nfunction* PartySetting_GenFunc(config) {\n  try {\n    const response = yield call(PartySettingApi, config.Party_id, config.Comapny_id);\n    const singleObject = {};\n    const SystemSetting = {};\n\n    for (const item of response.Data) {\n      SystemSetting[item.SystemSetting.replace(/\\s/g, '')] = item.Value;\n      singleObject[item.SystemSetting.replace(/\\s/g, '')] = {\n        SystemSetting: item.SystemSetting,\n        Value: item.Value,\n        id: item.id\n      };\n    }\n\n    response[\"Data\"] = singleObject;\n    sessionStorage.setItem(\"SystemSetting\", JSON.stringify(SystemSetting));\n    response['SystemSetting'] = SystemSetting;\n    yield put(getpartysetting_API_Success(response));\n  } catch (error) {\n    yield put(getpartysettingApiErrorAction());\n  }\n}\n\n_c2 = PartySetting_GenFunc;\n\nfunction* PartySettingSaga() {\n  yield takeLatest(SAVE_PARTY_SETTING_MASTER, Save_Method_ForPartySetting_GenFun);\n  yield takeLatest(GET_PARTY_SETTING_API, PartySetting_GenFunc);\n}\n\n_c3 = PartySettingSaga;\nexport default PartySettingSaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Save_Method_ForPartySetting_GenFun\");\n$RefreshReg$(_c2, \"PartySetting_GenFunc\");\n$RefreshReg$(_c3, \"PartySettingSaga\");","map":{"version":3,"names":["call","put","takeLatest","getpartysettingApiErrorAction","getpartysetting_API_Success","postOrderSummary_API_Success","savePartySettingMaster_Success","GET_PARTY_SETTING_API","SAVE_PARTY_SETTING_MASTER","PartySettingApi","save_PartySetting_API","Save_Method_ForPartySetting_GenFun","config","response","error","PartySetting_GenFunc","Party_id","Comapny_id","singleObject","SystemSetting","item","Data","replace","Value","id","sessionStorage","setItem","JSON","stringify","PartySettingSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Administrator/PartySetting/saga.js"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { getpartysettingApiErrorAction, getpartysetting_API_Success, postOrderSummary_API_Success, savePartySettingMaster_Success } from \"./action\";\r\nimport { GET_PARTY_SETTING_API, SAVE_PARTY_SETTING_MASTER } from \"./actionType\";\r\nimport { PartySettingApi, save_PartySetting_API } from \"../../../helpers/backend_helper\";\r\n\r\n\r\n\r\nfunction* Save_Method_ForPartySetting_GenFun({ config }) {\r\n\r\n    try {\r\n\r\n        const response = yield call(save_PartySetting_API, config);\r\n        yield put(savePartySettingMaster_Success(response));\r\n    } catch (error) { yield put(getpartysettingApiErrorAction()) }\r\n}\r\n\r\nfunction* PartySetting_GenFunc(config) {\r\n\r\n    try {\r\n        \r\n        const response = yield call(PartySettingApi, config.Party_id, config.Comapny_id);\r\n        const singleObject = {};\r\n        const SystemSetting = {};\r\n        for (const item of response.Data) {\r\n            SystemSetting[item.SystemSetting.replace(/\\s/g, '')] = item.Value\r\n            singleObject[item.SystemSetting.replace(/\\s/g, '')] = {\r\n                SystemSetting: item.SystemSetting,\r\n                Value: item.Value,\r\n                id: item.id\r\n            };\r\n\r\n        }\r\n        response[\"Data\"] = singleObject\r\n        sessionStorage.setItem(\"SystemSetting\", JSON.stringify(SystemSetting))\r\n\r\n        response['SystemSetting'] = SystemSetting\r\n        yield put(getpartysetting_API_Success(response))\r\n\r\n    } catch (error) { yield put(getpartysettingApiErrorAction()) }\r\n}\r\n\r\nfunction* PartySettingSaga() {\r\n    yield takeLatest(SAVE_PARTY_SETTING_MASTER, Save_Method_ForPartySetting_GenFun)\r\n    yield takeLatest(GET_PARTY_SETTING_API, PartySetting_GenFunc)\r\n}\r\n\r\nexport default PartySettingSaga;"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,6BAAT,EAAwCC,2BAAxC,EAAqEC,4BAArE,EAAmGC,8BAAnG,QAAyI,UAAzI;AACA,SAASC,qBAAT,EAAgCC,yBAAhC,QAAiE,cAAjE;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,iCAAvD;;AAIA,UAAUC,kCAAV,OAAyD;EAAA,IAAZ;IAAEC;EAAF,CAAY;;EAErD,IAAI;IAEA,MAAMC,QAAQ,GAAG,MAAMb,IAAI,CAACU,qBAAD,EAAwBE,MAAxB,CAA3B;IACA,MAAMX,GAAG,CAACK,8BAA8B,CAACO,QAAD,CAA/B,CAAT;EACH,CAJD,CAIE,OAAOC,KAAP,EAAc;IAAE,MAAMb,GAAG,CAACE,6BAA6B,EAA9B,CAAT;EAA4C;AACjE;;KAPSQ,kC;;AASV,UAAUI,oBAAV,CAA+BH,MAA/B,EAAuC;EAEnC,IAAI;IAEA,MAAMC,QAAQ,GAAG,MAAMb,IAAI,CAACS,eAAD,EAAkBG,MAAM,CAACI,QAAzB,EAAmCJ,MAAM,CAACK,UAA1C,CAA3B;IACA,MAAMC,YAAY,GAAG,EAArB;IACA,MAAMC,aAAa,GAAG,EAAtB;;IACA,KAAK,MAAMC,IAAX,IAAmBP,QAAQ,CAACQ,IAA5B,EAAkC;MAC9BF,aAAa,CAACC,IAAI,CAACD,aAAL,CAAmBG,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,CAAD,CAAb,GAAuDF,IAAI,CAACG,KAA5D;MACAL,YAAY,CAACE,IAAI,CAACD,aAAL,CAAmBG,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,CAAD,CAAZ,GAAsD;QAClDH,aAAa,EAAEC,IAAI,CAACD,aAD8B;QAElDI,KAAK,EAAEH,IAAI,CAACG,KAFsC;QAGlDC,EAAE,EAAEJ,IAAI,CAACI;MAHyC,CAAtD;IAMH;;IACDX,QAAQ,CAAC,MAAD,CAAR,GAAmBK,YAAnB;IACAO,cAAc,CAACC,OAAf,CAAuB,eAAvB,EAAwCC,IAAI,CAACC,SAAL,CAAeT,aAAf,CAAxC;IAEAN,QAAQ,CAAC,eAAD,CAAR,GAA4BM,aAA5B;IACA,MAAMlB,GAAG,CAACG,2BAA2B,CAACS,QAAD,CAA5B,CAAT;EAEH,CApBD,CAoBE,OAAOC,KAAP,EAAc;IAAE,MAAMb,GAAG,CAACE,6BAA6B,EAA9B,CAAT;EAA4C;AACjE;;MAvBSY,oB;;AAyBV,UAAUc,gBAAV,GAA6B;EACzB,MAAM3B,UAAU,CAACM,yBAAD,EAA4BG,kCAA5B,CAAhB;EACA,MAAMT,UAAU,CAACK,qBAAD,EAAwBQ,oBAAxB,CAAhB;AACH;;MAHSc,gB;AAKV,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}