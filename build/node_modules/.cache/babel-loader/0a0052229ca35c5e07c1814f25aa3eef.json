{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\routes\\\\middleware\\\\Authmiddleware.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { sessionAliveNewToken } from \"../../store/auth/sessionAlive/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet intervalId;\n\nconst Authmiddleware = _ref => {\n  _s();\n\n  let {\n    history: history,\n    component: Component,\n    layout: Layout,\n    isAuthProtected,\n    ...rest\n  } = _ref;\n  const [islogOut, setIsLogOut] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isAuthProtected) {\n      let timer;\n\n      const hasNoActivity = () => {\n        const now = new Date().getTime();\n        const timeSinceLastActivity = now - sessionStorage.getItem('keepSessionAlive2');\n        const minutesSinceLastActivity = Math.floor(timeSinceLastActivity / 1000 / 60);\n\n        if (minutesSinceLastActivity >= 29) {\n          //console.log(\" hasNoActivity===minutesSinceLastActivity==lesstahn 1\", new Date())  //##########################\n          clearInterval(intervalId);\n          clearInterval(timer);\n          sessionStorage.clear();\n          localStorage.clear();\n          setIsLogOut(true);\n          history.push({\n            pathname: '/logout'\n          });\n          window.location.reload(true);\n        } else {\n          //console.log(\" hasNoActivity===reset==less\", new Date()) //##########################\n          resetTimer();\n        }\n      };\n\n      const startTimer = () => {\n        //console.log(\" startTimer\", new Date()) //##########################\n        timer = setInterval(hasNoActivity, 30 * 60 * 1000);\n      };\n\n      const resetTimer = () => {\n        //console.log(\" resetTimer\", new Date())  //##########################\n        sessionStorage.setItem('keepSessionAlive2', new Date().getTime());\n        clearInterval(timer);\n        startTimer();\n      };\n\n      let hasActivity = sessionStorage.getItem('lastActivityTime', new Date());\n      !hasActivity && keepSessionAlive(dispatch);\n      localStorage.getItem(\"token\") && startTimer();\n      window.addEventListener('keydown', resetTimer);\n      window.addEventListener('mousemove', resetTimer);\n      window.addEventListener('keypress', resetTimer);\n      return () => {\n        //console.log(\" return autologout will mount\", new Date())  //##########################\n        clearInterval(timer);\n        document.removeEventListener('keydown', resetTimer);\n        window.removeEventListener('mousemove', resetTimer);\n        window.removeEventListener('keypress', resetTimer);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        if (islogOut || isAuthProtected && !localStorage.getItem(\"token\")) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: \"/login\",\n              state: {\n                from: props.location\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Authmiddleware, \"fIa9FvGlZXQXX/pVm2BTSYBsg+E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Authmiddleware;\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any,\n  userPageAccess: PropTypes.any,\n  history: PropTypes.object\n};\nexport default Authmiddleware;\n\nconst updateTokan = dispatch => {\n  let istoken = localStorage.getItem(\"refreshToken\");\n\n  if (istoken) {\n    //console.log(\" keepSessionAlive  api call\", new Date()) //##########################\n    let jsonBody = {\n      \"refresh\": `${istoken}`\n    };\n    dispatch(sessionAliveNewToken(jsonBody));\n  }\n};\n\nconst keepSessionAlive = dispatch => {\n  //console.log(\" keepSessionAlive\", new Date()) //##########################\n  sessionStorage.setItem('keepSessionAlive', new Date());\n  intervalId = setInterval(() => updateTokan(dispatch), 28 * 60 * 1000);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Authmiddleware\");","map":{"version":3,"names":["React","useEffect","PropTypes","Route","Redirect","useState","useDispatch","sessionAliveNewToken","intervalId","Authmiddleware","history","component","Component","layout","Layout","isAuthProtected","rest","islogOut","setIsLogOut","dispatch","timer","hasNoActivity","now","Date","getTime","timeSinceLastActivity","sessionStorage","getItem","minutesSinceLastActivity","Math","floor","clearInterval","clear","localStorage","push","pathname","window","location","reload","resetTimer","startTimer","setInterval","setItem","hasActivity","keepSessionAlive","addEventListener","document","removeEventListener","props","state","from","propTypes","bool","any","object","userPageAccess","updateTokan","istoken","jsonBody"],"sources":["D:/Rohit/Git projects/Manthan/src/routes/middleware/Authmiddleware.js"],"sourcesContent":["import React, { useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { sessionAliveNewToken } from \"../../store/auth/sessionAlive/actions\"\r\n\r\nlet intervalId\r\n\r\nconst Authmiddleware = ({\r\n  history: history,\r\n  component: Component,\r\n  layout: Layout,\r\n  isAuthProtected,\r\n  ...rest\r\n}) => {\r\n\r\n  const [islogOut, setIsLogOut] = useState(false)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    if (isAuthProtected) {\r\n\r\n\r\n      let timer\r\n\r\n      const hasNoActivity = () => {\r\n\r\n        const now = new Date().getTime();\r\n        const timeSinceLastActivity = now - sessionStorage.getItem('keepSessionAlive2');\r\n        const minutesSinceLastActivity = Math.floor((timeSinceLastActivity / 1000) / 60);\r\n      \r\n        if (minutesSinceLastActivity >= 29) {\r\n          //console.log(\" hasNoActivity===minutesSinceLastActivity==lesstahn 1\", new Date())  //##########################\r\n\r\n          clearInterval(intervalId);\r\n          clearInterval(timer);\r\n          sessionStorage.clear()\r\n          localStorage.clear()\r\n          setIsLogOut(true)\r\n          history.push({ pathname: '/logout' })\r\n          window.location.reload(true)\r\n        } else {\r\n          //console.log(\" hasNoActivity===reset==less\", new Date()) //##########################\r\n          resetTimer();\r\n        }\r\n\r\n      }\r\n\r\n      const startTimer = () => {\r\n        //console.log(\" startTimer\", new Date()) //##########################\r\n        timer = setInterval(hasNoActivity, 30 * 60 * 1000);\r\n      };\r\n\r\n      const resetTimer = () => {\r\n        //console.log(\" resetTimer\", new Date())  //##########################\r\n        sessionStorage.setItem('keepSessionAlive2', new Date().getTime())\r\n        clearInterval(timer);\r\n        startTimer();\r\n      };\r\n\r\n      let hasActivity = sessionStorage.getItem('lastActivityTime', new Date())\r\n      !hasActivity && keepSessionAlive(dispatch);\r\n      localStorage.getItem(\"token\") && startTimer()\r\n\r\n      window.addEventListener('keydown', resetTimer);\r\n      window.addEventListener('mousemove', resetTimer);\r\n      window.addEventListener('keypress', resetTimer);\r\n\r\n\r\n      return () => {\r\n        //console.log(\" return autologout will mount\", new Date())  //##########################\r\n\r\n        clearInterval(timer);\r\n        document.removeEventListener('keydown', resetTimer);\r\n        window.removeEventListener('mousemove', resetTimer);\r\n        window.removeEventListener('keypress', resetTimer);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n\r\n      <Route\r\n        {...rest}\r\n\r\n        render={props => {\r\n\r\n          if (islogOut || (isAuthProtected && !localStorage.getItem(\"token\"))) {\r\n            return (\r\n              <Redirect\r\n                to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n            )\r\n          }\r\n          return (\r\n            <Layout>\r\n              <Component {...props} />\r\n            </Layout>\r\n          )\r\n        }}\r\n      /></>\r\n  )\r\n}\r\n\r\nAuthmiddleware.propTypes = {\r\n  isAuthProtected: PropTypes.bool,\r\n  component: PropTypes.any,\r\n  location: PropTypes.object,\r\n  layout: PropTypes.any,\r\n  userPageAccess: PropTypes.any,\r\n  history: PropTypes.object,\r\n}\r\n\r\nexport default Authmiddleware;\r\n\r\n\r\nconst updateTokan = (dispatch) => {\r\n  let istoken = localStorage.getItem(\"refreshToken\")\r\n  if (istoken) {\r\n    //console.log(\" keepSessionAlive  api call\", new Date()) //##########################\r\n\r\n    let jsonBody = { \"refresh\": `${istoken}` }\r\n    dispatch(sessionAliveNewToken(jsonBody))\r\n  }\r\n}\r\n\r\nconst keepSessionAlive = (dispatch) => {\r\n  //console.log(\" keepSessionAlive\", new Date()) //##########################\r\n\r\n  sessionStorage.setItem('keepSessionAlive', new Date())\r\n  intervalId = setInterval(() => updateTokan(dispatch), 28 * 60 * 1000)\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}