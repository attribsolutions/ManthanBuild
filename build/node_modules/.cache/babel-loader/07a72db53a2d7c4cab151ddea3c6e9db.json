{"ast":null,"code":"import { groupBy } from \"../../components/Common/CommonFunction\"; // original\n\nexport const columns = [\"HSN Item Name\", \"Quantity\", \"Rate\", \"BasicAmt \", \"CGST%\", \"CGSTAmt \", \"SGST%\", \"SGSTAmt\", \"Total Amt\"];\nexport const PageHedercolumns = [\"Billed by\", \"Billed to\", ''];\nexport const Footercolumn = [\"\"];\nexport const BilledBy = [\"Billed by\"];\nexport const BilledTo = [\"Billed by\"];\nexport const DetailsOfTransport = [\"Billed by\"];\nexport const Rows = data => {\n  const {\n    OrderItem = []\n  } = data;\n  let hasHedRow = [];\n  const grouped = groupBy(OrderItem, ele => ele.GSTPercentage);\n  console.log(grouped);\n  grouped.forEach(i => {\n    if (i.length > 0) {\n      let totalBasicAmount = 0;\n      let totalCGst = 0;\n      let totalSGst = 0;\n      let totalAmount = 0;\n      let totalQuantity = 0;\n      i.forEach(element => {\n        const tableitemRow = [`(${element.HSNCode}) ${element.ItemName}     \n                     ${element.Comment === null ? \"\" : element.Comment}`, `${Number(element.Quantity).toFixed(2)} ${element.UnitName}`, element.Rate, element.BasicAmount, `${element.CGSTPercentage}%`, element.CGST, `${element.SGSTPercentage}%`, element.SGST, element.Amount, \"row\"];\n        totalQuantity = Number(totalQuantity) + Number(element.Quantity);\n        totalCGst = Number(totalCGst) + Number(element.CGST);\n        totalSGst = Number(totalSGst) + Number(element.SGST);\n        totalAmount = Number(totalAmount) + Number(element.Amount);\n        totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount);\n        hasHedRow.push(tableitemRow);\n      });\n\n      function totalrow() {\n        return [\"\", \"\", `TotalBasic:${parseFloat(totalBasicAmount).toFixed(2)}`, \"\", `Total:${parseFloat(totalCGst).toFixed(2)}`, \"isaddition\", `Total:${parseFloat(totalSGst).toFixed(2)}`, \"\", `Total:${parseFloat(totalAmount).toFixed(2)}`];\n      }\n\n      ;\n      hasHedRow.push(totalrow());\n    }\n  });\n  return hasHedRow;\n};\n_c = Rows;\nexport const ReportFotterColumns = [\"SGST\", \"CGST\", \"Quantity\", \"GST % \", \"TaxbleAmt.\", \"IGST\", \"Total Amt\"];\nexport const ReportFotterColumns2 = [\"SGST\"];\nexport const ReportRows = (data, doc) => {\n  const terms = data.OrderTermsAndCondition;\n  const slicedArray = terms.slice(0, 2);\n  var TableArray = [[\"Terms And Condition\"], [`${slicedArray[0] === undefined ? \"\" : slicedArray[0].TermsAndCondition}`], [`${slicedArray[1] === undefined ? \"\" : slicedArray[1].TermsAndCondition}`]];\n  return TableArray;\n};\n_c2 = ReportRows;\nexport const BilledByRow = data => {\n  var BilledByArray = [[`${data.SupplierName}`], [`${data.SupplierAddress}`], [`FSSAI:${data.SupplierFssai}`]];\n  return BilledByArray;\n};\n_c3 = BilledByRow;\nexport const BilledToRow = data => {\n  var BilledToArray = [[`${data.CustomerName}`], [`${data.BillingAddress}`], [`FSSAI:${data.BillingFssai}`]];\n  return BilledToArray;\n};\n_c4 = BilledToRow;\nexport const DetailsOfTransportRow = data => {\n  var DetailsOfTransportArray = [[`${data.POTypeName}`], [`${data.CustomerName}`], [`${data.BillingAddress}`], [`FSSAI:${data.ShippingFssai}`]];\n  return DetailsOfTransportArray;\n};\n_c5 = DetailsOfTransportRow;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Rows\");\n$RefreshReg$(_c2, \"ReportRows\");\n$RefreshReg$(_c3, \"BilledByRow\");\n$RefreshReg$(_c4, \"BilledToRow\");\n$RefreshReg$(_c5, \"DetailsOfTransportRow\");","map":{"version":3,"names":["groupBy","columns","PageHedercolumns","Footercolumn","BilledBy","BilledTo","DetailsOfTransport","Rows","data","OrderItem","hasHedRow","grouped","ele","GSTPercentage","console","log","forEach","i","length","totalBasicAmount","totalCGst","totalSGst","totalAmount","totalQuantity","element","tableitemRow","HSNCode","ItemName","Comment","Number","Quantity","toFixed","UnitName","Rate","BasicAmount","CGSTPercentage","CGST","SGSTPercentage","SGST","Amount","push","totalrow","parseFloat","ReportFotterColumns","ReportFotterColumns2","ReportRows","doc","terms","OrderTermsAndCondition","slicedArray","slice","TableArray","undefined","TermsAndCondition","BilledByRow","BilledByArray","SupplierName","SupplierAddress","SupplierFssai","BilledToRow","BilledToArray","CustomerName","BillingAddress","BillingFssai","DetailsOfTransportRow","DetailsOfTransportArray","POTypeName","ShippingFssai"],"sources":["D:/Rohit/Git projects/Manthan/src/Reports/OrderReport/TableData.js"],"sourcesContent":["import { groupBy } from \"../../components/Common/CommonFunction\";\r\n\r\n// original\r\nexport const columns = [\r\n    \"HSN Item Name\",\r\n    \"Quantity\",\r\n    \"Rate\",\r\n    \"BasicAmt \",\r\n    \"CGST%\",\r\n    \"CGSTAmt \",\r\n    \"SGST%\",\r\n    \"SGSTAmt\",\r\n    \"Total Amt\"];\r\n\r\nexport const PageHedercolumns = [\r\n    \"Billed by\",\r\n    \"Billed to\",\r\n    ''\r\n]\r\nexport const Footercolumn = [\r\n    \"\",\r\n]\r\n\r\nexport const BilledBy = [\r\n    \"Billed by\",\r\n]\r\nexport const BilledTo = [\r\n    \"Billed by\",\r\n]\r\nexport const DetailsOfTransport = [\r\n    \"Billed by\",\r\n]\r\n\r\nexport const Rows = (data) => {\r\n\r\n    const { OrderItem = [] } = data\r\n    let hasHedRow = []\r\n    const grouped = groupBy(OrderItem, ele => ele.GSTPercentage);\r\n    console.log(grouped)\r\n    grouped.forEach(i => {\r\n\r\n        if (i.length > 0) {\r\n\r\n            let totalBasicAmount = 0\r\n            let totalCGst = 0\r\n            let totalSGst = 0\r\n            let totalAmount = 0\r\n            let totalQuantity = 0\r\n\r\n            i.forEach(element => {\r\n                const tableitemRow = [\r\n                    `(${element.HSNCode}) ${element.ItemName}     \r\n                     ${element.Comment === null ? \"\" : element.Comment}`,\r\n                    `${Number(element.Quantity).toFixed(2)} ${element.UnitName}`,\r\n                    element.Rate,\r\n                    element.BasicAmount,\r\n                    `${element.CGSTPercentage}%`,\r\n                    element.CGST,\r\n                    `${element.SGSTPercentage}%`,\r\n                    element.SGST,\r\n                    element.Amount,\r\n                    \"row\"\r\n                ];\r\n\r\n                totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n                totalCGst = Number(totalCGst) + Number(element.CGST)\r\n                totalSGst = Number(totalSGst) + Number(element.SGST)\r\n                totalAmount = Number(totalAmount) + Number(element.Amount)\r\n                totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount)\r\n\r\n                hasHedRow.push(tableitemRow);\r\n            })\r\n\r\n            function totalrow() {\r\n                return [\r\n                    \"\",\r\n                    \"\",\r\n                    `TotalBasic:${parseFloat(totalBasicAmount).toFixed(2)}`,\r\n                    \"\",\r\n                    `Total:${parseFloat(totalCGst).toFixed(2)}`,\r\n                    \"isaddition\",\r\n                    `Total:${parseFloat(totalSGst).toFixed(2)}`,\r\n                    \"\",\r\n                    `Total:${parseFloat(totalAmount).toFixed(2)}`,\r\n                ];\r\n            };\r\n            hasHedRow.push(totalrow());\r\n        }\r\n    })\r\n    return hasHedRow\r\n}\r\n\r\nexport const ReportFotterColumns = [\r\n    \"SGST\",\r\n    \"CGST\", \"Quantity\",\r\n    \"GST % \",\r\n    \"TaxbleAmt.\", \"IGST\", \"Total Amt\"\r\n];\r\n\r\nexport const ReportFotterColumns2 = [\r\n    \"SGST\",\r\n];\r\n\r\nexport const ReportRows = (data, doc) => {\r\n\r\n    const terms = data.OrderTermsAndCondition\r\n    const slicedArray = terms.slice(0, 2);\r\n    var TableArray = [[\"Terms And Condition\"],\r\n    [`${slicedArray[0] === undefined ? \"\" : slicedArray[0].TermsAndCondition}`,\r\n    ],\r\n    [`${slicedArray[1] === undefined ? \"\" : slicedArray[1].TermsAndCondition}`,\r\n    ],\r\n    ]\r\n    return TableArray\r\n}\r\n\r\nexport const BilledByRow = (data) => {\r\n    var BilledByArray = [\r\n        [`${data.SupplierName}`],\r\n        [`${data.SupplierAddress}`],\r\n        [`FSSAI:${data.SupplierFssai}`],\r\n    ]\r\n    return BilledByArray;\r\n}\r\n\r\nexport const BilledToRow = (data) => {\r\n\r\n    var BilledToArray = [\r\n        [`${data.CustomerName}`],\r\n        [`${data.BillingAddress}`],\r\n        [`FSSAI:${data.BillingFssai}`],\r\n    ]\r\n\r\n    return BilledToArray;\r\n}\r\n\r\nexport const DetailsOfTransportRow = (data) => {\r\n\r\n    var DetailsOfTransportArray = [\r\n        [`${data.POTypeName}`],\r\n        [`${data.CustomerName}`],\r\n        [`${data.BillingAddress}`],\r\n        [`FSSAI:${data.ShippingFssai}`],\r\n\r\n    ]\r\n\r\n    return DetailsOfTransportArray;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}