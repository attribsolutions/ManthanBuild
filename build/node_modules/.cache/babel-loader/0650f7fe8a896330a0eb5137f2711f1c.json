{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Purchase\\\\Production\\\\ProductionMaster.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport React, { useEffect, useState } from \"react\";\nimport { MetaTags } from \"react-meta-tags\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport { useHistory } from \"react-router-dom\";\nimport { editOrderIdSuccess, goButton, goButtonSuccess, updateOrderIdSuccess } from \"../../../store/Purchase/OrderPageRedux/actions\";\nimport { getSupplierAddress } from \"../../../store/CommonAPI/SupplierRedux/actions\";\nimport { AlertState, BreadcrumbFilterSize, Breadcrumb_inputName, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { basicAmount, GstAmount, handleKeyDown, Amount } from \"../Order/OrderPageCalulation\";\nimport '../../Order/div.css';\nimport { GRN_lIST, ORDER_lIST, PRODUCTION_LIST } from \"../../../routes/route_url\";\nimport { SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\nimport { editGRNId, getGRN_itemMode2_Success, postGRN, postGRNSuccess } from \"../../../store/Purchase/GRNRedux/actions\";\nimport { mySearchProps } from \"../../../components/Common/ComponentRelatedCommonFile/MySearch\";\nimport { createdBy, currentDate, saveDissable } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { comAddPageFieldFunc, formValid, initialFiledFunc, onChangeDate, onChangeSelect, onChangeText } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\nimport { post_Production, post_ProductionSuccess, update_ProductionId, update_ProductionIdSuccess } from \"../../../store/Purchase/ProductionRedux/actions\";\nimport { getMaterialIssueListPage } from \"../../../store/Purchase/Matrial_Issue/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet description = '';\nlet editVal = {};\nlet initialTableData = [];\n\nconst ProductionMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(\"save\");\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [ItemTabDetails, setItemTabDetails] = useState([]); //Access redux store Data /  'save_ModuleSuccess' action data\n  // const [grnDate, setgrnDate] = useState(currentDate);\n  // const [invoiceDate, setInvoiceDate] = useState(currentDate);\n\n  const initialFiled = {\n    id: \"\",\n    ProductionDate: currentDate,\n    NumberOfLot: \"\",\n    LotQuantity: \"\",\n    ActualQuantity: \"\",\n    // BatchDate: \"\",\n    // BatchCode: \"\",\n    // StoreLocation: \"\",\n    SupplierBatchCode: \"\",\n    BestBefore: \"\",\n    Remark: \"\",\n    Item: \"\"\n  };\n  debugger;\n  const [state, setState] = useState(initialFiledFunc(initialFiled));\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  useEffect(() => {// dispatch(getSupplier())\n    // dispatch(getSupplierAddress())\n  }, []);\n  const {\n    postMsg,\n    userAccess,\n    updateMsg,\n    produtionMake,\n    pageField,\n    itemsDrop\n  } = useSelector(state => ({\n    supplierAddress: state.SupplierReducer.supplierAddress,\n    postMsg: state.ProductionReducer.postMsg,\n    updateMsg: state.ProductionReducer.updateMsg,\n    produtionMake: state.ProductionReducer.produtionMake,\n    itemsDrop: state.MaterialIssueReducer.materialIssueList,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(77));\n    const jsonBody = JSON.stringify({\n      FromDate: \"2022-11-01\",\n      ToDate: currentDate\n    });\n    dispatch(getMaterialIssueListPage(jsonBody));\n  }, []);\n  useEffect(() => {\n    let {\n      Data\n    } = produtionMake;\n\n    if (Data) {\n      setState(i => {\n        i.values.Item = {\n          label: produtionMake.Data.Item.Name,\n          value: produtionMake.Data.Item.id\n        };\n        i.values.id = Data.id;\n        i.values.LotQuantity = Data.LotQuantity;\n        i.values.NumberOfLot = Data.NumberOfLot;\n        i.hasValid.id.valid = true;\n        i.hasValid.Item.valid = true;\n        i.hasValid.LotQuantity.valid = true;\n        i.hasValid.NumberOfLot.valid = true;\n        return i;\n      });\n    }\n  }, [produtionMake]); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]);\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); // useEffect(() => {\n  //     if ((hasShowloction || hasShowModal)) {\n  //         let hasEditVal = null\n  //         if (hasShowloction) {\n  //             setPageMode(location.pageMode)\n  //             hasEditVal = location.editValue\n  //         }\n  //         else if (hasShowModal) {\n  //             hasEditVal = props.editValue\n  //             setPageMode(props.pageMode)\n  //             setModalCss(true)\n  //         }\n  //         if (hasEditVal) {\n  //             console.log(\"hasEditVal\", hasEditVal)\n  //             setEditData(hasEditVal);\n  //             const { id, BomDate, Item, ItemName, Unit, UnitName, EstimatedOutputQty, Comment, IsActive } = hasEditVal\n  //             const { values, fieldLabel, hasValid, required, isError } = { ...state }\n  //             hasValid.id.valid = true;\n  //             hasValid.BomDate.valid = true;\n  //             hasValid.ItemName.valid = true;\n  //             hasValid.UnitName.valid = true;\n  //             hasValid.EstimatedOutputQty.valid = true;\n  //             hasValid.Comment.valid = true;\n  //             hasValid.IsActive.valid = true;\n  //             values.ProductionDate = ProductionDate\n  //             values.EstimatedQuantity = EstimatedQuantity;\n  //             values.ActualQuantity = ActualQuantity;\n  //             values.Remark = Remark;\n  //             values.IsActive = IsActive;\n  //             values.ItemName = { label: ItemName, value: Item };\n  //             values.UnitName = { label: UnitName, value: Unit };\n  //             setItemTabDetails(hasEditVal.BOMItems)\n  //             setState({ values, fieldLabel, hasValid, required, isError })\n  //             dispatch(editBOMListSuccess({ Status: false }))\n  //             dispatch(Breadcrumb_inputName(hasEditVal.ItemName))\n  //         }\n  //     }\n  // }, []);\n\n  useEffect(() => {\n    debugger;\n\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          id,\n          MaterialIssueDate,\n          NumberOfLot,\n          LotQuantity\n        } = hasEditVal;\n        const {\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        } = { ...state\n        };\n        values.id = id;\n        values.ProductionDate = \"\";\n        values.EstimatedQuantity = \"\";\n        values.NumberOfLot = \"\";\n        values.ActualQuantity = \"\";\n        values.BatchDate = \"\";\n        values.BatchCode = \"\";\n        values.StoreLocation = \"\";\n        values.SupplierBatchCode = \"\";\n        values.BestBefore = \"\";\n        values.Remark = \"\";\n        values.Item = \"\"; // setItemTabDetails(hasEditVal.BOMItems)\n\n        setState({\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        }); // dispatch(editBOMListSuccess({ Status: false }))\n\n        dispatch(Breadcrumb_inputName(hasEditVal.ItemName));\n      }\n    }\n  }, []); // const produtionMakeData = produtionMake.map((index) => ({\n  //     value: index.id,\n  //     label: index.ItemName,\n  // }));\n\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(post_ProductionSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: postMsg.Message,\n        RedirectPath: PRODUCTION_LIST\n      }));\n    } else if (postMsg.Status === true) {\n      dispatch(post_ProductionSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMsg.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\n      history.push({\n        pathname: PRODUCTION_LIST\n      });\n    } else if (updateMsg.Status === true && !modalCss) {\n      dispatch(update_ProductionIdSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg, modalCss]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      }); // new change\n    }\n  }, [pageField]);\n  const ItemDropdown_Options = itemsDrop.map(index => ({\n    value: index.id,\n    label: index.ItemName\n  }));\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // const makeproduction = produtionMake.Data.id\n    // const LotQuantity = produtionMake.Data.LotQuantity\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        ProductionMaterialIssue: [{\n          MaterialIssue: values.id\n        }],\n        ProductionDate: values.ProductionDate,\n        EstimatedQuantity: values.NumberOfLot,\n        NumberOfLot: produtionMake.Data.NumberOfLot,\n        ActualQuantity: values.ActualQuantity,\n        BatchDate: \"2022-12-17\",\n        BatchCode: \"aa\",\n        StoreLocation: \"aa\",\n        SupplierBatchCode: values.SupplierBatchCode,\n        BestBefore: values.BestBefore,\n        Remark: values.Remark,\n        CreatedBy: 1,\n        Item: values.Item.value,\n        UpdatedBy: 1,\n        Company: 1,\n        Division: 4,\n        GST: 8,\n        Unit: 45,\n        MRP: \" \",\n        Rate: 55\n      }); // saveDissable(true)\n      // if ((pageMode === 'edit') && !mode) {\n      //     dispatch(update_ProductionId(jsonBody));\n      // }\n      // else\n      //  {\n\n      dispatch(post_Production(jsonBody)); // }\n      // }\n    }\n  };\n\n  if (!(userPageAccessState === \"\")) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userPageAccessState.PageHeading, \"| FoodERP-React FrontEnd\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginBottom: \"16cm\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          pageHeading: userPageAccessState.PageHeading // showCount={true}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formSubmitHandler,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2 mb-1  c_card_header \",\n            style: {\n              marginTop: \"-15px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 5,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-4 p-2\",\n                    style: {\n                      width: \"170px\"\n                    },\n                    children: fieldLabel.ProductionDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Flatpickr, {\n                      name: \"ProductionDate\",\n                      value: values.ProductionDate,\n                      className: \"form-control d-block p-2 bg-white text-dark\",\n                      placeholder: \"YYYY-MM-DD\",\n                      autoComplete: \"0,''\",\n                      disabled: pageMode === \"edit\" ? true : false,\n                      options: {\n                        altInput: true,\n                        altFormat: \"d-m-Y\",\n                        dateFormat: \"Y-m-d\" // defaultDate: pageMode === \"edit\" ? values.ProductionDate : \"today\"\n\n                      },\n                      onChange: (y, v, e) => {\n                        onChangeDate({\n                          e,\n                          v,\n                          state,\n                          setState\n                        });\n                      },\n                      onReady: (y, v, e) => {\n                        onChangeDate({\n                          e,\n                          v,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 45\n                    }, this), isError.ProductionDate.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.ProductionDate\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row  \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-4 p-2\",\n                    style: {\n                      width: \"170px\"\n                    },\n                    children: [fieldLabel.LotQuantity, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      disabled: true,\n                      name: \"LotQuantity\",\n                      type: \"text\",\n                      placeholder: \"Enter EstimatedQuantity\",\n                      value: `${values.LotQuantity ? values.LotQuantity : \"0\"}   Lot(${values.NumberOfLot ? values.NumberOfLot : \"1\"})` // value1={`${values.NumberOfLot}`}\n                      // className={isError.EstimatedOutputQty.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\n                      ,\n                      style: {\n                        backgroundColor: \"white\"\n                      },\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-4 p-2\",\n                    style: {\n                      width: \"170px\"\n                    },\n                    children: fieldLabel.Remark\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      name: \"Remark\",\n                      value: values.Remark,\n                      placeholder: \"Enter Remark\",\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 45\n                    }, this), isError.Remark.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.Remark\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-4 p-2\",\n                    style: {\n                      width: \"170px\"\n                    },\n                    children: fieldLabel.BestBefore\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                      name: \"BestBefore\",\n                      value: values.BestBefore,\n                      className: \"form-control d-block p-2 bg-white text-dark\",\n                      placeholder: \"YYYY-MM-DD\",\n                      autoComplete: \"0,''\",\n                      disabled: pageMode === \"edit\" ? true : false,\n                      options: {\n                        altInput: true,\n                        altFormat: \"d-m-Y\",\n                        dateFormat: \"Y-m-d\",\n                        defaultDate: pageMode === \"edit\" ? values.BestBefore : \"today\"\n                      },\n                      onChange: (y, v, e) => {\n                        onChangeDate({\n                          e,\n                          v,\n                          state,\n                          setState\n                        });\n                      },\n                      onReady: (y, v, e) => {\n                        onChangeDate({\n                          e,\n                          v,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 5,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-md-4 p-2\",\n                    style: {\n                      width: \"170px\"\n                    },\n                    children: fieldLabel.Item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      isDisabled: true,\n                      name: \"Item\",\n                      value: values.Item // isSearchable={true}\n                      // className=\"react-dropdown\"\n                      // classNamePrefix=\"dropdown\"\n                      ,\n                      options: ItemDropdown_Options,\n                      onChange: (hasSelect, evn) => {\n                        onChangeSelect({\n                          hasSelect,\n                          evn,\n                          state,\n                          setState\n                        }); //  Items_Dropdown_Handler(hasSelect);\n                        //  dispatch(Breadcrumb_inputName(hasSelect.label))\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 45\n                    }, this), isError.Item.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.Item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 476,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"row  \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-4 p-2\",\n                    style: {\n                      width: \"170px\"\n                    },\n                    children: fieldLabel.ActualQuantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      name: \"ActualQuantity\",\n                      value: values.ActualQuantity,\n                      placeholder: \"Enter ActualQuantity\",\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 45\n                    }, this), isError.ActualQuantity.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.ActualQuantity\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row  \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-md-4 p-2\",\n                    style: {\n                      width: \"170px\"\n                    },\n                    children: fieldLabel.SupplierBatchCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      name: \"SupplierBatchCode\",\n                      value: values.SupplierBatchCode,\n                      placeholder: \"Enter SupplierBatchCode\",\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 45\n                    }, this), isError.SupplierBatchCode.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.SupplierBatchCode\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2 mb-1 mt-n3\",\n            style: {\n              marginRight: '-28px',\n              marginLeft: \"-8px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 2,\n                  style: {\n                    marginLeft: \"\",\n                    marginTop: \"20px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                    pageMode: pageMode,\n                    userAcc: userPageAccessState,\n                    module: \"ProductionMaster\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(ProductionMaster, \"wyWi71p8XI7+7Y8XKxYq1nDlZOo=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ProductionMaster;\nexport default ProductionMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductionMaster\");","map":{"version":3,"names":["Button","Col","FormGroup","Input","Label","Row","useDispatch","useSelector","Select","Flatpickr","React","useEffect","useState","MetaTags","ToolkitProvider","BootstrapTable","paginationFactory","PaginationListStandalone","PaginationProvider","useHistory","editOrderIdSuccess","goButton","goButtonSuccess","updateOrderIdSuccess","getSupplierAddress","AlertState","BreadcrumbFilterSize","Breadcrumb_inputName","commonPageField","commonPageFieldSuccess","basicAmount","GstAmount","handleKeyDown","Amount","GRN_lIST","ORDER_lIST","PRODUCTION_LIST","SaveButton","Breadcrumb","editGRNId","getGRN_itemMode2_Success","postGRN","postGRNSuccess","mySearchProps","createdBy","currentDate","saveDissable","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeDate","onChangeSelect","onChangeText","post_Production","post_ProductionSuccess","update_ProductionId","update_ProductionIdSuccess","getMaterialIssueListPage","description","editVal","initialTableData","ProductionMaster","props","dispatch","history","modalCss","setModalCss","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","ItemTabDetails","setItemTabDetails","initialFiled","id","ProductionDate","NumberOfLot","LotQuantity","ActualQuantity","SupplierBatchCode","BestBefore","Remark","Item","state","setState","values","isError","fieldLabel","postMsg","userAccess","updateMsg","produtionMake","pageField","itemsDrop","supplierAddress","SupplierReducer","ProductionReducer","MaterialIssueReducer","materialIssueList","Login","RoleAccessUpdateData","CommonPageFieldReducer","jsonBody","JSON","stringify","FromDate","ToDate","Data","i","label","Name","value","hasValid","valid","userAcc","locationPath","location","pathname","hasShowModal","masterPath","find","inx","ActualPagePath","hasShowloction","hasOwnProperty","hasEditVal","editValue","MaterialIssueDate","required","EstimatedQuantity","BatchDate","BatchCode","StoreLocation","ItemName","Status","StatusCode","Type","Message","RedirectPath","AfterResponseAction","push","fieldArr","PageFieldMaster","ItemDropdown_Options","map","index","formSubmitHandler","event","preventDefault","ProductionMaterialIssue","MaterialIssue","CreatedBy","UpdatedBy","Company","Division","GST","Unit","MRP","Rate","PageHeading","marginBottom","marginTop","width","altInput","altFormat","dateFormat","y","v","e","length","backgroundColor","defaultDate","hasSelect","evn","marginRight","marginLeft"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Purchase/Production/ProductionMaster.js"],"sourcesContent":["import {\r\n    Button,\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"flatpickr/dist/themes/material_blue.css\"\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    editOrderIdSuccess,\r\n    goButton,\r\n    goButtonSuccess,\r\n    updateOrderIdSuccess\r\n} from \"../../../store/Purchase/OrderPageRedux/actions\";\r\nimport { getSupplierAddress } from \"../../../store/CommonAPI/SupplierRedux/actions\"\r\nimport { AlertState, BreadcrumbFilterSize, Breadcrumb_inputName, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { basicAmount, GstAmount, handleKeyDown, Amount } from \"../Order/OrderPageCalulation\";\r\nimport '../../Order/div.css'\r\nimport { GRN_lIST, ORDER_lIST, PRODUCTION_LIST } from \"../../../routes/route_url\";\r\nimport { SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\r\nimport { editGRNId, getGRN_itemMode2_Success, postGRN, postGRNSuccess } from \"../../../store/Purchase/GRNRedux/actions\";\r\nimport { mySearchProps } from \"../../../components/Common/ComponentRelatedCommonFile/MySearch\";\r\nimport { createdBy, currentDate, saveDissable } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport { comAddPageFieldFunc, formValid, initialFiledFunc, onChangeDate, onChangeSelect, onChangeText } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\r\nimport { post_Production, post_ProductionSuccess, update_ProductionId, update_ProductionIdSuccess } from \"../../../store/Purchase/ProductionRedux/actions\";\r\nimport { getMaterialIssueListPage } from \"../../../store/Purchase/Matrial_Issue/action\";\r\n\r\nlet description = ''\r\nlet editVal = {}\r\nlet initialTableData = []\r\nconst ProductionMaster = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(\"save\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n    const [ItemTabDetails, setItemTabDetails] = useState([])\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    // const [grnDate, setgrnDate] = useState(currentDate);\r\n    // const [invoiceDate, setInvoiceDate] = useState(currentDate);\r\n    const initialFiled = {\r\n        id: \"\",\r\n        ProductionDate: currentDate,\r\n        NumberOfLot: \"\",\r\n        LotQuantity: \"\",\r\n        ActualQuantity: \"\",\r\n        // BatchDate: \"\",\r\n        // BatchCode: \"\",\r\n        // StoreLocation: \"\",\r\n        SupplierBatchCode: \"\",\r\n        BestBefore: \"\",\r\n        Remark: \"\",\r\n        Item: \"\",\r\n    }\r\n    debugger\r\n    const [state, setState] = useState(initialFiledFunc(initialFiled))\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n    useEffect(() => {\r\n        // dispatch(getSupplier())\r\n        // dispatch(getSupplierAddress())\r\n    }, [])\r\n    const {\r\n        postMsg,\r\n        userAccess,\r\n        updateMsg,\r\n        produtionMake,\r\n        pageField,\r\n        itemsDrop\r\n    } = useSelector((state) => ({\r\n        supplierAddress: state.SupplierReducer.supplierAddress,\r\n        postMsg: state.ProductionReducer.postMsg,\r\n        updateMsg: state.ProductionReducer.updateMsg,\r\n        produtionMake: state.ProductionReducer.produtionMake,\r\n        itemsDrop: state.MaterialIssueReducer.materialIssueList,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(77))\r\n\r\n        const jsonBody = JSON.stringify({\r\n            FromDate: \"2022-11-01\",\r\n            ToDate: currentDate,\r\n        });\r\n        dispatch(getMaterialIssueListPage(jsonBody));\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        let { Data } = produtionMake;\r\n        if (Data) {\r\n            setState(i => {\r\n                i.values.Item = {\r\n                    label: produtionMake.Data.Item.Name,\r\n                    value: produtionMake.Data.Item.id\r\n                }\r\n                i.values.id = Data.id;\r\n                i.values.LotQuantity = Data.LotQuantity;\r\n                i.values.NumberOfLot = Data.NumberOfLot;\r\n\r\n                i.hasValid.id.valid = true\r\n                i.hasValid.Item.valid = true\r\n                i.hasValid.LotQuantity.valid = true\r\n                i.hasValid.NumberOfLot.valid = true\r\n                return i\r\n            })\r\n        }\r\n    }, [produtionMake]);\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess]);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    // useEffect(() => {\r\n    //     if ((hasShowloction || hasShowModal)) {\r\n    //         let hasEditVal = null\r\n    //         if (hasShowloction) {\r\n    //             setPageMode(location.pageMode)\r\n    //             hasEditVal = location.editValue\r\n    //         }\r\n    //         else if (hasShowModal) {\r\n    //             hasEditVal = props.editValue\r\n    //             setPageMode(props.pageMode)\r\n    //             setModalCss(true)\r\n    //         }\r\n    //         if (hasEditVal) {\r\n    //             console.log(\"hasEditVal\", hasEditVal)\r\n    //             setEditData(hasEditVal);\r\n    //             const { id, BomDate, Item, ItemName, Unit, UnitName, EstimatedOutputQty, Comment, IsActive } = hasEditVal\r\n    //             const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n    //             hasValid.id.valid = true;\r\n    //             hasValid.BomDate.valid = true;\r\n    //             hasValid.ItemName.valid = true;\r\n    //             hasValid.UnitName.valid = true;\r\n    //             hasValid.EstimatedOutputQty.valid = true;\r\n    //             hasValid.Comment.valid = true;\r\n    //             hasValid.IsActive.valid = true;\r\n    //             values.ProductionDate = ProductionDate\r\n    //             values.EstimatedQuantity = EstimatedQuantity;\r\n    //             values.ActualQuantity = ActualQuantity;\r\n    //             values.Remark = Remark;\r\n    //             values.IsActive = IsActive;\r\n    //             values.ItemName = { label: ItemName, value: Item };\r\n    //             values.UnitName = { label: UnitName, value: Unit };\r\n    //             setItemTabDetails(hasEditVal.BOMItems)\r\n    //             setState({ values, fieldLabel, hasValid, required, isError })\r\n    //             dispatch(editBOMListSuccess({ Status: false }))\r\n    //             dispatch(Breadcrumb_inputName(hasEditVal.ItemName))\r\n    //         }\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if ((hasShowloction || hasShowModal)) {\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n            if (hasEditVal) {\r\n                const { id, MaterialIssueDate, NumberOfLot, LotQuantity, } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n                values.id = id;\r\n                values.ProductionDate = \"\"\r\n                values.EstimatedQuantity = \"\"\r\n                values.NumberOfLot = \"\"\r\n                values.ActualQuantity = \"\"\r\n                values.BatchDate = \"\"\r\n                values.BatchCode = \"\"\r\n                values.StoreLocation = \"\"\r\n                values.SupplierBatchCode = \"\"\r\n                values.BestBefore = \"\"\r\n                values.Remark = \"\"\r\n                values.Item = \"\"\r\n                // setItemTabDetails(hasEditVal.BOMItems)\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                // dispatch(editBOMListSuccess({ Status: false }))\r\n                dispatch(Breadcrumb_inputName(hasEditVal.ItemName))\r\n            }\r\n        }\r\n    }, []);\r\n    // const produtionMakeData = produtionMake.map((index) => ({\r\n    //     value: index.id,\r\n    //     label: index.ItemName,\r\n    // }));\r\n\r\n    useEffect(() => {\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(post_ProductionSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 1,\r\n                Status: true,\r\n                Message: postMsg.Message,\r\n                RedirectPath: PRODUCTION_LIST,\r\n            }))\r\n        } else if (postMsg.Status === true) {\r\n            dispatch(post_ProductionSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMsg.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg]);\r\n\r\n    useEffect(() => {\r\n        if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\r\n            history.push({\r\n                pathname: PRODUCTION_LIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            dispatch(update_ProductionIdSuccess({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })// new change\r\n        }\r\n    }, [pageField]);\r\n\r\n    const ItemDropdown_Options = itemsDrop.map((index) => ({\r\n        value: index.id,\r\n        label: index.ItemName,\r\n    }));\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        // const makeproduction = produtionMake.Data.id\r\n        // const LotQuantity = produtionMake.Data.LotQuantity\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                ProductionMaterialIssue: [\r\n                    {\r\n                        MaterialIssue: values.id,\r\n                    }\r\n                ],\r\n                ProductionDate: values.ProductionDate,\r\n                EstimatedQuantity: values.NumberOfLot,\r\n                NumberOfLot: produtionMake.Data.NumberOfLot,\r\n                ActualQuantity: values.ActualQuantity,\r\n                BatchDate: \"2022-12-17\",\r\n                BatchCode: \"aa\",\r\n                StoreLocation: \"aa\",\r\n                SupplierBatchCode: values.SupplierBatchCode,\r\n                BestBefore: values.BestBefore,\r\n                Remark: values.Remark,\r\n                CreatedBy: 1,\r\n                Item: values.Item.value,\r\n                UpdatedBy: 1,\r\n                Company: 1,\r\n                Division: 4,\r\n                GST: 8,\r\n                Unit: 45,\r\n                MRP: \" \",\r\n                Rate: 55,\r\n            });\r\n            // saveDissable(true)\r\n            // if ((pageMode === 'edit') && !mode) {\r\n            //     dispatch(update_ProductionId(jsonBody));\r\n            // }\r\n            // else\r\n            //  {\r\n            dispatch(post_Production(jsonBody));\r\n            // }\r\n            // }\r\n        }\r\n    };\r\n\r\n    if (!(userPageAccessState === \"\")) {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags>\r\n                    <title>{userPageAccessState.PageHeading}| FoodERP-React FrontEnd</title>\r\n                </MetaTags>\r\n                <div className=\"page-content\" style={{ marginBottom: \"16cm\" }} >\r\n                    <Breadcrumb\r\n                        pageHeading={userPageAccessState.PageHeading}\r\n                        // showCount={true}\r\n                    />\r\n                    <form onSubmit={formSubmitHandler} noValidate>\r\n                        <div className=\"px-2 mb-1  c_card_header \" style={{ marginTop: \"-15px\" }} >\r\n                            <Row>\r\n                                <Col sm={5}>\r\n                                    <FormGroup className=\" row mt-2 \" >\r\n                                        <Label className=\"col-sm-4 p-2\"\r\n                                            style={{ width: \"170px\" }}>{fieldLabel.ProductionDate}</Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Flatpickr\r\n                                                name=\"ProductionDate\"\r\n                                                value={values.ProductionDate}\r\n                                                className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                placeholder=\"YYYY-MM-DD\"\r\n                                                autoComplete=\"0,''\"\r\n                                                disabled={pageMode === \"edit\" ? true : false}\r\n                                                options={{\r\n                                                    altInput: true,\r\n                                                    altFormat: \"d-m-Y\",\r\n                                                    dateFormat: \"Y-m-d\",\r\n                                                    // defaultDate: pageMode === \"edit\" ? values.ProductionDate : \"today\"\r\n                                                \r\n\r\n                                                }}\r\n                                                onChange={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                                onReady={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                            />\r\n                                            {/* <Flatpickr\r\n                                                name=\"ProductionDate\"\r\n                                                value={values.ProductionDate}\r\n                                                className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                placeholder=\"YYYY-MM-DD\"\r\n                                                autoComplete=\"0,''\"\r\n                                                disabled={pageMode === \"edit\" ? true : false}\r\n                                                options={{\r\n                                                    altInput: true,\r\n                                                    altFormat: \"d-m-Y\",\r\n                                                    dateFormat: \"Y-m-d\",\r\n                                                    defaultDate: pageMode === \"edit\" ? values.ProductionDate : \"today\"\r\n                                                }}\r\n                                                onChange={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                                onReady={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                            /> */}\r\n                                            {isError.ProductionDate.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.ProductionDate}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\" row  \" >\r\n                                        <Label className=\"col-sm-4 p-2\"\r\n                                            style={{ width: \"170px\" }}>{fieldLabel.LotQuantity} </Label>\r\n                                        <Col md=\"7\">\r\n                                            < Input\r\n                                                disabled\r\n                                                name=\"LotQuantity\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter EstimatedQuantity\"\r\n                                                value={`${values.LotQuantity ? values.LotQuantity : \"0\"}   Lot(${values.NumberOfLot ? values.NumberOfLot : \"1\"})`}\r\n                                                // value1={`${values.NumberOfLot}`}\r\n                                                // className={isError.EstimatedOutputQty.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                style={{ backgroundColor: \"white\" }}\r\n                                                onChange={(event) => {\r\n                                                    onChangeText({ event, state, setState })\r\n                                                }}\r\n                                            />\r\n                                            {/* {isError.EstimatedQuantity.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.EstimatedQuantity}</small></span>\r\n                                            )} */}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    {/* <FormGroup className=\" row \" >\r\n                                    <Label className=\"col-md-4 p-2\"\r\n                                        style={{ width: \"130px\" }}>BatchCode</Label>\r\n                                    <Col sm=\"7\">\r\n                                        <Input type=\"text\"\r\n                                            style={{ backgroundColor: \"white\" }}\r\n                                            // disabled={true}\r\n                                            value={grnDetail.challanNo}\r\n                                            placeholder=\"Enter Challan No\" />\r\n                                    </Col>\r\n                                </FormGroup> */}\r\n                                    {/* <FormGroup className=\" row mt-2\" >\r\n                                    <Label className=\"col-md-4 p-2\"\r\n                                        style={{ width: \"130px\" }}>Store location</Label>\r\n                                    <Col md=\"7\">\r\n                                        <Select\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup> */}\r\n                                    <FormGroup className=\" row \" >\r\n                                        <Label className=\"col-sm-4 p-2\"\r\n                                            style={{ width: \"170px\" }}>{fieldLabel.Remark}</Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"Remark\"\r\n                                                value={values.Remark}\r\n                                                placeholder=\"Enter Remark\"\r\n                                                onChange={(event) => {\r\n                                                    onChangeText({ event, state, setState })\r\n                                                }}\r\n                                            />\r\n                                            {isError.Remark.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.Remark}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\" row\" >\r\n                                        <Label className=\"col-sm-4 p-2\"\r\n                                            style={{ width: \"170px\" }}>{fieldLabel.BestBefore}</Label>\r\n                                        <Col md=\"7\">\r\n                                            <Flatpickr\r\n                                                name=\"BestBefore\"\r\n                                                value={values.BestBefore}\r\n                                                className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                placeholder=\"YYYY-MM-DD\"\r\n                                                autoComplete=\"0,''\"\r\n                                                disabled={pageMode === \"edit\" ? true : false}\r\n                                                options={{\r\n                                                    altInput: true,\r\n                                                    altFormat: \"d-m-Y\",\r\n                                                    dateFormat: \"Y-m-d\",\r\n                                                    defaultDate: pageMode === \"edit\" ? values.BestBefore : \"today\"\r\n                                                }}\r\n                                                onChange={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                                onReady={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col sm={5}>\r\n                                    <FormGroup className=\" row mt-2\" >\r\n                                        <Label className=\"col-md-4 p-2\"\r\n                                            style={{ width: \"170px\" }}>{fieldLabel.Item}</Label>\r\n                                        <Col md=\"7\">\r\n                                            <Select\r\n                                            isDisabled={true}\r\n                                                name=\"Item\"\r\n                                                value={values.Item}\r\n                                                // isSearchable={true}\r\n                                                // className=\"react-dropdown\"\r\n                                                // classNamePrefix=\"dropdown\"\r\n                                                options={ItemDropdown_Options}\r\n                                                onChange={(hasSelect, evn) => {\r\n                                                    onChangeSelect({ hasSelect, evn, state, setState });\r\n                                                    //  Items_Dropdown_Handler(hasSelect);\r\n                                                    //  dispatch(Breadcrumb_inputName(hasSelect.label))\r\n                                                }\r\n                                                }\r\n                                            />\r\n                                            {isError.Item.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.Item}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row  \" >\r\n                                        <Label className=\"col-sm-4 p-2\"\r\n                                            style={{ width: \"170px\" }}>{fieldLabel.ActualQuantity}</Label>\r\n                                        <Col md=\"7\">\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"ActualQuantity\"\r\n                                                value={values.ActualQuantity}\r\n                                                placeholder=\"Enter ActualQuantity\"\r\n                                                onChange={(event) => {\r\n                                                    onChangeText({ event, state, setState })\r\n                                                }}\r\n                                            />\r\n                                            {isError.ActualQuantity.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.ActualQuantity}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    {/*\r\n                                <FormGroup className=\" row mt-2\" >\r\n                                    <Label className=\"col-md-4 p-2\"\r\n                                        style={{ width: \"130px\" }}>BatchDate</Label>\r\n                                    <Col md=\"7\">\r\n                                        <Flatpickr\r\n                                            name=\"grndate\"\r\n                                            className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                            placeholder=\"Select...\"\r\n                                            options={{\r\n                                                altInput: true,\r\n                                                altFormat: \"d-m-Y\",\r\n                                                dateFormat: \"Y-m-d\",\r\n                                                defaultDate: \"today\"\r\n                                            }}\r\n                                            onChange={(e, date) => { setgrnDate(date) }}\r\n                                            onReady={(e, date) => { setgrnDate(date); }}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup> */}\r\n                                    <FormGroup className=\" row  \" >\r\n                                        <Label className=\"col-md-4 p-2\"\r\n                                            style={{ width: \"170px\" }}>{fieldLabel.SupplierBatchCode}</Label>\r\n                                        <Col md=\"7\">\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"SupplierBatchCode\"\r\n                                                value={values.SupplierBatchCode}\r\n                                                placeholder=\"Enter SupplierBatchCode\"\r\n                                                onChange={(event) => {\r\n                                                    onChangeText({ event, state, setState })\r\n                                                }}\r\n                                            />\r\n                                            {isError.SupplierBatchCode.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.SupplierBatchCode}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <div className=\"px-2 mb-1 mt-n3\" style={{ marginRight: '-28px', marginLeft: \"-8px\" }}>\r\n                            <Row>\r\n                                {/* <Row className=\"mt-3\">\r\n                                        <Col className=\" col col-12\">\r\n                                            <ItemTab tableData={ItemTabDetails} func={setItemTabDetails} />\r\n                                        </Col>\r\n                                    </Row> */}\r\n                                <FormGroup>\r\n                                    <Col sm={2} style={{ marginLeft: \"\", marginTop: \"20px\" }}>\r\n                                        <SaveButton pageMode={pageMode} userAcc={userPageAccessState}\r\n                                            module={\"ProductionMaster\"}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup >\r\n                            </Row>\r\n                        </div>\r\n                    </form>\r\n                </div >\r\n            </React.Fragment >\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\nexport default ProductionMaster;"],"mappings":"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"},"metadata":{},"sourceType":"module"}