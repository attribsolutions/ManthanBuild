{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar tinycolor = require('tinycolor2');\n\nvar Color = require('../../components/color');\n\nvar extendedColorWayList = {};\n\nfunction calc(gd, trace) {\n  var cd = [];\n  var fullLayout = gd._fullLayout;\n  var hiddenLabels = fullLayout.hiddenlabels || [];\n  var labels = trace.labels;\n  var colors = trace.marker.colors || [];\n  var vals = trace.values;\n  var len = trace._length;\n  var hasValues = trace._hasValues && len;\n  var i, pt;\n\n  if (trace.dlabel) {\n    labels = new Array(len);\n\n    for (i = 0; i < len; i++) {\n      labels[i] = String(trace.label0 + i * trace.dlabel);\n    }\n  }\n\n  var allThisTraceLabels = {};\n  var pullColor = makePullColorFn(fullLayout['_' + trace.type + 'colormap']);\n  var vTotal = 0;\n  var isAggregated = false;\n\n  for (i = 0; i < len; i++) {\n    var v, label, hidden;\n\n    if (hasValues) {\n      v = vals[i];\n      if (!isNumeric(v)) continue;\n      v = +v;\n    } else v = 1;\n\n    label = labels[i];\n    if (label === undefined || label === '') label = i;\n    label = String(label);\n    var thisLabelIndex = allThisTraceLabels[label];\n\n    if (thisLabelIndex === undefined) {\n      allThisTraceLabels[label] = cd.length;\n      hidden = hiddenLabels.indexOf(label) !== -1;\n      if (!hidden) vTotal += v;\n      cd.push({\n        v: v,\n        label: label,\n        color: pullColor(colors[i], label),\n        i: i,\n        pts: [i],\n        hidden: hidden\n      });\n    } else {\n      isAggregated = true;\n      pt = cd[thisLabelIndex];\n      pt.v += v;\n      pt.pts.push(i);\n      if (!pt.hidden) vTotal += v;\n\n      if (pt.color === false && colors[i]) {\n        pt.color = pullColor(colors[i], label);\n      }\n    }\n  } // Drop aggregate sums of value 0 or less\n\n\n  cd = cd.filter(function (elem) {\n    return elem.v >= 0;\n  });\n  var shouldSort = trace.type === 'funnelarea' ? isAggregated : trace.sort;\n  if (shouldSort) cd.sort(function (a, b) {\n    return b.v - a.v;\n  }); // include the sum of all values in the first point\n\n  if (cd[0]) cd[0].vTotal = vTotal;\n  return cd;\n}\n\nfunction makePullColorFn(colorMap) {\n  return function pullColor(color, id) {\n    if (!color) return false;\n    color = tinycolor(color);\n    if (!color.isValid()) return false;\n    color = Color.addOpacity(color, color.getAlpha());\n    if (!colorMap[id]) colorMap[id] = color;\n    return color;\n  };\n}\n/*\n * `calc` filled in (and collated) explicit colors.\n * Now we need to propagate these explicit colors to other traces,\n * and fill in default colors.\n * This is done after sorting, so we pick defaults\n * in the order slices will be displayed\n */\n\n\nfunction crossTraceCalc(gd, plotinfo) {\n  // TODO: should we name the second argument opts?\n  var desiredType = (plotinfo || {}).type;\n  if (!desiredType) desiredType = 'pie';\n  var fullLayout = gd._fullLayout;\n  var calcdata = gd.calcdata;\n  var colorWay = fullLayout[desiredType + 'colorway'];\n  var colorMap = fullLayout['_' + desiredType + 'colormap'];\n\n  if (fullLayout['extend' + desiredType + 'colors']) {\n    colorWay = generateExtendedColors(colorWay, extendedColorWayList);\n  }\n\n  var dfltColorCount = 0;\n\n  for (var i = 0; i < calcdata.length; i++) {\n    var cd = calcdata[i];\n    var traceType = cd[0].trace.type;\n    if (traceType !== desiredType) continue;\n\n    for (var j = 0; j < cd.length; j++) {\n      var pt = cd[j];\n\n      if (pt.color === false) {\n        // have we seen this label and assigned a color to it in a previous trace?\n        if (colorMap[pt.label]) {\n          pt.color = colorMap[pt.label];\n        } else {\n          colorMap[pt.label] = pt.color = colorWay[dfltColorCount % colorWay.length];\n          dfltColorCount++;\n        }\n      }\n    }\n  }\n}\n/**\n * pick a default color from the main default set, augmented by\n * itself lighter then darker before repeating\n */\n\n\nfunction generateExtendedColors(colorList, extendedColorWays) {\n  var i;\n  var colorString = JSON.stringify(colorList);\n  var colors = extendedColorWays[colorString];\n\n  if (!colors) {\n    colors = colorList.slice();\n\n    for (i = 0; i < colorList.length; i++) {\n      colors.push(tinycolor(colorList[i]).lighten(20).toHexString());\n    }\n\n    for (i = 0; i < colorList.length; i++) {\n      colors.push(tinycolor(colorList[i]).darken(20).toHexString());\n    }\n\n    extendedColorWays[colorString] = colors;\n  }\n\n  return colors;\n}\n\nmodule.exports = {\n  calc: calc,\n  crossTraceCalc: crossTraceCalc,\n  makePullColorFn: makePullColorFn,\n  generateExtendedColors: generateExtendedColors\n};","map":{"version":3,"names":["isNumeric","require","tinycolor","Color","extendedColorWayList","calc","gd","trace","cd","fullLayout","_fullLayout","hiddenLabels","hiddenlabels","labels","colors","marker","vals","values","len","_length","hasValues","_hasValues","i","pt","dlabel","Array","String","label0","allThisTraceLabels","pullColor","makePullColorFn","type","vTotal","isAggregated","v","label","hidden","undefined","thisLabelIndex","length","indexOf","push","color","pts","filter","elem","shouldSort","sort","a","b","colorMap","id","isValid","addOpacity","getAlpha","crossTraceCalc","plotinfo","desiredType","calcdata","colorWay","generateExtendedColors","dfltColorCount","traceType","j","colorList","extendedColorWays","colorString","JSON","stringify","slice","lighten","toHexString","darken","module","exports"],"sources":["D:/Rohit/Git projects/Manthan/node_modules/plotly.js/src/traces/pie/calc.js"],"sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\n\nvar Color = require('../../components/color');\n\nvar extendedColorWayList = {};\n\nfunction calc(gd, trace) {\n    var cd = [];\n\n    var fullLayout = gd._fullLayout;\n    var hiddenLabels = fullLayout.hiddenlabels || [];\n\n    var labels = trace.labels;\n    var colors = trace.marker.colors || [];\n    var vals = trace.values;\n    var len = trace._length;\n    var hasValues = trace._hasValues && len;\n\n    var i, pt;\n\n    if(trace.dlabel) {\n        labels = new Array(len);\n        for(i = 0; i < len; i++) {\n            labels[i] = String(trace.label0 + i * trace.dlabel);\n        }\n    }\n\n    var allThisTraceLabels = {};\n    var pullColor = makePullColorFn(fullLayout['_' + trace.type + 'colormap']);\n    var vTotal = 0;\n    var isAggregated = false;\n\n    for(i = 0; i < len; i++) {\n        var v, label, hidden;\n        if(hasValues) {\n            v = vals[i];\n            if(!isNumeric(v)) continue;\n            v = +v;\n        } else v = 1;\n\n        label = labels[i];\n        if(label === undefined || label === '') label = i;\n        label = String(label);\n\n        var thisLabelIndex = allThisTraceLabels[label];\n        if(thisLabelIndex === undefined) {\n            allThisTraceLabels[label] = cd.length;\n\n            hidden = hiddenLabels.indexOf(label) !== -1;\n\n            if(!hidden) vTotal += v;\n\n            cd.push({\n                v: v,\n                label: label,\n                color: pullColor(colors[i], label),\n                i: i,\n                pts: [i],\n                hidden: hidden\n            });\n        } else {\n            isAggregated = true;\n\n            pt = cd[thisLabelIndex];\n            pt.v += v;\n            pt.pts.push(i);\n            if(!pt.hidden) vTotal += v;\n\n            if(pt.color === false && colors[i]) {\n                pt.color = pullColor(colors[i], label);\n            }\n        }\n    }\n\n    // Drop aggregate sums of value 0 or less\n    cd = cd.filter(function(elem) { return elem.v >= 0; });\n\n    var shouldSort = (trace.type === 'funnelarea') ? isAggregated : trace.sort;\n    if(shouldSort) cd.sort(function(a, b) { return b.v - a.v; });\n\n    // include the sum of all values in the first point\n    if(cd[0]) cd[0].vTotal = vTotal;\n\n    return cd;\n}\n\nfunction makePullColorFn(colorMap) {\n    return function pullColor(color, id) {\n        if(!color) return false;\n\n        color = tinycolor(color);\n        if(!color.isValid()) return false;\n\n        color = Color.addOpacity(color, color.getAlpha());\n        if(!colorMap[id]) colorMap[id] = color;\n\n        return color;\n    };\n}\n\n/*\n * `calc` filled in (and collated) explicit colors.\n * Now we need to propagate these explicit colors to other traces,\n * and fill in default colors.\n * This is done after sorting, so we pick defaults\n * in the order slices will be displayed\n */\nfunction crossTraceCalc(gd, plotinfo) { // TODO: should we name the second argument opts?\n    var desiredType = (plotinfo || {}).type;\n    if(!desiredType) desiredType = 'pie';\n\n    var fullLayout = gd._fullLayout;\n    var calcdata = gd.calcdata;\n    var colorWay = fullLayout[desiredType + 'colorway'];\n    var colorMap = fullLayout['_' + desiredType + 'colormap'];\n\n    if(fullLayout['extend' + desiredType + 'colors']) {\n        colorWay = generateExtendedColors(colorWay, extendedColorWayList);\n    }\n    var dfltColorCount = 0;\n\n    for(var i = 0; i < calcdata.length; i++) {\n        var cd = calcdata[i];\n        var traceType = cd[0].trace.type;\n        if(traceType !== desiredType) continue;\n\n        for(var j = 0; j < cd.length; j++) {\n            var pt = cd[j];\n            if(pt.color === false) {\n                // have we seen this label and assigned a color to it in a previous trace?\n                if(colorMap[pt.label]) {\n                    pt.color = colorMap[pt.label];\n                } else {\n                    colorMap[pt.label] = pt.color = colorWay[dfltColorCount % colorWay.length];\n                    dfltColorCount++;\n                }\n            }\n        }\n    }\n}\n\n/**\n * pick a default color from the main default set, augmented by\n * itself lighter then darker before repeating\n */\nfunction generateExtendedColors(colorList, extendedColorWays) {\n    var i;\n    var colorString = JSON.stringify(colorList);\n    var colors = extendedColorWays[colorString];\n    if(!colors) {\n        colors = colorList.slice();\n\n        for(i = 0; i < colorList.length; i++) {\n            colors.push(tinycolor(colorList[i]).lighten(20).toHexString());\n        }\n\n        for(i = 0; i < colorList.length; i++) {\n            colors.push(tinycolor(colorList[i]).darken(20).toHexString());\n        }\n        extendedColorWays[colorString] = colors;\n    }\n\n    return colors;\n}\n\nmodule.exports = {\n    calc: calc,\n    crossTraceCalc: crossTraceCalc,\n\n    makePullColorFn: makePullColorFn,\n    generateExtendedColors: generateExtendedColors\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}