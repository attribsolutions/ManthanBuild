{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\TermsAndCondtions\\\\TermsAndCondtionsMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { Breadcrumb_inputName } from \"../../../store/Utilites/Breadcrumb/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { comAddPageFieldFunc, formValid, initialFiledFunc, onChangeText } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\nimport SaveButton from \"../../../components/Common/ComponentRelatedCommonFile/CommonSaveButton\";\nimport { EditTermsAndCondtions_Success, postTermAndCondition, postTermAndConditionSuccess, UpdateTermsAndCondtions, UpdateTermsAndCondtions_Success } from \"../../../store/Administrator/TermsAndCondtionsRedux/actions\";\nimport { TERMS_AND_CONDITION_LIST } from \"../../../routes/route_url\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TermsAndCondtionsMaster = props => {\n  _s();\n\n  const formRef = useRef(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(123); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    updateMsg,\n    pageField,\n    userAccess\n  } = useSelector(state => ({\n    postMsg: state.TermsAndCondtionsReducer.PostData,\n    updateMsg: state.TermsAndCondtionsReducer.TermsAndCondtionsupdateMessage,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    dispatch(commonPageField(42));\n  }, []);\n  {\n    /** Dyanamic Page access state and OnChange function */\n  }\n  const fileds = {\n    Name: \"\",\n    id: \"\"\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); //userAccess useEffect\n  // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]); //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          id,\n          Name\n        } = hasEditVal;\n        const {\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        } = { ...state\n        };\n        values.Name = Name;\n        values.id = id;\n        hasValid.Name.valid = true;\n        setState({\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        });\n        dispatch(Breadcrumb_inputName(hasEditVal.Name));\n      }\n\n      dispatch(EditTermsAndCondtions_Success({\n        Status: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(postTermAndConditionSuccess({\n        Status: false\n      }));\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message,\n          RedirectPath: TERMS_AND_CONDITION_LIST\n        }));\n      }\n    } else if (postMsg.Status === true) {\n      dispatch(postTermAndConditionSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMsg.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\n      history.push({\n        pathname: TERMS_AND_CONDITION_LIST\n      });\n    } else if (updateMsg.Status === true && !modalCss) {\n      dispatch(UpdateTermsAndCondtions_Success({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg, modalCss]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name\n      });\n\n      if (pageMode === \"edit\") {\n        dispatch(UpdateTermsAndCondtions(jsonBody, values.id));\n      } else {\n        dispatch(postTermAndCondition(jsonBody));\n      }\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [userPageAccessState.PageHeading, \"| FoodERP-React FrontEnd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            pageHeading: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: fieldLabel.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 227,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"Name\",\n                              id: \"txtName\",\n                              value: values.Name,\n                              type: \"text\",\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter Name\",\n                              autoComplete: \"off\",\n                              autoFocus: true,\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(Breadcrumb_inputName(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 228,\n                              columnNumber: 61\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 243,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 226,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mt-2\",\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                                  pageMode: pageMode,\n                                  userAcc: userPageAccessState,\n                                  module: \"TermsAndCondtionsMaster\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 250,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 249,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 248,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 247,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(TermsAndCondtionsMaster, \"npCzDtAY5sOu8QzMWf8GxgeeM1k=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = TermsAndCondtionsMaster;\nexport default TermsAndCondtionsMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"TermsAndCondtionsMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","MetaTags","AlertState","commonPageField","useHistory","Breadcrumb_inputName","useDispatch","useSelector","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeText","SaveButton","EditTermsAndCondtions_Success","postTermAndCondition","postTermAndConditionSuccess","UpdateTermsAndCondtions","UpdateTermsAndCondtions_Success","TERMS_AND_CONDITION_LIST","TermsAndCondtionsMaster","props","formRef","history","dispatch","modalCss","setModalCss","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","postMsg","updateMsg","pageField","userAccess","state","TermsAndCondtionsReducer","PostData","TermsAndCondtionsupdateMessage","Login","RoleAccessUpdateData","CommonPageFieldReducer","fileds","Name","id","setState","values","isError","fieldLabel","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","hasValid","required","valid","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","push","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","value"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/TermsAndCondtions/TermsAndCondtionsMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\n\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb_inputName } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n    onChangeText\r\n} from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\r\nimport SaveButton from \"../../../components/Common/ComponentRelatedCommonFile/CommonSaveButton\";\r\n\r\nimport { EditTermsAndCondtions_Success, postTermAndCondition, postTermAndConditionSuccess, UpdateTermsAndCondtions, UpdateTermsAndCondtions_Success } from \"../../../store/Administrator/TermsAndCondtionsRedux/actions\";\r\nimport { TERMS_AND_CONDITION_LIST } from \"../../../routes/route_url\";\r\n\r\nconst TermsAndCondtionsMaster = (props) => {\r\n    const formRef = useRef(null);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const [modalCss, setModalCss] = useState(false);\r\n\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { postMsg, updateMsg, pageField, userAccess } = useSelector((state) => ({\r\n        postMsg: state.TermsAndCondtionsReducer.PostData,\r\n        updateMsg: state.TermsAndCondtionsReducer.TermsAndCondtionsupdateMessage,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageField(42))\r\n    }, []);\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n\r\n    const fileds = {\r\n        Name: \"\",\r\n        id: \"\"\r\n    }\r\n\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    //userAccess useEffect\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                const { id, Name } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n                values.Name = Name;\r\n                values.id = id\r\n\r\n                hasValid.Name.valid = true;\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(Breadcrumb_inputName(hasEditVal.Name))\r\n\r\n            }\r\n            dispatch(EditTermsAndCondtions_Success({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(postTermAndConditionSuccess({ Status: false }))\r\n\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: TERMS_AND_CONDITION_LIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(postTermAndConditionSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMsg.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n        if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\r\n            history.push({\r\n                pathname: TERMS_AND_CONDITION_LIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            dispatch(UpdateTermsAndCondtions_Success({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n            });\r\n            if (pageMode === \"edit\") {\r\n                dispatch(UpdateTermsAndCondtions(jsonBody, values.id));\r\n            }\r\n            else {\r\n                dispatch(postTermAndCondition(jsonBody))\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading}| FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb pageHeading={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name}</Label>\r\n                                                            <Input\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={values.Name}\r\n                                                                type=\"text\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete=\"off\"\r\n                                                                autoFocus={true}\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(Breadcrumb_inputName(event.target.value))\r\n                                                                }}\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup className=\"mt-2\">\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <SaveButton pageMode={pageMode} userAcc={userPageAccessState}\r\n                                                                        module={\"TermsAndCondtionsMaster\"}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n\r\n                                                    </Row>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default TermsAndCondtionsMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}