{"ast":null,"code":"import _regeneratorRuntime from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect,useState}from\"react\";import{Button,Input,Modal,Spinner}from\"reactstrap\";import{useDispatch}from\"react-redux\";import{MetaTags}from\"react-meta-tags\";import{useHistory}from\"react-router-dom\";import{BreadcrumbShowCountlabel,CommonBreadcrumbDetails}from\"../../store/actions\";import{amountCommaSeparateFunc,breadcrumbReturnFunc,metaTagLabel}from\"./CommonFunction\";import C_Report from\"./C_Report\";import*as mode from\"../../routes/PageMode\";import{customAlert}from\"../../CustomAlert/ConfirmDialog\";import{E_Invoice_ActionsButtonFunc,E_WayBill_ActionsButtonFunc,hideBtnCss,listPageActionsButtonFunc,makeBtnCss}from\"./ListActionsButtons\";import DynamicColumnHook,{selectAllCheck}from\"./TableCommonFunc\";import{url}from\"../../routes\";import{C_Button}from\"./CommonButton\";import CustomTable from\"../../CustomTable2\";import ExtraTableWrapper from\"../../CustomTable2/TableWrapper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function isAlertFunc(_x,_x2){return _isAlertFunc.apply(this,arguments);}function _isAlertFunc(){_isAlertFunc=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(type,Msg){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return customAlert({Type:type,Message:Msg.Message,isFunc:true});case 2:case\"end\":return _context.stop();}}},_callee);}));return _isAlertFunc.apply(this,arguments);}var CommonPurchaseList=function CommonPurchaseList(props){var dispatch=useDispatch();var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userAccState=_useState2[0],setUserAccState=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modal_edit=_useState4[0],setmodal_edit=_useState4[1];// const [tableList, settableList] = useState([]);\nvar _props$reducers=props.reducers,_props$reducers$editD=_props$reducers.editData,editData=_props$reducers$editD===void 0?{Data:\"\"}:_props$reducers$editD,_props$reducers$updat=_props$reducers.updateMsg,updateMsg=_props$reducers$updat===void 0?{Status:false}:_props$reducers$updat,_props$reducers$delet=_props$reducers.deleteMsg,deleteMsg=_props$reducers$delet===void 0?{Status:false}:_props$reducers$delet,_props$reducers$userA=_props$reducers.userAccess,userAccess=_props$reducers$userA===void 0?[]:_props$reducers$userA,_props$reducers$postM=_props$reducers.postMsg,postMsg=_props$reducers$postM===void 0?{Status:false}:_props$reducers$postM,_props$reducers$pageF=_props$reducers.pageField,pageField=_props$reducers$pageF===void 0?{id:\"\"}:_props$reducers$pageF,_props$reducers$table=_props$reducers.tableList,tableList=_props$reducers$table===void 0?[]:_props$reducers$table,_props$reducers$listB=_props$reducers.listBtnLoading,listBtnLoading=_props$reducers$listB===void 0?false:_props$reducers$listB;var _props$action=props.action,getList=_props$action.getList,editId=_props$action.editId,deleteId=_props$action.deleteId,postSucc=_props$action.postSucc,updateSucc=_props$action.updateSucc,deleteSucc=_props$action.deleteSucc,viewId=_props$action.viewId;var MasterModal=props.MasterModal,masterPath=props.masterPath,ButtonMsgLable=props.ButtonMsgLable,_props$goButnFunc=props.goButnFunc,goButnFunc=_props$goButnFunc===void 0?function(){}:_props$goButnFunc,_props$makeBtnFunc=props.makeBtnFunc,makeBtnFunc=_props$makeBtnFunc===void 0?function(){}:_props$makeBtnFunc,_props$hideBtnFunc=props.hideBtnFunc,hideBtnFunc=_props$hideBtnFunc===void 0?function(){}:_props$hideBtnFunc,makeBtnShow=props.makeBtnShow,makeBtnName=props.makeBtnName,pageMode=props.pageMode,newBtnPath=props.newBtnPath,forceNewBtnView=props.forceNewBtnView,_props$HeaderContent=props.HeaderContent,HeaderContent=_props$HeaderContent===void 0?function(){return null;}:_props$HeaderContent,_props$selectCheckPar=props.selectCheckParams,selectCheckParams=_props$selectCheckPar===void 0?{isShow:false}:_props$selectCheckPar,_props$totalAmountSho=props.totalAmountShow,totalAmountShow=_props$totalAmountSho===void 0?false:_props$totalAmountSho;var _pageField=_objectSpread({},pageField),_pageField$PageFieldM=_pageField.PageFieldMaster,PageFieldMaster=_pageField$PageFieldM===void 0?[]:_pageField$PageFieldM;useEffect(function(){var locationPath=history.location.pathname;var userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(!(userAcc===undefined)){setUserAccState(userAcc);breadcrumbReturnFunc({dispatch:dispatch,userAcc:userAcc,newBtnPath:newBtnPath,forceNewBtnView:forceNewBtnView});}},[userAccess]);useEffect(function(){var downList=[];var defaultDownList2=[];var listObj={};var listObj2={};tableList.forEach(function(index1){PageFieldMaster.forEach(function(index2){if(index2.ShowInDownload){listObj2[index2.ControlID]=index2.ShownloadDefaultSelect;listObj[index2.ControlID]=index1[index2.ControlID];}});downList.push(listObj);defaultDownList2.push(listObj2);listObj={};});dispatch(CommonBreadcrumbDetails({downBtnData:downList,defaultDownBtnData:listObj2}));},[tableList]);// This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\nuseEffect(function(){if(updateMsg.Status===true&&updateMsg.StatusCode===200){breadcrumbReturnFunc({dispatch:dispatch,userAcc:userAccState,newBtnPath:masterPath});dispatch(updateSucc({Status:false}));goButnFunc();isAlertFunc(1,updateMsg);tog_center();}else if(updateMsg.Status===true){dispatch(updateSucc({Status:false}));isAlertFunc(3,updateMsg);}},[updateMsg]);useEffect(function(){if(deleteMsg.Status===true&&deleteMsg.StatusCode===200){dispatch(deleteSucc({Status:false}));goButnFunc();isAlertFunc(1,deleteMsg);}else if(deleteMsg.Status===true){dispatch(deleteSucc({Status:false}));isAlertFunc(3,deleteMsg);}},[deleteMsg]);useEffect(function(){if(postMsg.Status===true&&postMsg.StatusCode===200){dispatch(postSucc({Status:false}));tog_center();dispatch(getList());isAlertFunc(1,postMsg);}else if(postMsg.Status===true){dispatch(postSucc({Status:false}));isAlertFunc(4,postMsg);}},[postMsg]);// Edit Modal Show When Edit Data is true\nuseEffect(function(){if(editData.Status===true){if(pageField.IsEditPopuporComponent){var _history$push;history.push((_history$push={pathname:masterPath},_defineProperty(_history$push,mode.editValue,editData.Data),_defineProperty(_history$push,\"pageMode\",editData.pageMode),_history$push));}else{setmodal_edit(true);}}},[editData]);function makeBtnHandler(rowData){rowData[\"hasSelect\"]=true;var arr=[];arr.push(rowData);makeBtnFunc(arr);}function hideBtnHandler(rowData){rowData[\"isHideValue\"]=\"0\";var arr=[];arr.push(rowData);hideBtnFunc(arr);}function tog_center(){if(modal_edit){breadcrumbReturnFunc({dispatch:dispatch,userAcc:userAccState,newBtnPath:masterPath});}setmodal_edit(false);}var makeBtnColumn=function makeBtnColumn(){// ======================== for makeBtnColumn Page Action Button ================================\nif(makeBtnShow&&pageMode===mode.modeSTPsave){return{text:\"Action\",dataField:\"hasSelect\",sort:true,attrs:function attrs(cell,row,rowIndex,colIndex){return{'data-label':'Action',\"sticky-col\":colIndex===0?\"true\":\"false\"};},formatter:function formatter(cellContent,rowData){rowData[\"hasSelect\"]=false;if(rowData.IsRecordDeleted===true){///hide button in GRN list 3 STP page last action column for Make Button\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:hideBtnCss,\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",disabled:listBtnLoading,title:\"UnHide\",onClick:function onClick(){hideBtnHandler(rowData);},children:listBtnLoading===\"btn-makeBtn-\".concat(rowData.id)?/*#__PURE__*/_jsx(Spinner,{style:{height:\"16px\",width:\"16px\"},color:\"white\"}):/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:\"4px\",marginRight:\"4px\"},className:\" fas fa-eye\"})})})});}else{return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:makeBtnCss,\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",disabled:listBtnLoading,title:makeBtnName,onClick:function onClick(){makeBtnHandler(rowData);},children:listBtnLoading===\"btn-makeBtn-\".concat(rowData.id)?/*#__PURE__*/_jsx(Spinner,{style:{height:\"16px\",width:\"16px\"},color:\"white\"}):/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:\"6px\",marginRight:\"6px\"},className:\" fas fa-file-invoice\"})})});}// }\n}};}};var lastColumn=function lastColumn(){// ======================== for List Page Action Button ================================\nif(!(pageMode===mode.modeSTPsave)){return listPageActionsButtonFunc(_objectSpread(_objectSpread({},props),{},{dispatch:dispatch,history:history,userAccState:userAccState,editActionFun:editId,deleteActionFun:deleteId}));}};var secondLastColumn=function secondLastColumn(){// ======================== for List Page Action Button ================================\nif(history.location.pathname===url.INVOICE_LIST_1){// INVOICE_LIST_1 E_Invoice buttons\nreturn E_Invoice_ActionsButtonFunc(_objectSpread(_objectSpread({},props),{},{dispatch:dispatch,userAccState:userAccState}));}};var thirdLastColumn=function thirdLastColumn(){// ======================== for List Page Action Button ================================\nif(history.location.pathname===url.INVOICE_LIST_1){// INVOICE_LIST_1 E_WayBill buttons\nreturn E_WayBill_ActionsButtonFunc(_objectSpread(_objectSpread({},props),{},{dispatch:dispatch,userAccState:userAccState}));}};var _DynamicColumnHook=DynamicColumnHook({pageField:pageField,reducers:props.reducers,secondLastColumn:secondLastColumn,thirdLastColumn:thirdLastColumn,lastColumn:lastColumn,makeBtnColumn:makeBtnColumn,userAccState:userAccState}),_DynamicColumnHook2=_slicedToArray(_DynamicColumnHook,2),tableColumns=_DynamicColumnHook2[0],defaultSorted=_DynamicColumnHook2[1];function rowSelected(){return tableList.map(function(index){return index.selectCheck;});}var nonSelectedRow=function nonSelectedRow(){var noSelectedIds=[];if(masterPath===url.SALES_RETURN){noSelectedIds=tableList.filter(function(row){return row.Status===\"Send To Supplier\"||row.Status===\"Open\";}).map(function(row){return row.id;});}else{noSelectedIds=tableList.filter(function(row){return row.forceSelectDissabled;}).map(function(row){return row.id;});}return noSelectedIds;};var updatedRowBlinkId=history.location.updatedRowBlinkId;if(!(userAccState===\"\")){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(MetaTags,{children:[\" \",metaTagLabel(userAccState)]}),/*#__PURE__*/_jsx(HeaderContent,{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ExtraTableWrapper,{data:tableList,children:function children(tableProps){return/*#__PURE__*/_jsx(CustomTable,{keyField:\"id\",data:tableProps,columns:tableColumns,selectRow:selectCheckParams.isShow?selectAllCheck(rowSelected(),nonSelectedRow(),\"left\",selectCheckParams.selectHeaderLabel):undefined,defaultSorted:defaultSorted,updatedRowBlinkId:updatedRowBlinkId,onDataSizeChange:function onDataSizeChange(_ref){var dataCount=_ref.dataCount,_ref$filteredData=_ref.filteredData,filteredData=_ref$filteredData===void 0?[]:_ref$filteredData;if(totalAmountShow===true){var totalAmount=filteredData.reduce(function(total,item){return total+Number(item.recordsAmountTotal)||0;},0);var commaSeparateAmount=amountCommaSeparateFunc(Number(totalAmount).toFixed(2));dispatch(BreadcrumbShowCountlabel(\"Count:\".concat(dataCount,\" \\u20B9 \").concat(commaSeparateAmount)));}else{dispatch(BreadcrumbShowCountlabel(\"Count:\".concat(dataCount)));}},paginationEnabled:true,noDataIndication:/*#__PURE__*/_jsx(\"div\",{className:\"text-danger text-center \",children:\"No record(s) Not Found.\"})});}}),tableList.length>0&&selectCheckParams.isShow?/*#__PURE__*/_jsx(\"div\",{className:\"row save1 \",style:{paddingBottom:'center'},children:/*#__PURE__*/_jsxs(C_Button,{forceDisabled:listBtnLoading,loading:selectCheckParams.selectSaveBtnLoading,style:{marginTop:\"-10px\"},type:\"button\",spinnerColor:\"white\",className:\"btn btn-primary w-md  \",onClick:function onClick(){selectCheckParams.selectSaveBtnHandler(tableList);},children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-edit me-2\"}),selectCheckParams.selectSaveBtnLabel]})}):null,/*#__PURE__*/_jsx(Modal,{isOpen:modal_edit,toggle:function toggle(){tog_center();},size:\"xl\",children:/*#__PURE__*/_jsx(MasterModal,{editValue:editData.Data,masterPath:masterPath,pageMode:editData.pageMode})})]}),/*#__PURE__*/_jsx(C_Report,{})]});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default CommonPurchaseList;/*********************************************************************************************************************** */var searchCount=0;var searchProps={onClear:function onClear(){},onSearch:function onSearch(){},searchText:\"\"};export var countlabelFunc=function countlabelFunc(toolkitProps,paginationProps,dispatch,ButtonMsgLable){var iscall=0;if(paginationProps.dataSize){iscall=paginationProps.dataSize;}if(!(iscall===searchCount)){dispatch(BreadcrumbShowCountlabel(\"\".concat(ButtonMsgLable,\" Count:\").concat(iscall)));searchCount=paginationProps.dataSize;}searchProps=toolkitProps.searchProps;};// import React, { useEffect, useState } from \"react\";\n// import { Button, Col, Modal, Row, Spinner } from \"reactstrap\";\n// import paginationFactory, {\n//   PaginationListStandalone,\n//   PaginationProvider,\n// } from \"react-bootstrap-table2-paginator\";\n// import ToolkitProvider from \"react-bootstrap-table2-toolkit\";\n// import BootstrapTable from \"react-bootstrap-table-next\";\n// import { useDispatch } from \"react-redux\";\n// import { MetaTags } from \"react-meta-tags\";\n// import { useHistory } from \"react-router-dom\";\n// import {\n//   BreadcrumbShowCountlabel,\n//   CommonBreadcrumbDetails,\n// } from \"../../store/actions\";\n// import { breadcrumbReturnFunc, metaTagLabel } from \"./CommonFunction\";\n// import { defaultSearch, mySearchProps } from \"./SearchBox/MySearch\";\n// import C_Report from \"./C_Report\";\n// import * as mode from \"../../routes/PageMode\";\n// import { customAlert } from \"../../CustomAlert/ConfirmDialog\";\n// import { E_Invoice_ActionsButtonFunc, E_WayBill_ActionsButtonFunc, listPageActionsButtonFunc, makeBtnCss } from \"./ListActionsButtons\";\n// import DynamicColumnHook, { selectAllCheck } from \"./TableCommonFunc\";\n// import { url } from \"../../routes\";\n// import { C_Button } from \"./CommonButton\";\n// let searchCount = 0;\n// let searchProps = {\n//   onClear: function onClear() { },\n//   onSearch: function onSearch() { },\n//   searchText: \"\",\n// };\n// export const countlabelFunc = (\n//   toolkitProps,\n//   paginationProps,\n//   dispatch,\n//   ButtonMsgLable\n// ) => {\n//   let iscall = 0;\n//   if (paginationProps.dataSize) {\n//     iscall = paginationProps.dataSize;\n//   }\n//   if (!(iscall === searchCount)) {\n//     dispatch(BreadcrumbShowCountlabel(`${ButtonMsgLable} Count:${iscall}`));\n//     searchCount = paginationProps.dataSize;\n//   }\n//   searchProps = toolkitProps.searchProps;\n// };\n// export async function isAlertFunc(type, Msg) {\n//   await customAlert({\n//     Type: type,\n//     Message: Msg.Message,\n//     isFunc: true,\n//   });\n// }\n// const CommonPurchaseList = (props) => {\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const [userAccState, setUserAccState] = useState(\"\");\n//   const [modal_edit, setmodal_edit] = useState(false);\n//   // const [tableList, settableList] = useState([]);\n//   const {\n//     editData = { Data: \"\" },\n//     updateMsg = { Status: false },\n//     deleteMsg = { Status: false },\n//     userAccess = [],\n//     postMsg = { Status: false },\n//     pageField = { id: \"\" },\n//     tableList = [],\n//     listBtnLoading = false,\n//   } = props.reducers;\n//   const { getList, editId, deleteId, postSucc, updateSucc, deleteSucc, viewId } =\n//     props.action;\n//   const {\n//     MasterModal,\n//     masterPath,\n//     ButtonMsgLable,\n//     goButnFunc = () => { },\n//     makeBtnFunc = () => { },\n//     makeBtnShow,\n//     makeBtnName,\n//     pageMode,\n//     newBtnPath,\n//     forceNewBtnView,\n//     HeaderContent = () => {\n//       return null;\n//     },\n//     selectCheckParams = { isShow: false }\n//   } = props;\n//   const { PageFieldMaster = [] } = { ...pageField };\n//   useEffect(() => {\n//     const locationPath = history.location.pathname;\n//     let userAcc = userAccess.find((inx) => {\n//       return `/${inx.ActualPagePath}` === locationPath;\n//     });\n//     if (!(userAcc === undefined)) {\n//       setUserAccState(userAcc);\n//       breadcrumbReturnFunc({ dispatch, userAcc, newBtnPath, forceNewBtnView });\n//     }\n//   }, [userAccess]);\n//   useEffect(() => {\n//     let downList = [];\n//     let defaultDownList2 = [];\n//     let listObj = {};\n//     let listObj2 = {};\n//     tableList.forEach((index1) => {\n//       PageFieldMaster.forEach((index2) => {\n//         if (index2.ShowInDownload) {\n//           listObj2[index2.ControlID] = index2.ShownloadDefaultSelect;\n//           listObj[index2.ControlID] = index1[index2.ControlID];\n//         }\n//       });\n//       downList.push(listObj);\n//       defaultDownList2.push(listObj2);\n//       listObj = {};\n//     });\n//     dispatch(\n//       CommonBreadcrumbDetails({\n//         downBtnData: downList,\n//         defaultDownBtnData: listObj2,\n//       })\n//     );\n//   }, [tableList]);\n//   // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\n//   useEffect(() => {\n//     if (updateMsg.Status === true && updateMsg.StatusCode === 200) {\n//       breadcrumbReturnFunc({\n//         dispatch,\n//         userAcc: userAccState,\n//         newBtnPath: masterPath,\n//       });\n//       dispatch(updateSucc({ Status: false }));\n//       goButnFunc();\n//       isAlertFunc(1, updateMsg);\n//       tog_center();\n//     } else if (updateMsg.Status === true) {\n//       dispatch(updateSucc({ Status: false }));\n//       isAlertFunc(3, updateMsg);\n//     }\n//   }, [updateMsg]);\n//   useEffect(() => {\n//     if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\n//       dispatch(deleteSucc({ Status: false }));\n//       goButnFunc();\n//       isAlertFunc(1, deleteMsg);\n//     } else if (deleteMsg.Status === true) {\n//       dispatch(deleteSucc({ Status: false }));\n//       isAlertFunc(3, deleteMsg);\n//     }\n//   }, [deleteMsg]);\n//   useEffect(() => {\n//     if (postMsg.Status === true && postMsg.StatusCode === 200) {\n//       dispatch(postSucc({ Status: false }));\n//       tog_center();\n//       dispatch(getList());\n//       isAlertFunc(1, postMsg);\n//     } else if (postMsg.Status === true) {\n//       dispatch(postSucc({ Status: false }));\n//       isAlertFunc(4, postMsg);\n//     }\n//   }, [postMsg]);\n//   // Edit Modal Show When Edit Data is true\n//   useEffect(() => {\n//     if ((editData.Status === true)) {\n//       if (pageField.IsEditPopuporComponent) {\n//         history.push({\n//           pathname: masterPath,\n//           [mode.editValue]: editData.Data,\n//           pageMode: editData.pageMode,\n//         });\n//       } else {\n//         setmodal_edit(true);\n//       }\n//     }\n//   }, [editData]);\n//   function makeBtnHandler(rowData) {\n//     rowData[\"hasSelect\"] = true;\n//     let arr = [];\n//     arr.push(rowData);\n//     makeBtnFunc(arr);\n//   }\n//   function tog_center() {\n//     if (modal_edit) {\n//       breadcrumbReturnFunc({\n//         dispatch,\n//         userAcc: userAccState,\n//         newBtnPath: masterPath,\n//       });\n//     }\n//     setmodal_edit(false);\n//   }\n//   const makeBtnColumn = () => {// ======================== for makeBtnColumn Page Action Button ================================\n//     if (\n//       makeBtnShow &&\n//       pageMode === mode.modeSTPsave\n//     ) {\n//       return {\n//         text: \"Action\",\n//         dataField: \"hasSelect\",\n//         sort: true,\n//         formatter: (cellContent, rowData, key) => {\n//           rowData[\"hasSelect\"] = false;\n//           return (\n//             <div>\n//               <Button\n//                 type=\"button\"\n//                 className={makeBtnCss}\n//                 data-mdb-toggle=\"tooltip\"\n//                 data-mdb-placement=\"top\"\n//                 disabled={listBtnLoading}\n//                 title={makeBtnName}\n//                 onClick={() => {\n//                   makeBtnHandler(rowData);\n//                 }}\n//               >\n//                 {(listBtnLoading === `btn-makeBtn-${rowData.id}`) ?\n//                   <Spinner style={{ height: \"16px\", width: \"16px\" }} color=\"white\" />\n//                   : <span\n//                     style={{ marginLeft: \"6px\", marginRight: \"6px\" }}\n//                     className=\" fas fa-file-invoice\"\n//                   ></span>\n//                 }\n//               </Button>\n//             </div>\n//           );\n//           // }\n//         },\n//       }\n//     }\n//   }\n//   const lastColumn = () => {  // ======================== for List Page Action Button ================================\n//     if (!(pageMode === mode.modeSTPsave)) {\n//       return listPageActionsButtonFunc({\n//         ...props, dispatch, history, userAccState,\n//         editActionFun: editId,\n//         deleteActionFun: deleteId,\n//       })\n//     }\n//   }\n//   const secondLastColumn = () => {  // ======================== for List Page Action Button ================================\n//     if ((history.location.pathname === url.INVOICE_LIST_1)) {// INVOICE_LIST_1 E_Invoice buttons\n//       return E_Invoice_ActionsButtonFunc({ ...props, dispatch, userAccState, })\n//     }\n//   }\n//   const thirdLastColumn = () => {  // ======================== for List Page Action Button ================================\n//     if ((history.location.pathname === url.INVOICE_LIST_1)) {// INVOICE_LIST_1 E_WayBill buttons\n//       return E_WayBill_ActionsButtonFunc({ ...props, dispatch, userAccState, })\n//     }\n//   }\n//   const [tableColumns, defaultSorted, pageOptions,] = DynamicColumnHook({\n//     pageField,\n//     reducers: props.reducers,\n//     secondLastColumn,\n//     thirdLastColumn,\n//     lastColumn,\n//     makeBtnColumn,\n//     userAccState: userAccState\n//   })\n//   function rowSelected() {\n//     return tableList.map((index) => { return (index.selectCheck) })\n//   }\n//   const nonSelectedRow = () => {\n//     var noSelectedIds = [];\n//     if (masterPath === url.SALES_RETURN) {\n//       noSelectedIds = tableList\n//         .filter(row => (row.Status === \"Send To Supplier\") || (row.Status === \"Open\"))\n//         .map(row => row.id);\n//     } else {\n//       noSelectedIds = tableList\n//         .filter(row => row.forceSelectDissabled)\n//         .map(row => row.id);\n//     }\n//     return noSelectedIds;\n//   };\n//   if (!(userAccState === \"\")) {\n//     return (\n//       <React.Fragment>\n//         <MetaTags> {metaTagLabel(userAccState)}</MetaTags>\n//         <HeaderContent />\n//         <div >\n//           <PaginationProvider pagination={paginationFactory(pageOptions)}>\n//             {({ paginationProps, paginationTableProps }) => (\n//               <ToolkitProvider\n//                 keyField=\"id\"\n//                 data={tableList}\n//                 columns={tableColumns}\n//                 search={defaultSearch(pageField.id)}\n//               >\n//                 {(toolkitProps, a) => (\n//                   <React.Fragment>\n//                     <Row>\n//                       <Col xl=\"12\">\n//                         <div className=\"table-responsive mt-1\" >\n//                           <BootstrapTable\n//                             keyField={\"id\"}\n//                             // key={`table-key-${pageField.PageHeading}`}\n//                             responsive\n//                             bootstrap4\n//                             bordered={false}\n//                             selectRow={selectCheckParams.isShow ?\n//                               selectAllCheck(rowSelected(), nonSelectedRow(), \"left\", selectCheckParams.selectHeaderLabel)\n//                               : undefined}\n//                             defaultSorted={defaultSorted}\n//                             striped={true}\n//                             classes={\"table  table-bordered table-hover\"}\n//                             noDataIndication={\n//                               <div className=\"text-danger text-center \">\n//                                 No record(s) Not Found.\n//                               </div>\n//                             }\n//                             {...toolkitProps.baseProps}\n//                             {...paginationTableProps}\n//                           />\n//                         </div>\n//                       </Col>\n//                       {countlabelFunc(\n//                         toolkitProps,\n//                         paginationProps,\n//                         dispatch,\n//                         ButtonMsgLable\n//                       )}\n//                       {mySearchProps(toolkitProps.searchProps, pageField.id)}\n//                     </Row>\n//                     <Row className=\"align-items-md-center mt-30\">\n//                       <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\n//                         <PaginationListStandalone {...paginationProps} />\n//                       </Col>\n//                     </Row>\n//                   </React.Fragment>\n//                 )}\n//               </ToolkitProvider>\n//             )}\n//           </PaginationProvider>\n//           {\n//             ((tableList.length > 0) && (selectCheckParams.isShow) && (selectCheckParams.isRoleAccess)) ?\n//               <div className=\"row save1 \" style={{ paddingBottom: 'center' }}>\n//                 <C_Button\n//                   forceDisabled={listBtnLoading}\n//                   loading={selectCheckParams.selectSaveBtnLoading}\n//                   style={{ marginTop: \"-10px\" }}\n//                   type=\"button\"\n//                   spinnerColor=\"white\"\n//                   className=\"btn btn-primary w-md  \"\n//                   onClick={() => { selectCheckParams.selectSaveBtnHandler(tableList) }}\n//                 >\n//                   <i class=\"fas fa-edit me-2\"></i>{selectCheckParams.selectSaveBtnLabel}\n//                 </C_Button>\n//               </div>\n//               : null\n//           }\n//           <Modal\n//             isOpen={modal_edit}\n//             toggle={() => {\n//               tog_center();\n//             }}\n//             size=\"xl\"\n//           >\n//             <MasterModal\n//               editValue={editData.Data}\n//               masterPath={masterPath}\n//               pageMode={editData.pageMode}\n//             />\n//           </Modal>\n//         </div>\n//         <C_Report />\n//       </React.Fragment>\n//     );\n//   } else {\n//     return <React.Fragment></React.Fragment>;\n//   }\n// };\n// export default CommonPurchaseList;","map":{"version":3,"names":["React","useEffect","useState","Button","Input","Modal","Spinner","useDispatch","MetaTags","useHistory","BreadcrumbShowCountlabel","CommonBreadcrumbDetails","amountCommaSeparateFunc","breadcrumbReturnFunc","metaTagLabel","C_Report","mode","customAlert","E_Invoice_ActionsButtonFunc","E_WayBill_ActionsButtonFunc","hideBtnCss","listPageActionsButtonFunc","makeBtnCss","DynamicColumnHook","selectAllCheck","url","C_Button","CustomTable","ExtraTableWrapper","isAlertFunc","type","Msg","Type","Message","isFunc","CommonPurchaseList","props","dispatch","history","userAccState","setUserAccState","modal_edit","setmodal_edit","reducers","editData","Data","updateMsg","Status","deleteMsg","userAccess","postMsg","pageField","id","tableList","listBtnLoading","action","getList","editId","deleteId","postSucc","updateSucc","deleteSucc","viewId","MasterModal","masterPath","ButtonMsgLable","goButnFunc","makeBtnFunc","hideBtnFunc","makeBtnShow","makeBtnName","pageMode","newBtnPath","forceNewBtnView","HeaderContent","selectCheckParams","isShow","totalAmountShow","PageFieldMaster","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","downList","defaultDownList2","listObj","listObj2","forEach","index1","index2","ShowInDownload","ControlID","ShownloadDefaultSelect","push","downBtnData","defaultDownBtnData","StatusCode","tog_center","IsEditPopuporComponent","editValue","makeBtnHandler","rowData","arr","hideBtnHandler","makeBtnColumn","modeSTPsave","text","dataField","sort","attrs","cell","row","rowIndex","colIndex","formatter","cellContent","IsRecordDeleted","height","width","marginLeft","marginRight","lastColumn","editActionFun","deleteActionFun","secondLastColumn","INVOICE_LIST_1","thirdLastColumn","tableColumns","defaultSorted","rowSelected","map","index","selectCheck","nonSelectedRow","noSelectedIds","SALES_RETURN","filter","forceSelectDissabled","updatedRowBlinkId","tableProps","selectHeaderLabel","dataCount","filteredData","totalAmount","reduce","total","item","Number","recordsAmountTotal","commaSeparateAmount","toFixed","length","paddingBottom","selectSaveBtnLoading","marginTop","selectSaveBtnHandler","selectSaveBtnLabel","searchCount","searchProps","onClear","onSearch","searchText","countlabelFunc","toolkitProps","paginationProps","iscall","dataSize"],"sources":["D:/Rohit/Git projects/Manthan/src/components/Common/CommonPurchaseList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Input, Modal, Spinner } from \"reactstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  BreadcrumbShowCountlabel,\r\n  CommonBreadcrumbDetails,\r\n} from \"../../store/actions\";\r\nimport { amountCommaSeparateFunc, breadcrumbReturnFunc, metaTagLabel } from \"./CommonFunction\";\r\nimport C_Report from \"./C_Report\";\r\nimport * as mode from \"../../routes/PageMode\";\r\nimport { customAlert } from \"../../CustomAlert/ConfirmDialog\";\r\nimport { E_Invoice_ActionsButtonFunc, E_WayBill_ActionsButtonFunc, hideBtnCss, listPageActionsButtonFunc, makeBtnCss } from \"./ListActionsButtons\";\r\nimport DynamicColumnHook, { selectAllCheck } from \"./TableCommonFunc\";\r\nimport { url } from \"../../routes\";\r\nimport { C_Button } from \"./CommonButton\";\r\nimport CustomTable from \"../../CustomTable2\";\r\nimport ExtraTableWrapper from \"../../CustomTable2/TableWrapper\";\r\n\r\n\r\nexport async function isAlertFunc(type, Msg) {\r\n  await customAlert({\r\n    Type: type,\r\n    Message: Msg.Message,\r\n    isFunc: true,\r\n  });\r\n}\r\n\r\nconst CommonPurchaseList = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [userAccState, setUserAccState] = useState(\"\");\r\n  const [modal_edit, setmodal_edit] = useState(false);\r\n  // const [tableList, settableList] = useState([]);\r\n  const {\r\n    editData = { Data: \"\" },\r\n    updateMsg = { Status: false },\r\n    deleteMsg = { Status: false },\r\n    userAccess = [],\r\n    postMsg = { Status: false },\r\n    pageField = { id: \"\" },\r\n    tableList = [],\r\n    listBtnLoading = false,\r\n  } = props.reducers;\r\n\r\n  const { getList, editId, deleteId, postSucc, updateSucc, deleteSucc, viewId } =\r\n    props.action;\r\n\r\n  const {\r\n    MasterModal,\r\n    masterPath,\r\n    ButtonMsgLable,\r\n    goButnFunc = () => { },\r\n    makeBtnFunc = () => { },\r\n    hideBtnFunc = () => { },\r\n    makeBtnShow,\r\n    makeBtnName,\r\n    pageMode,\r\n    newBtnPath,\r\n    forceNewBtnView,\r\n    HeaderContent = () => {\r\n      return null;\r\n    },\r\n    selectCheckParams = { isShow: false },\r\n    totalAmountShow = false,\r\n  } = props;\r\n\r\n  const { PageFieldMaster = [] } = { ...pageField };\r\n\r\n  useEffect(() => {\r\n    const locationPath = history.location.pathname;\r\n    let userAcc = userAccess.find((inx) => {\r\n      return `/${inx.ActualPagePath}` === locationPath;\r\n    });\r\n    if (!(userAcc === undefined)) {\r\n      setUserAccState(userAcc);\r\n      breadcrumbReturnFunc({ dispatch, userAcc, newBtnPath, forceNewBtnView });\r\n    }\r\n  }, [userAccess]);\r\n\r\n  useEffect(() => {\r\n    let downList = [];\r\n    let defaultDownList2 = [];\r\n    let listObj = {};\r\n    let listObj2 = {};\r\n\r\n    tableList.forEach((index1) => {\r\n      PageFieldMaster.forEach((index2) => {\r\n        if (index2.ShowInDownload) {\r\n          listObj2[index2.ControlID] = index2.ShownloadDefaultSelect;\r\n          listObj[index2.ControlID] = index1[index2.ControlID];\r\n        }\r\n      });\r\n\r\n      downList.push(listObj);\r\n      defaultDownList2.push(listObj2);\r\n      listObj = {};\r\n    });\r\n    dispatch(\r\n      CommonBreadcrumbDetails({\r\n        downBtnData: downList,\r\n        defaultDownBtnData: listObj2,\r\n      })\r\n    );\r\n  }, [tableList]);\r\n\r\n  // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\r\n  useEffect(() => {\r\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200) {\r\n      breadcrumbReturnFunc({\r\n        dispatch,\r\n        userAcc: userAccState,\r\n        newBtnPath: masterPath,\r\n      });\r\n      dispatch(updateSucc({ Status: false }));\r\n      goButnFunc();\r\n      isAlertFunc(1, updateMsg);\r\n      tog_center();\r\n    } else if (updateMsg.Status === true) {\r\n      dispatch(updateSucc({ Status: false }));\r\n      isAlertFunc(3, updateMsg);\r\n    }\r\n  }, [updateMsg]);\r\n\r\n  useEffect(() => {\r\n    if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\r\n      dispatch(deleteSucc({ Status: false }));\r\n      goButnFunc();\r\n      isAlertFunc(1, deleteMsg);\r\n    } else if (deleteMsg.Status === true) {\r\n      dispatch(deleteSucc({ Status: false }));\r\n      isAlertFunc(3, deleteMsg);\r\n    }\r\n  }, [deleteMsg]);\r\n\r\n  useEffect(() => {\r\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\r\n      dispatch(postSucc({ Status: false }));\r\n      tog_center();\r\n      dispatch(getList());\r\n      isAlertFunc(1, postMsg);\r\n    } else if (postMsg.Status === true) {\r\n      dispatch(postSucc({ Status: false }));\r\n      isAlertFunc(4, postMsg);\r\n    }\r\n  }, [postMsg]);\r\n\r\n  // Edit Modal Show When Edit Data is true\r\n  useEffect(() => {\r\n\r\n    if ((editData.Status === true)) {\r\n      if (pageField.IsEditPopuporComponent) {\r\n        history.push({\r\n          pathname: masterPath,\r\n          [mode.editValue]: editData.Data,\r\n          pageMode: editData.pageMode,\r\n        });\r\n      } else {\r\n        setmodal_edit(true);\r\n      }\r\n    }\r\n  }, [editData]);\r\n\r\n  function makeBtnHandler(rowData) {\r\n\r\n    rowData[\"hasSelect\"] = true;\r\n    let arr = [];\r\n    arr.push(rowData);\r\n    makeBtnFunc(arr);\r\n  }\r\n\r\n\r\n\r\n  function hideBtnHandler(rowData) {\r\n    rowData[\"isHideValue\"] = \"0\";\r\n    let arr = [];\r\n    arr.push(rowData);\r\n    hideBtnFunc(arr);\r\n  }\r\n\r\n\r\n\r\n  function tog_center() {\r\n    if (modal_edit) {\r\n      breadcrumbReturnFunc({\r\n        dispatch,\r\n        userAcc: userAccState,\r\n        newBtnPath: masterPath,\r\n      });\r\n    }\r\n    setmodal_edit(false);\r\n  }\r\n\r\n  const makeBtnColumn = () => {// ======================== for makeBtnColumn Page Action Button ================================\r\n\r\n    if (\r\n      makeBtnShow &&\r\n      pageMode === mode.modeSTPsave\r\n    ) {\r\n      return {\r\n        text: \"Action\",\r\n        dataField: \"hasSelect\",\r\n        sort: true,\r\n        attrs: (cell, row, rowIndex, colIndex) => ({ 'data-label': 'Action', \"sticky-col\": (colIndex === 0) ? \"true\" : \"false\" }),\r\n        formatter: (cellContent, rowData) => {\r\n          rowData[\"hasSelect\"] = false;\r\n          if (rowData.IsRecordDeleted === true) {   ///hide button in GRN list 3 STP page last action column for Make Button\r\n            return (\r\n              <div>\r\n                <div>\r\n                  <Button\r\n                    type=\"button\"\r\n                    className={hideBtnCss}\r\n                    data-mdb-toggle=\"tooltip\"\r\n                    data-mdb-placement=\"top\"\r\n                    disabled={listBtnLoading}\r\n                    title={\"UnHide\"}\r\n                    onClick={() => {\r\n                      hideBtnHandler(rowData);\r\n                    }}\r\n                  >\r\n                    {(listBtnLoading === `btn-makeBtn-${rowData.id}`) ?\r\n                      <Spinner style={{ height: \"16px\", width: \"16px\" }} color=\"white\" />\r\n                      : <span\r\n                        style={{ marginLeft: \"4px\", marginRight: \"4px\" }}\r\n                        className=\" fas fa-eye\"\r\n                      ></span>\r\n                    }\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div>\r\n                <Button\r\n                  type=\"button\"\r\n                  className={makeBtnCss}\r\n                  data-mdb-toggle=\"tooltip\"\r\n                  data-mdb-placement=\"top\"\r\n                  disabled={listBtnLoading}\r\n                  title={makeBtnName}\r\n                  onClick={() => {\r\n                    makeBtnHandler(rowData);\r\n                  }}\r\n                >\r\n                  {(listBtnLoading === `btn-makeBtn-${rowData.id}`) ?\r\n                    <Spinner style={{ height: \"16px\", width: \"16px\" }} color=\"white\" />\r\n                    : <span\r\n                      style={{ marginLeft: \"6px\", marginRight: \"6px\" }}\r\n                      className=\" fas fa-file-invoice\"\r\n                    ></span>\r\n                  }\r\n                </Button>\r\n              </div>\r\n            );\r\n          }\r\n\r\n          // }\r\n        },\r\n      }\r\n    }\r\n  }\r\n  const lastColumn = () => {  // ======================== for List Page Action Button ================================\r\n    if (!(pageMode === mode.modeSTPsave)) {\r\n\r\n      return listPageActionsButtonFunc({\r\n        ...props, dispatch, history, userAccState,\r\n        editActionFun: editId,\r\n        deleteActionFun: deleteId,\r\n      })\r\n    }\r\n  }\r\n\r\n  const secondLastColumn = () => {  // ======================== for List Page Action Button ================================\r\n    if ((history.location.pathname === url.INVOICE_LIST_1)) {// INVOICE_LIST_1 E_Invoice buttons\r\n      return E_Invoice_ActionsButtonFunc({ ...props, dispatch, userAccState, })\r\n    }\r\n  }\r\n\r\n  const thirdLastColumn = () => {  // ======================== for List Page Action Button ================================\r\n    if ((history.location.pathname === url.INVOICE_LIST_1)) {// INVOICE_LIST_1 E_WayBill buttons\r\n      return E_WayBill_ActionsButtonFunc({ ...props, dispatch, userAccState, })\r\n    }\r\n  }\r\n\r\n  const [tableColumns, defaultSorted] = DynamicColumnHook({\r\n    pageField,\r\n    reducers: props.reducers,\r\n    secondLastColumn,\r\n    thirdLastColumn,\r\n    lastColumn,\r\n    makeBtnColumn,\r\n    userAccState: userAccState\r\n  })\r\n\r\n\r\n  function rowSelected() {\r\n    return tableList.map((index) => { return (index.selectCheck) })\r\n  }\r\n\r\n  const nonSelectedRow = () => {\r\n\r\n    var noSelectedIds = [];\r\n\r\n    if (masterPath === url.SALES_RETURN) {\r\n      noSelectedIds = tableList\r\n        .filter(row => (row.Status === \"Send To Supplier\") || (row.Status === \"Open\"))\r\n        .map(row => row.id);\r\n    } else {\r\n      noSelectedIds = tableList\r\n        .filter(row => row.forceSelectDissabled)\r\n        .map(row => row.id);\r\n    }\r\n    return noSelectedIds;\r\n  };\r\n  const { updatedRowBlinkId } = history.location\r\n  if (!(userAccState === \"\")) {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MetaTags> {metaTagLabel(userAccState)}</MetaTags>\r\n        <HeaderContent />\r\n        <div >\r\n          <ExtraTableWrapper\r\n            data={tableList}\r\n          >\r\n            {(tableProps) => (\r\n              <CustomTable\r\n                keyField={\"id\"}\r\n                data={tableProps}\r\n                columns={tableColumns}\r\n                selectRow={selectCheckParams.isShow ?\r\n                  selectAllCheck(rowSelected(), nonSelectedRow(), \"left\", selectCheckParams.selectHeaderLabel)\r\n                  : undefined}\r\n                defaultSorted={defaultSorted}\r\n                updatedRowBlinkId={updatedRowBlinkId}\r\n                onDataSizeChange={({ dataCount, filteredData = [] }) => {\r\n\r\n                  if (totalAmountShow === true) {\r\n                    let totalAmount = filteredData.reduce((total, item) => {\r\n                      return total + Number(item.recordsAmountTotal) || 0;\r\n\r\n                    }, 0);\r\n                    let commaSeparateAmount = amountCommaSeparateFunc(Number(totalAmount).toFixed(2));\r\n\r\n                    dispatch(BreadcrumbShowCountlabel(`Count:${dataCount} ₹ ${commaSeparateAmount}`));\r\n                  }\r\n                  else {\r\n                    dispatch(BreadcrumbShowCountlabel(`Count:${dataCount}`));\r\n                  }\r\n                }}\r\n                paginationEnabled={true}\r\n                noDataIndication={\r\n                  <div className=\"text-danger text-center \">\r\n                    No record(s) Not Found.\r\n                  </div>\r\n                }\r\n              />)}\r\n          </ExtraTableWrapper>\r\n          {\r\n\r\n            ((tableList.length > 0) && (selectCheckParams.isShow)) ?\r\n\r\n              <div className=\"row save1 \" style={{ paddingBottom: 'center' }}>\r\n                <C_Button\r\n                  forceDisabled={listBtnLoading}\r\n                  loading={selectCheckParams.selectSaveBtnLoading}\r\n                  style={{ marginTop: \"-10px\" }}\r\n                  type=\"button\"\r\n                  spinnerColor=\"white\"\r\n                  className=\"btn btn-primary w-md  \"\r\n                  onClick={() => { selectCheckParams.selectSaveBtnHandler(tableList) }}\r\n                >\r\n                  <i class=\"fas fa-edit me-2\"></i>{selectCheckParams.selectSaveBtnLabel}\r\n                </C_Button>\r\n              </div>\r\n              : null\r\n          }\r\n\r\n          <Modal\r\n            isOpen={modal_edit}\r\n            toggle={() => {\r\n              tog_center();\r\n            }}\r\n            size=\"xl\"\r\n          >\r\n            <MasterModal\r\n              editValue={editData.Data}\r\n              masterPath={masterPath}\r\n              pageMode={editData.pageMode}\r\n            />\r\n          </Modal>\r\n        </div>\r\n\r\n        <C_Report />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <React.Fragment></React.Fragment>;\r\n  }\r\n};\r\n\r\nexport default CommonPurchaseList;\r\n\r\n\r\n\r\n\r\n/*********************************************************************************************************************** */\r\n\r\nlet searchCount = 0\r\nlet searchProps = {\r\n  onClear: function onClear() { },\r\n  onSearch: function onSearch() { },\r\n  searchText: \"\"\r\n}\r\n\r\nexport const countlabelFunc = (toolkitProps, paginationProps, dispatch, ButtonMsgLable) => {\r\n\r\n  let iscall = 0\r\n  if (paginationProps.dataSize) {\r\n    iscall = paginationProps.dataSize\r\n  }\r\n\r\n  if (!(iscall === searchCount)) {\r\n    dispatch(BreadcrumbShowCountlabel(`${ButtonMsgLable} Count:${iscall}`))\r\n    searchCount = paginationProps.dataSize\r\n  }\r\n  searchProps = toolkitProps.searchProps\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Col, Modal, Row, Spinner } from \"reactstrap\";\r\n// import paginationFactory, {\r\n//   PaginationListStandalone,\r\n//   PaginationProvider,\r\n// } from \"react-bootstrap-table2-paginator\";\r\n// import ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { MetaTags } from \"react-meta-tags\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {\r\n//   BreadcrumbShowCountlabel,\r\n//   CommonBreadcrumbDetails,\r\n// } from \"../../store/actions\";\r\n// import { breadcrumbReturnFunc, metaTagLabel } from \"./CommonFunction\";\r\n// import { defaultSearch, mySearchProps } from \"./SearchBox/MySearch\";\r\n// import C_Report from \"./C_Report\";\r\n// import * as mode from \"../../routes/PageMode\";\r\n// import { customAlert } from \"../../CustomAlert/ConfirmDialog\";\r\n// import { E_Invoice_ActionsButtonFunc, E_WayBill_ActionsButtonFunc, listPageActionsButtonFunc, makeBtnCss } from \"./ListActionsButtons\";\r\n// import DynamicColumnHook, { selectAllCheck } from \"./TableCommonFunc\";\r\n// import { url } from \"../../routes\";\r\n// import { C_Button } from \"./CommonButton\";\r\n\r\n// let searchCount = 0;\r\n\r\n// let searchProps = {\r\n//   onClear: function onClear() { },\r\n//   onSearch: function onSearch() { },\r\n//   searchText: \"\",\r\n// };\r\n\r\n// export const countlabelFunc = (\r\n//   toolkitProps,\r\n//   paginationProps,\r\n//   dispatch,\r\n//   ButtonMsgLable\r\n// ) => {\r\n//   let iscall = 0;\r\n//   if (paginationProps.dataSize) {\r\n//     iscall = paginationProps.dataSize;\r\n//   }\r\n\r\n//   if (!(iscall === searchCount)) {\r\n//     dispatch(BreadcrumbShowCountlabel(`${ButtonMsgLable} Count:${iscall}`));\r\n//     searchCount = paginationProps.dataSize;\r\n//   }\r\n//   searchProps = toolkitProps.searchProps;\r\n// };\r\n\r\n// export async function isAlertFunc(type, Msg) {\r\n//   await customAlert({\r\n//     Type: type,\r\n//     Message: Msg.Message,\r\n//     isFunc: true,\r\n//   });\r\n// }\r\n\r\n// const CommonPurchaseList = (props) => {\r\n\r\n//   const dispatch = useDispatch();\r\n//   const history = useHistory();\r\n\r\n//   const [userAccState, setUserAccState] = useState(\"\");\r\n//   const [modal_edit, setmodal_edit] = useState(false);\r\n//   // const [tableList, settableList] = useState([]);\r\n//   const {\r\n//     editData = { Data: \"\" },\r\n//     updateMsg = { Status: false },\r\n//     deleteMsg = { Status: false },\r\n//     userAccess = [],\r\n//     postMsg = { Status: false },\r\n//     pageField = { id: \"\" },\r\n//     tableList = [],\r\n//     listBtnLoading = false,\r\n//   } = props.reducers;\r\n\r\n//   const { getList, editId, deleteId, postSucc, updateSucc, deleteSucc, viewId } =\r\n//     props.action;\r\n\r\n//   const {\r\n//     MasterModal,\r\n//     masterPath,\r\n//     ButtonMsgLable,\r\n//     goButnFunc = () => { },\r\n//     makeBtnFunc = () => { },\r\n//     makeBtnShow,\r\n//     makeBtnName,\r\n//     pageMode,\r\n//     newBtnPath,\r\n//     forceNewBtnView,\r\n//     HeaderContent = () => {\r\n//       return null;\r\n//     },\r\n//     selectCheckParams = { isShow: false }\r\n//   } = props;\r\n\r\n//   const { PageFieldMaster = [] } = { ...pageField };\r\n\r\n//   useEffect(() => {\r\n//     const locationPath = history.location.pathname;\r\n//     let userAcc = userAccess.find((inx) => {\r\n//       return `/${inx.ActualPagePath}` === locationPath;\r\n//     });\r\n//     if (!(userAcc === undefined)) {\r\n//       setUserAccState(userAcc);\r\n//       breadcrumbReturnFunc({ dispatch, userAcc, newBtnPath, forceNewBtnView });\r\n//     }\r\n//   }, [userAccess]);\r\n\r\n//   useEffect(() => {\r\n//     let downList = [];\r\n//     let defaultDownList2 = [];\r\n//     let listObj = {};\r\n//     let listObj2 = {};\r\n\r\n//     tableList.forEach((index1) => {\r\n//       PageFieldMaster.forEach((index2) => {\r\n//         if (index2.ShowInDownload) {\r\n//           listObj2[index2.ControlID] = index2.ShownloadDefaultSelect;\r\n//           listObj[index2.ControlID] = index1[index2.ControlID];\r\n//         }\r\n//       });\r\n\r\n//       downList.push(listObj);\r\n//       defaultDownList2.push(listObj2);\r\n//       listObj = {};\r\n//     });\r\n//     dispatch(\r\n//       CommonBreadcrumbDetails({\r\n//         downBtnData: downList,\r\n//         defaultDownBtnData: listObj2,\r\n//       })\r\n//     );\r\n//   }, [tableList]);\r\n\r\n//   // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\r\n//   useEffect(() => {\r\n//     if (updateMsg.Status === true && updateMsg.StatusCode === 200) {\r\n//       breadcrumbReturnFunc({\r\n//         dispatch,\r\n//         userAcc: userAccState,\r\n//         newBtnPath: masterPath,\r\n//       });\r\n//       dispatch(updateSucc({ Status: false }));\r\n//       goButnFunc();\r\n//       isAlertFunc(1, updateMsg);\r\n//       tog_center();\r\n//     } else if (updateMsg.Status === true) {\r\n//       dispatch(updateSucc({ Status: false }));\r\n//       isAlertFunc(3, updateMsg);\r\n//     }\r\n//   }, [updateMsg]);\r\n\r\n//   useEffect(() => {\r\n//     if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\r\n//       dispatch(deleteSucc({ Status: false }));\r\n//       goButnFunc();\r\n//       isAlertFunc(1, deleteMsg);\r\n//     } else if (deleteMsg.Status === true) {\r\n//       dispatch(deleteSucc({ Status: false }));\r\n//       isAlertFunc(3, deleteMsg);\r\n//     }\r\n//   }, [deleteMsg]);\r\n\r\n//   useEffect(() => {\r\n//     if (postMsg.Status === true && postMsg.StatusCode === 200) {\r\n//       dispatch(postSucc({ Status: false }));\r\n//       tog_center();\r\n//       dispatch(getList());\r\n//       isAlertFunc(1, postMsg);\r\n//     } else if (postMsg.Status === true) {\r\n//       dispatch(postSucc({ Status: false }));\r\n//       isAlertFunc(4, postMsg);\r\n//     }\r\n//   }, [postMsg]);\r\n\r\n//   // Edit Modal Show When Edit Data is true\r\n//   useEffect(() => {\r\n\r\n//     if ((editData.Status === true)) {\r\n//       if (pageField.IsEditPopuporComponent) {\r\n//         history.push({\r\n//           pathname: masterPath,\r\n//           [mode.editValue]: editData.Data,\r\n//           pageMode: editData.pageMode,\r\n//         });\r\n//       } else {\r\n//         setmodal_edit(true);\r\n//       }\r\n//     }\r\n//   }, [editData]);\r\n\r\n//   function makeBtnHandler(rowData) {\r\n\r\n//     rowData[\"hasSelect\"] = true;\r\n//     let arr = [];\r\n//     arr.push(rowData);\r\n//     makeBtnFunc(arr);\r\n//   }\r\n\r\n//   function tog_center() {\r\n//     if (modal_edit) {\r\n//       breadcrumbReturnFunc({\r\n//         dispatch,\r\n//         userAcc: userAccState,\r\n//         newBtnPath: masterPath,\r\n//       });\r\n//     }\r\n//     setmodal_edit(false);\r\n//   }\r\n\r\n//   const makeBtnColumn = () => {// ======================== for makeBtnColumn Page Action Button ================================\r\n\r\n//     if (\r\n//       makeBtnShow &&\r\n//       pageMode === mode.modeSTPsave\r\n//     ) {\r\n//       return {\r\n//         text: \"Action\",\r\n//         dataField: \"hasSelect\",\r\n//         sort: true,\r\n//         formatter: (cellContent, rowData, key) => {\r\n//           rowData[\"hasSelect\"] = false;\r\n\r\n//           return (\r\n//             <div>\r\n//               <Button\r\n//                 type=\"button\"\r\n//                 className={makeBtnCss}\r\n//                 data-mdb-toggle=\"tooltip\"\r\n//                 data-mdb-placement=\"top\"\r\n//                 disabled={listBtnLoading}\r\n//                 title={makeBtnName}\r\n//                 onClick={() => {\r\n//                   makeBtnHandler(rowData);\r\n//                 }}\r\n//               >\r\n//                 {(listBtnLoading === `btn-makeBtn-${rowData.id}`) ?\r\n//                   <Spinner style={{ height: \"16px\", width: \"16px\" }} color=\"white\" />\r\n//                   : <span\r\n//                     style={{ marginLeft: \"6px\", marginRight: \"6px\" }}\r\n//                     className=\" fas fa-file-invoice\"\r\n//                   ></span>\r\n//                 }\r\n//               </Button>\r\n//             </div>\r\n//           );\r\n//           // }\r\n//         },\r\n//       }\r\n//     }\r\n//   }\r\n//   const lastColumn = () => {  // ======================== for List Page Action Button ================================\r\n//     if (!(pageMode === mode.modeSTPsave)) {\r\n//       return listPageActionsButtonFunc({\r\n//         ...props, dispatch, history, userAccState,\r\n//         editActionFun: editId,\r\n//         deleteActionFun: deleteId,\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   const secondLastColumn = () => {  // ======================== for List Page Action Button ================================\r\n//     if ((history.location.pathname === url.INVOICE_LIST_1)) {// INVOICE_LIST_1 E_Invoice buttons\r\n//       return E_Invoice_ActionsButtonFunc({ ...props, dispatch, userAccState, })\r\n//     }\r\n//   }\r\n\r\n//   const thirdLastColumn = () => {  // ======================== for List Page Action Button ================================\r\n//     if ((history.location.pathname === url.INVOICE_LIST_1)) {// INVOICE_LIST_1 E_WayBill buttons\r\n//       return E_WayBill_ActionsButtonFunc({ ...props, dispatch, userAccState, })\r\n//     }\r\n//   }\r\n\r\n//   const [tableColumns, defaultSorted, pageOptions,] = DynamicColumnHook({\r\n//     pageField,\r\n//     reducers: props.reducers,\r\n//     secondLastColumn,\r\n//     thirdLastColumn,\r\n//     lastColumn,\r\n//     makeBtnColumn,\r\n//     userAccState: userAccState\r\n//   })\r\n\r\n\r\n//   function rowSelected() {\r\n//     return tableList.map((index) => { return (index.selectCheck) })\r\n//   }\r\n\r\n//   const nonSelectedRow = () => {\r\n\r\n//     var noSelectedIds = [];\r\n\r\n//     if (masterPath === url.SALES_RETURN) {\r\n//       noSelectedIds = tableList\r\n//         .filter(row => (row.Status === \"Send To Supplier\") || (row.Status === \"Open\"))\r\n//         .map(row => row.id);\r\n//     } else {\r\n//       noSelectedIds = tableList\r\n//         .filter(row => row.forceSelectDissabled)\r\n//         .map(row => row.id);\r\n//     }\r\n//     return noSelectedIds;\r\n//   };\r\n\r\n//   if (!(userAccState === \"\")) {\r\n\r\n//     return (\r\n//       <React.Fragment>\r\n//         <MetaTags> {metaTagLabel(userAccState)}</MetaTags>\r\n//         <HeaderContent />\r\n//         <div >\r\n//           <PaginationProvider pagination={paginationFactory(pageOptions)}>\r\n//             {({ paginationProps, paginationTableProps }) => (\r\n//               <ToolkitProvider\r\n//                 keyField=\"id\"\r\n//                 data={tableList}\r\n//                 columns={tableColumns}\r\n//                 search={defaultSearch(pageField.id)}\r\n//               >\r\n//                 {(toolkitProps, a) => (\r\n//                   <React.Fragment>\r\n//                     <Row>\r\n\r\n//                       <Col xl=\"12\">\r\n//                         <div className=\"table-responsive mt-1\" >\r\n//                           <BootstrapTable\r\n//                             keyField={\"id\"}\r\n//                             // key={`table-key-${pageField.PageHeading}`}\r\n//                             responsive\r\n//                             bootstrap4\r\n//                             bordered={false}\r\n//                             selectRow={selectCheckParams.isShow ?\r\n//                               selectAllCheck(rowSelected(), nonSelectedRow(), \"left\", selectCheckParams.selectHeaderLabel)\r\n//                               : undefined}\r\n//                             defaultSorted={defaultSorted}\r\n//                             striped={true}\r\n//                             classes={\"table  table-bordered table-hover\"}\r\n//                             noDataIndication={\r\n//                               <div className=\"text-danger text-center \">\r\n//                                 No record(s) Not Found.\r\n//                               </div>\r\n//                             }\r\n//                             {...toolkitProps.baseProps}\r\n//                             {...paginationTableProps}\r\n//                           />\r\n//                         </div>\r\n//                       </Col>\r\n\r\n//                       {countlabelFunc(\r\n//                         toolkitProps,\r\n//                         paginationProps,\r\n//                         dispatch,\r\n//                         ButtonMsgLable\r\n//                       )}\r\n//                       {mySearchProps(toolkitProps.searchProps, pageField.id)}\r\n//                     </Row>\r\n//                     <Row className=\"align-items-md-center mt-30\">\r\n//                       <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n//                         <PaginationListStandalone {...paginationProps} />\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </React.Fragment>\r\n//                 )}\r\n//               </ToolkitProvider>\r\n//             )}\r\n//           </PaginationProvider>\r\n//           {\r\n\r\n//             ((tableList.length > 0) && (selectCheckParams.isShow) && (selectCheckParams.isRoleAccess)) ?\r\n\r\n//               <div className=\"row save1 \" style={{ paddingBottom: 'center' }}>\r\n//                 <C_Button\r\n//                   forceDisabled={listBtnLoading}\r\n//                   loading={selectCheckParams.selectSaveBtnLoading}\r\n//                   style={{ marginTop: \"-10px\" }}\r\n//                   type=\"button\"\r\n//                   spinnerColor=\"white\"\r\n//                   className=\"btn btn-primary w-md  \"\r\n//                   onClick={() => { selectCheckParams.selectSaveBtnHandler(tableList) }}\r\n//                 >\r\n//                   <i class=\"fas fa-edit me-2\"></i>{selectCheckParams.selectSaveBtnLabel}\r\n//                 </C_Button>\r\n//               </div>\r\n//               : null\r\n//           }\r\n\r\n//           <Modal\r\n//             isOpen={modal_edit}\r\n//             toggle={() => {\r\n//               tog_center();\r\n//             }}\r\n//             size=\"xl\"\r\n//           >\r\n//             <MasterModal\r\n//               editValue={editData.Data}\r\n//               masterPath={masterPath}\r\n//               pageMode={editData.pageMode}\r\n//             />\r\n//           </Modal>\r\n\r\n\r\n\r\n//         </div>\r\n\r\n//         <C_Report />\r\n//       </React.Fragment>\r\n//     );\r\n//   } else {\r\n//     return <React.Fragment></React.Fragment>;\r\n//   }\r\n// };\r\n\r\n// export default CommonPurchaseList;"],"mappings":"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},"metadata":{},"sourceType":"module"}