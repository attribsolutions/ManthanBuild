{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Purchase\\\\Return\\\\PurchaseReturn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, Label, Input, Row, Button, Table } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShowCountlabel, Breadcrumb_inputName, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { commonPageField } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { comAddPageFieldFunc, initialFiledFunc, onChangeSelect, onChangeText, resetFunction } from \"../../../components/Common/validationFunction\";\nimport Select from \"react-select\";\nimport { Change_Button, C_Button, SaveButton } from \"../../../components/Common/CommonButton\";\nimport { url, mode, pageId } from \"../../../routes/index\";\nimport { GetVenderSupplierCustomer } from \"../../../store/CommonAPI/SupplierRedux/actions\";\nimport { customAlert } from \"../../../CustomAlert/ConfirmDialog\";\nimport { postSelect_Field_for_dropdown } from \"../../../store/Administrator/PartyMasterBulkUpdateRedux/actions\";\nimport { saveSalesReturnMaster, InvoiceNumber, InvoiceNumberSuccess, saveSalesReturnMaster_Success, SalesReturnAddBtn_Action, SalesReturnAddBtn_Action_Succcess } from \"../../../store/Sales/SalesReturnRedux/action\";\nimport \"./purchaseReturn.scss\";\nimport { CInput, C_DatePicker, C_Select } from \"../../../CustomValidateForm/index\";\nimport { decimalRegx } from \"../../../CustomValidateForm/RegexPattern\";\nimport { getpartyItemList } from \"../../../store/Administrator/PartyItemsRedux/action\";\nimport { innerStockCaculation, returnQtyOnChange, return_discountCalculate_Func, stockQtyOnChange } from \"./PurchaseReturnCalculation\";\nimport * as _cfunc from \"../../../components/Common/CommonFunction\";\nimport { mySearchProps } from \"../../../components/Common/SearchBox/MySearch\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PurchaseReturn = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const currentDate_ymd = _cfunc.date_ymd_func();\n\n  const [pageMode] = useState(mode.defaultsave);\n  const [userPageAccessState, setUserAccState] = useState('');\n  const fileds = {\n    ReturnDate: currentDate_ymd,\n    Customer: \"\",\n    ItemName: \"\",\n    InvoiceNumber: \"\",\n    BatchCode: \"\",\n    Comment: \"\"\n  };\n  const [state, setState] = useState(initialFiledFunc(fileds));\n  const [TableArr, setTableArr] = useState([]);\n  const [returnMode, setReturnMode] = useState(0); //(1==ItemWise) OR (2==invoiceWise)\n\n  const [imageTable, setImageTable] = useState([]); // for invoicer page heder dicount functionality useSate ************************************\n\n  const [discountValueAll, setDiscountValueAll] = useState(\"\");\n  const [discountTypeAll, setDiscountTypeAll] = useState({\n    value: 2,\n    label: \" % \"\n  });\n  const [discountDropOption] = useState([{\n    value: 1,\n    label: \"Rs\"\n  }, {\n    value: 2,\n    label: \"%\"\n  }]);\n  const [changeAllDiscount, setChangeAllDiscount] = useState(false);\n  const [forceReload, setForceReload] = useState(false); // ****************************************************************************\n  //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    ItemList,\n    ReturnReasonList,\n    InvoiceNo,\n    pageField,\n    userAccess,\n    supplier,\n    addButtonData,\n    saveBtnloading,\n    addBtnLoading,\n    invoiceNoDropDownLoading\n  } = useSelector(state => ({\n    addButtonData: state.SalesReturnReducer.addButtonData,\n    postMsg: state.SalesReturnReducer.postMsg,\n    supplier: state.CommonAPI_Reducer.vendorSupplierCustomer,\n    ItemList: state.PartyItemsReducer.partyItem,\n    ReturnReasonList: state.PartyMasterBulkUpdateReducer.SelectField,\n    InvoiceNo: state.SalesReturnReducer.InvoiceNo,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField,\n    saveBtnloading: state.SalesReturnReducer.saveBtnloading,\n    addBtnLoading: state.SalesReturnReducer.addBtnLoading,\n    invoiceNoDropDownLoading: state.SalesReturnReducer.invoiceNoDropDownLoading\n  }));\n  useEffect(() => {\n    dispatch(InvoiceNumberSuccess([]));\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(pageId.PURCHASE_RETURN));\n    dispatch(getpartyItemList(JSON.stringify(_cfunc.loginJsonBody())));\n    dispatch(GetVenderSupplierCustomer({\n      subPageMode: url.PURCHASE_RETURN,\n      RouteID: \"\"\n    }));\n    dispatch(BreadcrumbShowCountlabel(`${\"Total Amount\"} :${0}`));\n  }, []);\n  useEffect(() => {\n    if (TableArr.length === 0) {\n      setReturnMode(0);\n    }\n  }, [TableArr]);\n  const location = { ...history.location\n  };\n  const hasShowModal = props.hasOwnProperty(mode.editValue);\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  useEffect(() => {\n    // userAccess useEffect\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserAccState(userAcc);\n\n      _cfunc.breadcrumbReturnFunc({\n        dispatch,\n        userAcc\n      });\n    }\n\n    ;\n  }, [userAccess]);\n  useEffect(() => {\n    // Return Reason dropdown Values\n    const jsonBody = JSON.stringify({\n      Company: _cfunc.loginCompanyID(),\n      TypeID: 8\n    });\n    dispatch(postSelect_Field_for_dropdown(jsonBody));\n  }, []);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(saveSalesReturnMaster_Success({\n        Status: false\n      }));\n      setTableArr([]);\n      setState(() => resetFunction(fileds, state)); // Clear form values  \n\n      dispatch(Breadcrumb_inputName(''));\n\n      if (pageMode === mode.dropdownAdd) {\n        customAlert({\n          Type: 1,\n          Message: postMsg.Message\n        });\n      } else {\n        let alterRepont = customAlert({\n          Type: 1,\n          Message: postMsg.Message\n        });\n\n        if (alterRepont) {\n          history.push({\n            pathname: url.PURCHASE_RETURN_LIST\n          });\n        }\n      }\n    } else if (postMsg.Status === true) {\n      dispatch(saveSalesReturnMaster_Success({\n        Status: false\n      }));\n      customAlert({\n        Type: 4,\n        Message: JSON.stringify(postMsg.Message)\n      });\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (addButtonData.StatusCode === 200 && addButtonData.Status === true) {\n      dispatch(SalesReturnAddBtn_Action_Succcess({\n        StatusCode: false\n      }));\n\n      try {\n        const updateItemArr = [...TableArr];\n        let existingIds = updateItemArr.map(item => item.id);\n        let nextId = existingIds.length > 0 ? Math.max(...existingIds) + 1 : 1;\n        addButtonData.Data.forEach(i => {\n          const MRPOptions = i.ItemMRPDetails.map(i => ({\n            label: i.MRPValue,\n            value: i.MRP,\n            Rate: i.Rate\n          }));\n          const GSTOptions = i.ItemGSTDetails.map(i => ({\n            label: i.GSTPercentage,\n            value: i.GST\n          }));\n          const highestMRP = i.ItemMRPDetails.reduce((prev, current) => {\n            // Default highest GST when Return mode \"2==ItemWise\"\n            return prev.MRP > current.MRP ? prev : current;\n          }, '');\n          const highestGST = i.ItemGSTDetails.reduce((prev, current) => {\n            // Default  highest GST when Return mode \"2==ItemWise\"\n            return prev.GST > current.GST ? prev : current;\n          }, '');\n\n          if (returnMode === 2) {\n            //(returnMode === 2) ItemWise\n            i.Rate = highestMRP.Rate || \"\";\n            i.MRP = highestMRP.MRP || \"\";\n            i.MRPValue = highestMRP.MRPValue || \"\";\n            i.GST = highestGST.GST || \"\";\n            i.GSTPercentage = highestGST.GSTPercentage || \"\";\n          }\n\n          let ItemTotalStock = i.StockDetails.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"BaseUnitQuantity\"]) || 0, 0);\n          const InvoiceQuantity = i.Quantity;\n          const newItemRow = { ...i,\n            Quantity: '',\n            itemTotalAmount: 0,\n            InvoiceQuantity,\n            ItemTotalStock,\n            id: nextId,\n            MRPOptions,\n            GSTOptions\n          }; // const caculate = return_discountCalculate_Func(newItemRow)\n          // newItemRow[\"roundedTotalAmount\"] = caculate.roundedTotalAmount;\n\n          updateItemArr.push(newItemRow);\n          nextId++;\n        }); // let sumOfGrandTotal = updateItemArr.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"itemTotalAmount\"]) || 0, 0);\n        // let count_label = `${\"Total Amount\"} :${Number(sumOfGrandTotal).toLocaleString()}`\n        // dispatch(BreadcrumbShowCountlabel(count_label));\n\n        setTableArr(updateItemArr);\n        setState(i => {\n          let a = { ...i\n          };\n          a.values.ItemName = \"\";\n          a.hasValid.ItemName.valid = true;\n          return a;\n        });\n      } catch (error) {\n        _cfunc.CommonConsole(error);\n      }\n    }\n  }, [addButtonData]);\n  const itemList = ItemList.map(index => ({\n    value: index.Item,\n    label: index.ItemName,\n    itemCheck: index.selectCheck\n  }));\n  const ItemList_Options = itemList.filter(index => {\n    return index.itemCheck === true;\n  });\n  const ReturnReasonOptions = ReturnReasonList.map(index => ({\n    value: index.id,\n    label: index.Name\n  }));\n  const InvoiceNo_Options = InvoiceNo.map(index => ({\n    value: index.Invoice,\n    label: index.FullInvoiceNumber\n  }));\n  const supplierOptions = supplier.map(i => ({\n    value: i.id,\n    label: i.Name\n  }));\n  const pagesListColumns = [{\n    text: \"Item Name\",\n    dataField: \"ItemName\",\n    hidden: false,\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          minWidth: \"15%\"\n        },\n        children: row.ItemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    //***************Quantity********************************************************************* */\n    text: \"Quantity/Unit\",\n    dataField: \"\",\n    formatExtraData: {\n      tableList: TableArr\n    },\n    // classes: () => ('invoice-quantity-row1'),\n    formatter: (cellContent, index1, _key, _ref) => {\n      let {\n        tableList = []\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-1 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(CInput, {\n            type: \"text\",\n            cpattern: decimalRegx,\n            disabled: pageMode === 'edit' ? true : false,\n            id: `returnQty-${index1.id}-${_key}`,\n            className: \"input\",\n            style: {\n              textAlign: \"right\"\n            },\n            autoComplete: \"off\",\n            defaultValue: index1.Quantity,\n            onChange: event => {\n              returnQtyOnChange(event, index1, _key);\n              totalAmountCalcuationFunc(tableList);\n            }\n          }, index1.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-1 \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              disabled: true,\n              defaultValue: index1.UnitName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  }, {\n    text: \"Invoice Qty\",\n    hidden: returnMode === 1 ? false : true,\n    align: () => \"right\",\n    formatter: (cell, row) => /*#__PURE__*/_jsxDEV(Label, {\n      children: row.InvoiceQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 39\n    }, this)\n  }, {\n    //***************StockDetails********************************************************************* */\n    text: \"Stock Details\",\n    dataField: \"StockDetails\",\n    formatExtraData: {\n      tableList: TableArr\n    },\n    formatter: (cellContent, index1, _key, _ref2) => {\n      let {\n        tableList\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"table table-responsive mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Thead, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  zIndex: -1\n                },\n                children: \"BatchCode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  zIndex: -1\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                    children: \"Stock Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  zIndex: -1\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  zIndex: -1\n                },\n                children: \"Basic Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  zIndex: -1\n                },\n                children: \"MRP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n            children: cellContent.map(index2 => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {},\n                  children: index2.BatchCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                    id: `ActualQuantity-${index1.id}-${index2.id}`,\n                    children: index2.BaseUnitQuantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {},\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    autoComplete: \"off\",\n                    disabled: pageMode === 'edit' ? true : false,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    id: `batchQty${index1.id}-${index2.id}-${_key}`,\n                    defaultValue: index2.Qty,\n                    onChange: event => {\n                      stockQtyOnChange(event, index1, index2, _key);\n                      totalAmountCalcuationFunc(tableList);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"50px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: `stockItemRate-${index1.id}-${index2.id}`,\n                    children: _cfunc.amountCommaSeparateFunc(index2.Rate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"50px\"\n                  },\n                  children: index2.MRP\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 37\n              }, this)]\n            }, index1.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this);\n    }\n  }, {\n    //***************Discount********************************************************************* */\n    text: \"Discount/unit\",\n    dataField: \"\",\n    formatExtraData: {\n      discountValueAll: discountValueAll,\n      discountTypeAll: discountTypeAll,\n      changeAllDiscount: changeAllDiscount,\n      forceReload: forceReload,\n      tableList: TableArr\n    },\n    classes: () => \"invoice-discount-row\",\n    headerFormatter: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: TableArr.length <= 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-3 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Discount/unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" mt-n2 mb-n2\",\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              children: \"Discount/unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col col-6\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              type: \"text\",\n              defaultValue: discountTypeAll,\n              classNamePrefix: \"select2-selection\",\n              options: discountDropOption,\n              style: {\n                textAlign: \"right\"\n              },\n              onChange: e => {\n                setChangeAllDiscount(true);\n                setDiscountTypeAll(e);\n                setDiscountValueAll('');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col col-6\",\n            children: /*#__PURE__*/_jsxDEV(CInput, {\n              type: \"text\",\n              className: \"input\",\n              style: {\n                textAlign: \"right\"\n              },\n              cpattern: decimalRegx,\n              value: discountValueAll,\n              onChange: e => {\n                let e_val = Number(e.target.value); // Check if discount type is \"percentage\"\n\n                if (discountTypeAll.value === 2) {\n                  // Discount type 2 represents \"percentage\"\n                  // Limit the input to the range of 0 to 100\n                  if (e_val > 100) {\n                    e.target.value = 100; // Set the input value to 100 if it exceeds 100\n                  } else if (!(e_val >= 0 && e_val < 100)) {\n                    e.target.value = \"\"; // Clear the input value if it is less than 0\n                  }\n                }\n\n                setChangeAllDiscount(true);\n                setDiscountValueAll(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }, this);\n    },\n    formatter: (cellContent, index1, _key, formatExtraData) => {\n      let {\n        tableList,\n        discountValueAll,\n        discountTypeAll\n      } = formatExtraData;\n\n      if (formatExtraData.changeAllDiscount) {\n        index1.Discount = discountValueAll;\n        index1.DiscountType = discountTypeAll.value;\n        innerStockCaculation(index1, _key);\n        totalAmountCalcuationFunc(tableList);\n      }\n\n      if (!index1.DiscountType) {\n        index1[\"DiscountType\"] = discountTypeAll.value;\n      }\n\n      const defaultDiscountTypelabel = index1.DiscountType === 1 ? discountDropOption[0] : discountDropOption[1];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: \"Type\\xA0\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(Select // id={`DicountType_${key}`}\n              , {\n                classNamePrefix: \"select2-selection\" // key={`DicountType_${key}-${index1.id}`}\n                ,\n                value: defaultDiscountTypelabel,\n                options: discountDropOption,\n                onChange: e => {\n                  setChangeAllDiscount(false);\n                  setForceReload(!forceReload);\n                  index1.DiscountType = e.value;\n                  index1.Discount = '';\n                  innerStockCaculation(index1, _key);\n                  totalAmountCalcuationFunc(tableList);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: \"Value\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(CInput, {\n                className: \"input\" // id={`Dicount_${key}-${index1.id}`}\n                ,\n                style: {\n                  textAlign: \"right\"\n                },\n                type: \"text\",\n                value: index1.Discount,\n                cpattern: decimalRegx,\n                onChange: e => {\n                  let e_val = Number(e.target.value); // Check if discount type is \"percentage\"\n\n                  if (index1.DiscountType === 2) {\n                    // Discount type 2 represents \"percentage\"\n                    // Limit the input to the range of 0 to 100\n                    if (e_val > 100) {\n                      e.target.value = 100; // Set the input value to 100 if it exceeds 100\n                    } else if (!(e_val >= 0 && e_val < 100)) {\n                      e.target.value = ''; // Clear the input value if it is less than 0\n                    }\n                  }\n\n                  index1.Discount = e.target.value;\n                  setChangeAllDiscount(false);\n                  setForceReload(!forceReload);\n                  innerStockCaculation(index1);\n                  totalAmountCalcuationFunc(tableList);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `itemTotalAmount-${index1.id}-${_key}`,\n            children: _cfunc.amountCommaSeparateFunc(index1.itemTotalAmount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    }\n  }, {\n    text: \"Return Reason\",\n    dataField: \"\",\n    classes: () => \"sales-return-row\",\n    formatter: (cellContent, row) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parent mb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"child\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              isSearchable: true,\n              className: \"react-dropdown\",\n              classNamePrefix: \"dropdown\",\n              defaultValue: row.defaultReason,\n              styles: {\n                menu: provided => ({ ...provided,\n                  zIndex: 2\n                })\n              },\n              options: ReturnReasonOptions,\n              onChange: event => {\n                row[\"defaultReason\"] = event;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"child\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter Comment\",\n              defaultChecked: row.ItemComment,\n              type: \"text\",\n              onChange: event => {\n                row.ItemComment = event.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  }, {\n    text: \"Image\",\n    dataField: \"\",\n    classes: () => \"sales-return-Image-row\",\n    formatter: (cellContent, row, key) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group btn-group-example mb-3\",\n            role: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              className: \"form-control \",\n              name: \"image\",\n              id: \"file\",\n              accept: \".jpg, .jpeg, .png ,.pdf\",\n              onChange: event => {\n                imageSelectHandler(event, row);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              name: \"image\",\n              accept: \".jpg, .jpeg, .png ,.pdf\",\n              onClick: () => {\n                imageShowHandler(row);\n              },\n              id: \"ImageId\",\n              type: \"button\",\n              className: \"btn btn-primary \",\n              children: \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 25\n      }, this);\n    }\n  }, {\n    text: \"Action \",\n    dataField: \"\",\n    hidden: returnMode === 1 ? true : false,\n    formatExtraData: {\n      TableArr,\n      addBtnLoading\n    },\n    formatter: (cellContent, row, key, _ref3) => {\n      let {\n        TableArr,\n        addBtnLoading\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \" col col-sm-4 \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                id: \"deleteid\",\n                type: \"button\",\n                disabled: addBtnLoading,\n                className: \"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\",\n                \"data-mdb-toggle\": \"tooltip\",\n                \"data-mdb-placement\": \"top\",\n                title: \"Delete MRP\",\n                onClick: e => {\n                  deleteButtonAction(row, TableArr);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-delete font-size-18\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }];\n\n  const totalAmountCalcuationFunc = function () {\n    let tableList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let sumOfGrandTotal = tableList.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"itemTotalAmount\"]) || 0, 0);\n    let count_label = `${\"Total Amount\"} :${Number(sumOfGrandTotal).toLocaleString()}`;\n    dispatch(BreadcrumbShowCountlabel(count_label));\n  };\n\n  const deleteButtonAction = function (row) {\n    let TablelistArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    const newArr = TablelistArray.filter(index => !(index.id === row.id));\n    let sumOfGrandTotal = newArr.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"itemTotalAmount\"]) || 0, 0);\n    let count_label = `${\"Total Amount\"} :${Number(sumOfGrandTotal).toLocaleString()}`;\n    dispatch(BreadcrumbShowCountlabel(count_label));\n    setTableArr(newArr);\n  };\n\n  const ReturnDate_Onchange = (e, date) => {\n    setState(i => {\n      const a = { ...i\n      };\n      a.values.ReturnDate = date;\n      a.hasValid.ReturnDate.valid = true;\n      return a;\n    });\n  };\n\n  const AddPartyHandler = async byType => {\n    const invalidMsg1 = [];\n\n    if (values.ItemName === '' && byType === 'ItemWise') {\n      invalidMsg1.push(`Select Item Name`);\n    }\n\n    if (values.InvoiceNumber === '' && values.Customer === '' && byType === 'InvoiceWise') {\n      invalidMsg1.push(`Select ${fieldLabel.Customer}.`);\n    } else if (values.InvoiceNumber === '' && byType === 'InvoiceWise') {\n      invalidMsg1.push(`Select Invoice No.`);\n    }\n\n    if (invalidMsg1.length > 0) {\n      customAlert({\n        Type: 4,\n        Message: JSON.stringify(invalidMsg1)\n      });\n      return;\n    }\n\n    const jsonBody = JSON.stringify({\n      \"ItemID\": values.ItemName.value,\n      \"BatchCode\": values.BatchCode,\n      \"Customer\": _cfunc.loginPartyID() // Customer Swipe when Po return\n\n    });\n    const InvoiceId = values.InvoiceNumber ? values.InvoiceNumber.value : '';\n    const nrwReturnMode = byType === 'ItemWise' ? 2 : 1; //(returnMode === 2) ItemWise\n\n    dispatch(SalesReturnAddBtn_Action({\n      jsonBody,\n      InvoiceId,\n      returnMode: nrwReturnMode\n    }));\n    setReturnMode(nrwReturnMode);\n  };\n\n  const RetailerHandler = event => {\n    setState(i => {\n      let a = { ...i\n      };\n      a.values.ItemName = \"\";\n      a.values.InvoiceNumber = \"\";\n      a.values.Customer = event;\n      a.hasValid.Customer.valid = true;\n      a.hasValid.ItemName.valid = true;\n      a.hasValid.InvoiceNumber.valid = true;\n      return a;\n    });\n    setTableArr([]);\n    const jsonBody = JSON.stringify({\n      PartyID: _cfunc.loginPartyID(),\n      CustomerID: event.value\n    });\n    dispatch(InvoiceNumber(jsonBody));\n  };\n\n  const RetailerOnCancelClickHandler = () => {\n    setState(i => {\n      let a = { ...i\n      };\n      a.values.ItemName = \"\";\n      a.values.InvoiceNumber = \"\";\n      a.values.Customer = '';\n      a.hasValid.Customer.valid = true;\n      a.hasValid.ItemName.valid = true;\n      a.hasValid.InvoiceNumber.valid = true;\n      return a;\n    });\n    setTableArr([]);\n  };\n\n  const itemNameOnChangeHandler = (hasSelect, evn) => {\n    if (values.Customer === \"\") {\n      customAlert({\n        Type: 3,\n        Message: `Please select ${fieldLabel.Customer}`\n      });\n      return;\n    }\n\n    onChangeSelect({\n      hasSelect,\n      evn,\n      state,\n      setState\n    });\n    setReturnMode(2);\n  };\n\n  const imageSelectHandler = async (event, row) => {\n    // image onchange handler\n    const file = event.target.files[0];\n    const base64 = await convertBase64(file);\n    let ImageUpload = base64;\n    row.Image = ImageUpload;\n    setImageTable(ImageUpload);\n  };\n\n  const convertBase64 = file => {\n    // image convert in string\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const imageShowHandler = row => {\n    var x = document.getElementById(\"add-img\");\n\n    if (x.style.display === \"none\") {\n      x.src = imageTable;\n\n      if (imageTable != \"\") {\n        x.style.display = \"block\";\n      }\n    } else {\n      x.style.display = \"none\";\n    }\n  };\n\n  const SaveHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const invalidMessages = [];\n      const filterData = TableArr.filter(index => {\n        if (index.Quantity > 0) {\n          let msgString = ' Select';\n\n          if (index.StockInValid) {\n            invalidMessages.push(`${index.ItemName}:${index.StockInvalidMsg}`);\n            return;\n          }\n\n          ;\n\n          if (!index.defaultReason) {\n            msgString = msgString + ', ' + \"Return Reason\";\n          }\n\n          ;\n\n          if (!index.defaultReason) {\n            invalidMessages.push({\n              [index.ItemName]: msgString\n            });\n          }\n\n          return true;\n        }\n      });\n\n      if (invalidMessages.length > 0) {\n        customAlert({\n          Type: 4,\n          Message: invalidMessages\n        });\n        return;\n      }\n\n      if (filterData.length === 0) {\n        customAlert({\n          Type: 4,\n          Message: \"Please Enter One Item Quantity\"\n        });\n        return;\n      } // IsComparGstIn= compare Supplier and Customer are Same State by GSTIn Number\n\n\n      const IsComparGstIn = {\n        GSTIn_1: values.Customer.GSTIN,\n        GSTIn_2: _cfunc.loginUserGSTIN()\n      };\n      const {\n        processedItems,\n        grandTotal\n      } = filterData.reduce((_ref4, index) => {\n        let {\n          processedItems,\n          grandTotal\n        } = _ref4;\n        index.StockDetails.forEach(ele => {\n          if (ele.Qty > 0) {\n            //**calculate Amount, Discount Amount based on Discount type */\n            const calculate = return_discountCalculate_Func(ele, index, IsComparGstIn);\n            grandTotal += Number(calculate.roundedTotalAmount);\n            processedItems.push({\n              \"Item\": index.Item,\n              \"ItemName\": index.ItemName,\n              \"Unit\": index.Unit,\n              \"BatchCode\": ele.BatchCode,\n              \"Quantity\": Number(ele.Qty).toFixed(3),\n              \"BatchDate\": ele.BatchDate,\n              \"BatchID\": ele.id,\n              \"BaseUnitQuantity\": Number(ele.BaseUnitQuantity).toFixed(3),\n              \"LiveBatch\": ele.LiveBatche,\n              \"MRP\": ele.LiveBatcheMRPID,\n              \"MRPValue\": ele.MRP,\n              //changes\n              \"Rate\": Number(ele.Rate).toFixed(2),\n              \"GST\": ele.LiveBatcheGSTID,\n              \"CGST\": Number(calculate.CGST_Amount).toFixed(2),\n              \"SGST\": Number(calculate.SGST_Amount).toFixed(2),\n              \"IGST\": Number(calculate.IGST_Amount).toFixed(2),\n              \"GSTPercentage\": calculate.GST_Percentage,\n              \"CGSTPercentage\": calculate.CGST_Percentage,\n              \"SGSTPercentage\": calculate.SGST_Percentage,\n              \"IGSTPercentage\": calculate.IGST_Percentage,\n              \"BasicAmount\": Number(calculate.discountBaseAmt).toFixed(2),\n              \"GSTAmount\": Number(calculate.roundedGstAmount).toFixed(2),\n              \"Amount\": Number(calculate.roundedTotalAmount).toFixed(2),\n              \"TaxType\": 'GST',\n              \"DiscountType\": index.DiscountType,\n              \"Discount\": Number(index.Discount) || 0,\n              \"DiscountAmount\": Number(calculate.disCountAmt).toFixed(2),\n              \"ItemReason\": index.defaultReason ? index.defaultReason.value : \"\",\n              \"Comment\": index.ItemComment,\n              \"ApprovedQuantity\": \"\",\n              \"PurchaseReturn\": \"\",\n              \"SubReturn\": \"\",\n              \"ReturnItemImages\": []\n            });\n          }\n        });\n        return {\n          processedItems,\n          grandTotal\n        };\n      }, {\n        processedItems: [],\n        grandTotal: 0\n      });\n      const jsonBody = JSON.stringify({\n        ReturnDate: values.ReturnDate,\n        ReturnReason: '',\n        BatchCode: values.BatchCode,\n        Customer: _cfunc.loginPartyID(),\n        // Customer Swipe when Po return\n        Party: values.Customer.value,\n        // Party Swipe when Po return\n        Comment: values.Comment,\n        GrandTotal: Number(grandTotal).toFixed(2),\n        RoundOffAmount: (grandTotal - Math.trunc(grandTotal)).toFixed(2),\n        CreatedBy: _cfunc.loginUserID(),\n        UpdatedBy: _cfunc.loginUserID(),\n        Mode: 2,\n        //if puchase return then mode= 2 AND |Sale return then Mode =1\n        ReturnItems: processedItems,\n        PurchaseReturnReferences: []\n      });\n      dispatch(saveSalesReturnMaster({\n        jsonBody\n      }));\n    } catch (e) {\n      _cfunc.CommonConsole(e);\n    }\n  };\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: _cfunc.metaTagLabel(userPageAccessState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginBottom: \"5cm\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2 c_card_filter header text-black mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"row mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.ReturnDate, \"  \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(C_DatePicker, {\n                      name: \"ReturnDate\",\n                      value: values.ReturnDate,\n                      onChange: ReturnDate_Onchange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 929,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.Customer, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(C_Select, {\n                      id: \"Customer \",\n                      name: \"Customer\",\n                      value: values.Customer,\n                      isSearchable: true,\n                      isDisabled: TableArr.length > 0 || addBtnLoading ? true : false,\n                      options: supplierOptions,\n                      styles: {\n                        menu: provided => ({ ...provided,\n                          zIndex: 2\n                        })\n                      },\n                      onChange: RetailerHandler,\n                      onCancelClick: RetailerOnCancelClickHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 943,\n                      columnNumber: 45\n                    }, this), isError.Customer.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.Customer\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 957,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 942,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-1 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.ItemName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 968,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(C_Select, {\n                      id: \"ItemName \",\n                      name: \"ItemName\",\n                      value: values.ItemName,\n                      isDisabled: returnMode === 1 ? true : false,\n                      isSearchable: true,\n                      className: \"react-dropdown\",\n                      classNamePrefix: \"dropdown\",\n                      styles: {\n                        menu: provided => ({ ...provided,\n                          zIndex: 2\n                        })\n                      },\n                      options: ItemList_Options,\n                      onChange: itemNameOnChangeHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-1 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.Comment, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 991,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      name: \"Comment\",\n                      id: \"Comment\",\n                      value: values.Comment,\n                      type: \"text\",\n                      className: isError.Comment.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                      placeholder: \"Enter Comment\",\n                      autoComplete: \"off\",\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 994,\n                      columnNumber: 45\n                    }, this), isError.Comment.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.Comment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1007,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 993,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-1 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: fieldLabel.BatchCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1018,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      name: \"BatchCode\",\n                      value: values.BatchCode,\n                      placeholder: \"Enter BatchCode\",\n                      type: \"text\",\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1021,\n                      columnNumber: 45\n                    }, this), isError.BatchCode.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.BatchCode\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1031,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1031,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1020,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"1\",\n                    className: \"mx-6 mt-1\",\n                    children: !(returnMode === 1) &&\n                    /*#__PURE__*/\n                    ///(returnMode === 1) InvoiceWise\n                    _jsxDEV(C_Button, {\n                      type: \"button\",\n                      loading: addBtnLoading,\n                      className: \"btn btn-outline-primary border-1 font-size-12 text-center\",\n                      onClick: () => AddPartyHandler(\"ItemWise\"),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1038,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1017,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-1 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [\"  \", fieldLabel.InvoiceNumber]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1052,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(C_Select, {\n                      id: \"InvoiceNumber \",\n                      name: \"InvoiceNumber\",\n                      value: values.InvoiceNumber //(returnMode === 2) ItemWise\n                      ,\n                      isDisabled: returnMode === 2 || invoiceNoDropDownLoading || TableArr.length > 0 ? true : false,\n                      isSearchable: true,\n                      isLoading: invoiceNoDropDownLoading,\n                      styles: {\n                        menu: provided => ({ ...provided,\n                          zIndex: 2\n                        })\n                      },\n                      options: InvoiceNo_Options,\n                      onChange: (hasSelect, evn) => {\n                        onChangeSelect({\n                          hasSelect,\n                          evn,\n                          state,\n                          setState\n                        });\n                        setReturnMode(1);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1054,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"1\",\n                    className: \"mx-6 mt-1 \",\n                    children: TableArr.length > 0 || !(values.ItemName === \"\") ? /*#__PURE__*/_jsxDEV(Change_Button, {\n                      forceDisabled: addBtnLoading,\n                      onClick: e => {\n                        setTableArr([]);\n                        setState(i => {\n                          let a = { ...i\n                          };\n                          a.values.ItemName = \"\";\n                          a.values.InvoiceNumber = \"\";\n                          return a;\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1076,\n                      columnNumber: 49\n                    }, this) : !(returnMode === 2) &&\n                    /*#__PURE__*/\n                    //(returnMode === 2) ItemWise\n                    _jsxDEV(C_Button, {\n                      type: \"button\",\n                      loading: addBtnLoading,\n                      className: \"btn btn-outline-primary border-1 font-size-12 text-center\",\n                      onClick: () => AddPartyHandler(\"InvoiceWise\"),\n                      children: \"Select\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1089,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1074,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"id\",\n              data: TableArr,\n              columns: pagesListColumns,\n              search: true,\n              children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"table-responsive table\",\n                      style: {\n                        minHeight: \"60vh\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                        keyField: \"id\",\n                        id: \"table_Arrow\",\n                        classes: \"table  table-bordered \",\n                        noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-danger text-center \",\n                          children: \"Items Not available\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1121,\n                          columnNumber: 61\n                        }, this),\n                        ...toolkitProps.baseProps,\n                        onDataSizeChange: e => {\n                          _cfunc.tableInputArrowUpDounFunc(\"#table_Arrow\");\n                        }\n                      }, `table-key-${returnMode}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1115,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1114,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1113,\n                    columnNumber: 45\n                  }, this), mySearchProps(toolkitProps.searchProps)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1112,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1111,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 25\n          }, this), TableArr.length > 0 ? /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 2,\n              style: {\n                marginLeft: \"-40px\"\n              },\n              className: \"row save1\",\n              children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                pageMode: pageMode,\n                forceDisabled: addBtnLoading,\n                loading: saveBtnloading,\n                onClick: SaveHandler,\n                userAcc: userPageAccessState,\n                module: \"SalesReturn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1144,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(PurchaseReturn, \"6Tc3CL6VHedsT76juK/HKs/G4kw=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = PurchaseReturn;\nexport default PurchaseReturn;\n\nvar _c;\n\n$RefreshReg$(_c, \"PurchaseReturn\");","map":{"version":3,"names":["React","useEffect","useState","Col","FormGroup","Label","Input","Row","Button","Table","MetaTags","BreadcrumbShowCountlabel","Breadcrumb_inputName","commonPageFieldSuccess","useDispatch","useSelector","commonPageField","useHistory","comAddPageFieldFunc","initialFiledFunc","onChangeSelect","onChangeText","resetFunction","Select","Change_Button","C_Button","SaveButton","url","mode","pageId","GetVenderSupplierCustomer","customAlert","postSelect_Field_for_dropdown","saveSalesReturnMaster","InvoiceNumber","InvoiceNumberSuccess","saveSalesReturnMaster_Success","SalesReturnAddBtn_Action","SalesReturnAddBtn_Action_Succcess","CInput","C_DatePicker","C_Select","decimalRegx","getpartyItemList","innerStockCaculation","returnQtyOnChange","return_discountCalculate_Func","stockQtyOnChange","_cfunc","mySearchProps","BootstrapTable","ToolkitProvider","Tbody","Thead","PurchaseReturn","props","dispatch","history","currentDate_ymd","date_ymd_func","pageMode","defaultsave","userPageAccessState","setUserAccState","fileds","ReturnDate","Customer","ItemName","BatchCode","Comment","state","setState","TableArr","setTableArr","returnMode","setReturnMode","imageTable","setImageTable","discountValueAll","setDiscountValueAll","discountTypeAll","setDiscountTypeAll","value","label","discountDropOption","changeAllDiscount","setChangeAllDiscount","forceReload","setForceReload","postMsg","ItemList","ReturnReasonList","InvoiceNo","pageField","userAccess","supplier","addButtonData","saveBtnloading","addBtnLoading","invoiceNoDropDownLoading","SalesReturnReducer","CommonAPI_Reducer","vendorSupplierCustomer","PartyItemsReducer","partyItem","PartyMasterBulkUpdateReducer","SelectField","Login","RoleAccessUpdateData","CommonPageFieldReducer","PURCHASE_RETURN","JSON","stringify","loginJsonBody","subPageMode","RouteID","length","location","hasShowModal","hasOwnProperty","editValue","values","isError","fieldLabel","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","breadcrumbReturnFunc","jsonBody","Company","loginCompanyID","TypeID","fieldArr","PageFieldMaster","Status","StatusCode","dropdownAdd","Type","Message","alterRepont","push","PURCHASE_RETURN_LIST","updateItemArr","existingIds","map","item","id","nextId","Math","max","Data","forEach","i","MRPOptions","ItemMRPDetails","MRPValue","MRP","Rate","GSTOptions","ItemGSTDetails","GSTPercentage","GST","highestMRP","reduce","prev","current","highestGST","ItemTotalStock","StockDetails","accumulator","currentObject","Number","InvoiceQuantity","Quantity","newItemRow","itemTotalAmount","a","hasValid","valid","error","CommonConsole","itemList","index","Item","itemCheck","selectCheck","ItemList_Options","filter","ReturnReasonOptions","Name","InvoiceNo_Options","Invoice","FullInvoiceNumber","supplierOptions","pagesListColumns","text","dataField","hidden","formatter","cell","row","minWidth","formatExtraData","tableList","cellContent","index1","_key","textAlign","event","totalAmountCalcuationFunc","UnitName","align","zIndex","index2","BaseUnitQuantity","Qty","width","amountCommaSeparateFunc","classes","headerFormatter","e","e_val","target","Discount","DiscountType","defaultDiscountTypelabel","defaultReason","menu","provided","ItemComment","key","justifyContent","imageSelectHandler","imageShowHandler","deleteButtonAction","sumOfGrandTotal","count_label","toLocaleString","TablelistArray","newArr","ReturnDate_Onchange","date","AddPartyHandler","byType","invalidMsg1","loginPartyID","InvoiceId","nrwReturnMode","RetailerHandler","PartyID","CustomerID","RetailerOnCancelClickHandler","itemNameOnChangeHandler","hasSelect","evn","file","files","base64","convertBase64","ImageUpload","Image","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","x","document","getElementById","style","display","src","SaveHandler","preventDefault","invalidMessages","filterData","msgString","StockInValid","StockInvalidMsg","IsComparGstIn","GSTIn_1","GSTIN","GSTIn_2","loginUserGSTIN","processedItems","grandTotal","ele","calculate","roundedTotalAmount","Unit","toFixed","BatchDate","LiveBatche","LiveBatcheMRPID","LiveBatcheGSTID","CGST_Amount","SGST_Amount","IGST_Amount","GST_Percentage","CGST_Percentage","SGST_Percentage","IGST_Percentage","discountBaseAmt","roundedGstAmount","disCountAmt","ReturnReason","Party","GrandTotal","RoundOffAmount","trunc","CreatedBy","loginUserID","UpdatedBy","Mode","ReturnItems","PurchaseReturnReferences","metaTagLabel","marginBottom","marginRight","toolkitProps","minHeight","baseProps","tableInputArrowUpDounFunc","searchProps","marginLeft"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Purchase/Return/PurchaseReturn.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Row,\r\n    Button,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShowCountlabel, Breadcrumb_inputName, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { commonPageField } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    initialFiledFunc,\r\n    onChangeSelect,\r\n    onChangeText,\r\n    resetFunction,\r\n} from \"../../../components/Common/validationFunction\";\r\nimport Select from \"react-select\";\r\nimport { Change_Button, C_Button, SaveButton, } from \"../../../components/Common/CommonButton\";\r\nimport { url, mode, pageId } from \"../../../routes/index\"\r\nimport { GetVenderSupplierCustomer } from \"../../../store/CommonAPI/SupplierRedux/actions\";\r\nimport { customAlert } from \"../../../CustomAlert/ConfirmDialog\";\r\nimport { postSelect_Field_for_dropdown } from \"../../../store/Administrator/PartyMasterBulkUpdateRedux/actions\";\r\nimport { saveSalesReturnMaster, InvoiceNumber, InvoiceNumberSuccess, saveSalesReturnMaster_Success, SalesReturnAddBtn_Action, SalesReturnAddBtn_Action_Succcess } from \"../../../store/Sales/SalesReturnRedux/action\";\r\nimport \"./purchaseReturn.scss\";\r\nimport { CInput, C_DatePicker, C_Select } from \"../../../CustomValidateForm/index\";\r\nimport { decimalRegx, } from \"../../../CustomValidateForm/RegexPattern\";\r\nimport { getpartyItemList } from \"../../../store/Administrator/PartyItemsRedux/action\";\r\nimport { innerStockCaculation, returnQtyOnChange, return_discountCalculate_Func, stockQtyOnChange } from \"./PurchaseReturnCalculation\";\r\nimport * as _cfunc from \"../../../components/Common/CommonFunction\";\r\nimport { mySearchProps } from \"../../../components/Common/SearchBox/MySearch\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\n\r\nconst PurchaseReturn = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    const currentDate_ymd = _cfunc.date_ymd_func();\r\n\r\n    const [pageMode] = useState(mode.defaultsave);\r\n    const [userPageAccessState, setUserAccState] = useState('');\r\n\r\n    const fileds = {\r\n        ReturnDate: currentDate_ymd,\r\n        Customer: \"\",\r\n        ItemName: \"\",\r\n        InvoiceNumber: \"\",\r\n        BatchCode: \"\",\r\n        Comment: \"\"\r\n    }\r\n\r\n    const [state, setState] = useState(initialFiledFunc(fileds))\r\n    const [TableArr, setTableArr] = useState([]);\r\n    const [returnMode, setReturnMode] = useState(0); //(1==ItemWise) OR (2==invoiceWise)\r\n    const [imageTable, setImageTable] = useState([]);\r\n\r\n    // for invoicer page heder dicount functionality useSate ************************************\r\n    const [discountValueAll, setDiscountValueAll] = useState(\"\");\r\n    const [discountTypeAll, setDiscountTypeAll] = useState({ value: 2, label: \" % \" });\r\n    const [discountDropOption] = useState([{ value: 1, label: \"Rs\" }, { value: 2, label: \"%\" }])\r\n    const [changeAllDiscount, setChangeAllDiscount] = useState(false)\r\n    const [forceReload, setForceReload] = useState(false)\r\n    // ****************************************************************************\r\n\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        postMsg,\r\n        ItemList,\r\n        ReturnReasonList,\r\n        InvoiceNo,\r\n        pageField,\r\n        userAccess,\r\n        supplier,\r\n        addButtonData,\r\n        saveBtnloading,\r\n        addBtnLoading,\r\n        invoiceNoDropDownLoading,\r\n    } = useSelector((state) => ({\r\n        addButtonData: state.SalesReturnReducer.addButtonData,\r\n        postMsg: state.SalesReturnReducer.postMsg,\r\n        supplier: state.CommonAPI_Reducer.vendorSupplierCustomer,\r\n        ItemList: state.PartyItemsReducer.partyItem,\r\n        ReturnReasonList: state.PartyMasterBulkUpdateReducer.SelectField,\r\n        InvoiceNo: state.SalesReturnReducer.InvoiceNo,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField,\r\n        saveBtnloading: state.SalesReturnReducer.saveBtnloading,\r\n        addBtnLoading: state.SalesReturnReducer.addBtnLoading,\r\n        invoiceNoDropDownLoading: state.SalesReturnReducer.invoiceNoDropDownLoading,\r\n\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(InvoiceNumberSuccess([]))\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(pageId.PURCHASE_RETURN))\r\n        dispatch(getpartyItemList(JSON.stringify(_cfunc.loginJsonBody())))\r\n        dispatch(GetVenderSupplierCustomer({ subPageMode: url.PURCHASE_RETURN, RouteID: \"\" }))\r\n        dispatch(BreadcrumbShowCountlabel(`${\"Total Amount\"} :${0}`))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (TableArr.length === 0) {\r\n            setReturnMode(0)\r\n        }\r\n    }, [TableArr]);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowModal = props.hasOwnProperty(mode.editValue)\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n    useEffect(() => {// userAccess useEffect\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (userAcc) {\r\n            setUserAccState(userAcc)\r\n            _cfunc.breadcrumbReturnFunc({ dispatch, userAcc });\r\n        };\r\n    }, [userAccess])\r\n\r\n    useEffect(() => {// Return Reason dropdown Values\r\n        const jsonBody = JSON.stringify({\r\n            Company: _cfunc.loginCompanyID(),\r\n            TypeID: 8\r\n        });\r\n        dispatch(postSelect_Field_for_dropdown(jsonBody));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    useEffect(() => {\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(saveSalesReturnMaster_Success({ Status: false }))\r\n            setTableArr([])\r\n            setState(() => resetFunction(fileds, state))// Clear form values  \r\n            dispatch(Breadcrumb_inputName(''))\r\n\r\n            if (pageMode === mode.dropdownAdd) {\r\n                customAlert({\r\n                    Type: 1,\r\n                    Message: postMsg.Message,\r\n                })\r\n            }\r\n            else {\r\n                let alterRepont = customAlert({\r\n                    Type: 1,\r\n                    Message: postMsg.Message,\r\n                })\r\n                if (alterRepont) {\r\n                    history.push({ pathname: url.PURCHASE_RETURN_LIST })\r\n                }\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(saveSalesReturnMaster_Success({ Status: false }))\r\n            customAlert({\r\n                Type: 4,\r\n                Message: JSON.stringify(postMsg.Message),\r\n            })\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n\r\n        if (addButtonData.StatusCode === 200 && addButtonData.Status === true) {\r\n            dispatch(SalesReturnAddBtn_Action_Succcess({ StatusCode: false }))\r\n            try {\r\n                const updateItemArr = [...TableArr];\r\n                let existingIds = updateItemArr.map(item => item.id);\r\n                let nextId = existingIds.length > 0 ? Math.max(...existingIds) + 1 : 1;\r\n\r\n                addButtonData.Data.forEach((i) => {\r\n                    const MRPOptions = i.ItemMRPDetails.map(i => ({ label: i.MRPValue, value: i.MRP, Rate: i.Rate }));\r\n                    const GSTOptions = i.ItemGSTDetails.map(i => ({ label: i.GSTPercentage, value: i.GST }));\r\n\r\n                    const highestMRP = i.ItemMRPDetails.reduce((prev, current) => {// Default highest GST when Return mode \"2==ItemWise\"\r\n                        return (prev.MRP > current.MRP) ? prev : current;\r\n                    }, '');\r\n\r\n                    const highestGST = i.ItemGSTDetails.reduce((prev, current) => {// Default  highest GST when Return mode \"2==ItemWise\"\r\n                        return (prev.GST > current.GST) ? prev : current;\r\n                    }, '');\r\n\r\n                    if (returnMode === 2) { //(returnMode === 2) ItemWise\r\n                        i.Rate = highestMRP.Rate || \"\";\r\n                        i.MRP = highestMRP.MRP || \"\";\r\n                        i.MRPValue = highestMRP.MRPValue || \"\";\r\n\r\n                        i.GST = highestGST.GST || \"\";\r\n                        i.GSTPercentage = highestGST.GSTPercentage || \"\";\r\n                    }\r\n\r\n                    let ItemTotalStock = i.StockDetails.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"BaseUnitQuantity\"]) || 0, 0);\r\n                    const InvoiceQuantity = i.Quantity\r\n\r\n                    const newItemRow = {\r\n                        ...i,\r\n                        Quantity: '',\r\n                        itemTotalAmount: 0,\r\n                        InvoiceQuantity,\r\n                        ItemTotalStock,\r\n                        id: nextId,\r\n                        MRPOptions,\r\n                        GSTOptions,\r\n                    }\r\n                    // const caculate = return_discountCalculate_Func(newItemRow)\r\n                    // newItemRow[\"roundedTotalAmount\"] = caculate.roundedTotalAmount;\r\n\r\n                    updateItemArr.push(newItemRow);\r\n                    nextId++;\r\n                });\r\n\r\n                // let sumOfGrandTotal = updateItemArr.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"itemTotalAmount\"]) || 0, 0);\r\n                // let count_label = `${\"Total Amount\"} :${Number(sumOfGrandTotal).toLocaleString()}`\r\n                // dispatch(BreadcrumbShowCountlabel(count_label));\r\n\r\n                setTableArr(updateItemArr);\r\n                setState((i) => {\r\n                    let a = { ...i }\r\n                    a.values.ItemName = \"\"\r\n                    a.hasValid.ItemName.valid = true;\r\n                    return a\r\n                })\r\n\r\n            } catch (error) { _cfunc.CommonConsole(error) }\r\n        }\r\n    }, [addButtonData])\r\n\r\n    const itemList = ItemList.map((index) => ({\r\n        value: index.Item,\r\n        label: index.ItemName,\r\n        itemCheck: index.selectCheck\r\n    }));\r\n\r\n    const ItemList_Options = itemList.filter((index) => {\r\n        return index.itemCheck === true\r\n    });\r\n\r\n    const ReturnReasonOptions = ReturnReasonList.map((index) => ({\r\n        value: index.id,\r\n        label: index.Name,\r\n    }));\r\n\r\n    const InvoiceNo_Options = InvoiceNo.map((index) => ({\r\n        value: index.Invoice,\r\n        label: index.FullInvoiceNumber,\r\n    }));\r\n\r\n    const supplierOptions = supplier.map((i) => ({\r\n        value: i.id,\r\n        label: i.Name,\r\n    }));\r\n\r\n    const pagesListColumns = [\r\n        {\r\n            text: \"Item Name\",\r\n            dataField: \"ItemName\",\r\n            hidden: false,\r\n            formatter: (cell, row) => {\r\n                return (\r\n                    <Label style={{ minWidth: \"15%\" }}>{row.ItemName}</Label>\r\n                )\r\n            }\r\n        },\r\n\r\n        {//***************Quantity********************************************************************* */\r\n            text: \"Quantity/Unit\",\r\n            dataField: \"\",\r\n            formatExtraData: { tableList: TableArr },\r\n            // classes: () => ('invoice-quantity-row1'),\r\n            formatter: (cellContent, index1, _key, { tableList = [] }) => (\r\n                <>\r\n                    <div className=\"div-1 mb-2\" >\r\n                        <CInput\r\n                            type=\"text\"\r\n                            cpattern={decimalRegx}\r\n                            disabled={pageMode === 'edit' ? true : false}\r\n                            id={`returnQty-${index1.id}-${_key}`}\r\n                            className=\"input\"\r\n                            style={{ textAlign: \"right\" }}\r\n                            key={index1.id}\r\n                            autoComplete=\"off\"\r\n                            defaultValue={index1.Quantity}\r\n                            onChange={(event) => {\r\n                                returnQtyOnChange(event, index1, _key);\r\n                                totalAmountCalcuationFunc(tableList);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"div-1 \">\r\n                        <div>\r\n                            <Input\r\n                                disabled\r\n                                defaultValue={index1.UnitName}\r\n                            ></Input>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"bottom-div\">\r\n                        <span>Order-Qty :</span>\r\n                        <samp>{index1.OrderQty}</samp>\r\n                        <samp>{index1.UnitName}</samp>\r\n                    </div> */}\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            text: \"Invoice Qty\",\r\n            hidden: (returnMode === 1) ? false : true,\r\n            align: () => \"right\",\r\n            formatter: (cell, row) => <Label>{row.InvoiceQuantity}</Label>,\r\n        },\r\n        {//***************StockDetails********************************************************************* */\r\n            text: \"Stock Details\",\r\n            dataField: \"StockDetails\",\r\n            formatExtraData: { tableList: TableArr },\r\n            formatter: (cellContent, index1, _key, { tableList }) => (\r\n                <div>\r\n                    <Table className=\"table table-responsive mb-1\">\r\n                        <Thead>\r\n                            <tr >\r\n                                <th style={{ zIndex: -1 }}>BatchCode</th>\r\n                                <th style={{ zIndex: -1 }}>\r\n                                    <div>\r\n                                        <samp>Stock Quantity</samp>\r\n                                    </div>\r\n                                </th >\r\n                                <th style={{ zIndex: -1 }}>\r\n                                    <div>\r\n                                        <samp>Quantity</samp>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ zIndex: -1 }}>Basic Rate</th>\r\n                                <th style={{ zIndex: -1 }}>MRP</th>\r\n                            </tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                            {cellContent.map((index2) => (\r\n                                <tr key={index1.id}>\r\n                                    <td>\r\n                                        <div style={{}}>{index2.BatchCode}</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div style={{ textAlign: \"right\" }}>\r\n                                            <samp id={`ActualQuantity-${index1.id}-${index2.id}`}>{index2.BaseUnitQuantity}</samp>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div style={{}}>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                autoComplete=\"off\"\r\n                                                disabled={pageMode === 'edit' ? true : false}\r\n                                                style={{ textAlign: \"right\" }}\r\n                                                id={`batchQty${index1.id}-${index2.id}-${_key}`}\r\n                                                defaultValue={index2.Qty}\r\n                                                onChange={(event) => {\r\n                                                    stockQtyOnChange(event, index1, index2, _key);\r\n                                                    totalAmountCalcuationFunc(tableList);\r\n                                                }}\r\n                                            ></Input>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div style={{ width: \"50px\" }}>\r\n                                            <span id={`stockItemRate-${index1.id}-${index2.id}`}>{_cfunc.amountCommaSeparateFunc(index2.Rate)}</span>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div style={{ width: \"50px\" }}>{index2.MRP}</div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </Tbody>\r\n                    </Table>\r\n                </div>\r\n            ),\r\n        },\r\n\r\n\r\n\r\n        {//***************Discount********************************************************************* */\r\n            text: \"Discount/unit\",\r\n            dataField: \"\",\r\n            formatExtraData: {\r\n                discountValueAll: discountValueAll,\r\n                discountTypeAll: discountTypeAll,\r\n                changeAllDiscount: changeAllDiscount,\r\n                forceReload: forceReload,\r\n                tableList: TableArr\r\n            },\r\n            classes: () => \"invoice-discount-row\",\r\n            headerFormatter: () => {\r\n                return (\r\n                    <div className=\"\">\r\n                        {TableArr.length <= 0 ?\r\n                            <div className=\"col col-3 mt-2\">\r\n                                <Label>Discount/unit</Label>\r\n                            </div>\r\n                            :\r\n                            <div className=\"row\">\r\n                                <div className=\" mt-n2 mb-n2\">\r\n                                    <Label>Discount/unit</Label>\r\n                                </div>\r\n                                <div className=\"col col-6\" >\r\n                                    <Select\r\n                                        type=\"text\"\r\n                                        defaultValue={discountTypeAll}\r\n                                        classNamePrefix=\"select2-selection\"\r\n                                        options={discountDropOption}\r\n                                        style={{ textAlign: \"right\" }}\r\n                                        onChange={(e) => {\r\n                                            setChangeAllDiscount(true);\r\n                                            setDiscountTypeAll(e);\r\n                                            setDiscountValueAll('');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col col-6\" >\r\n                                    <CInput\r\n                                        type=\"text\"\r\n                                        className=\"input\"\r\n                                        style={{ textAlign: \"right\" }}\r\n                                        cpattern={decimalRegx}\r\n                                        value={discountValueAll}\r\n                                        onChange={(e) => {\r\n                                            let e_val = Number(e.target.value);\r\n\r\n                                            // Check if discount type is \"percentage\"\r\n                                            if (discountTypeAll.value === 2) {// Discount type 2 represents \"percentage\"\r\n                                                // Limit the input to the range of 0 to 100\r\n                                                if (e_val > 100) {\r\n                                                    e.target.value = 100; // Set the input value to 100 if it exceeds 100\r\n                                                } else if (!(e_val >= 0 && e_val < 100)) {\r\n                                                    e.target.value = \"\"; // Clear the input value if it is less than 0\r\n                                                }\r\n                                            }\r\n\r\n                                            setChangeAllDiscount(true);\r\n                                            setDiscountValueAll(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                );\r\n            },\r\n            formatter: (cellContent, index1, _key, formatExtraData) => {\r\n                let { tableList, discountValueAll, discountTypeAll } = formatExtraData;\r\n                \r\n                if (formatExtraData.changeAllDiscount) {\r\n                    index1.Discount = discountValueAll;\r\n                    index1.DiscountType = discountTypeAll.value;\r\n                    innerStockCaculation(index1, _key);\r\n                    totalAmountCalcuationFunc(tableList);\r\n                }\r\n                if (!index1.DiscountType) { index1[\"DiscountType\"] = discountTypeAll.value }\r\n\r\n                const defaultDiscountTypelabel =\r\n                    index1.DiscountType === 1 ? discountDropOption[0] : discountDropOption[1];\r\n\r\n                return (\r\n                    <>\r\n                        <div className=\"mb-2\">\r\n                            <div className=\"parent\">\r\n                                <div className=\"child\">\r\n                                    <label className=\"label\">Type&nbsp;&nbsp;&nbsp;</label>\r\n                                </div>\r\n                                <div className=\"child\">\r\n                                    <Select\r\n                                        // id={`DicountType_${key}`}\r\n                                        classNamePrefix=\"select2-selection\"\r\n                                        // key={`DicountType_${key}-${index1.id}`}\r\n                                        value={defaultDiscountTypelabel}\r\n                                        options={discountDropOption}\r\n                                        onChange={(e) => {\r\n                                            setChangeAllDiscount(false);\r\n                                            setForceReload(!forceReload);\r\n                                            index1.DiscountType = e.value;\r\n                                            index1.Discount = '';\r\n                                            innerStockCaculation(index1, _key);\r\n                                            totalAmountCalcuationFunc(tableList);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"parent\">\r\n                                <div className=\"child\">\r\n                                    <label className=\"label\">Value&nbsp;</label>\r\n                                </div>\r\n                                <div className=\"child\">\r\n                                    <CInput\r\n                                        className=\"input\"\r\n                                        // id={`Dicount_${key}-${index1.id}`}\r\n                                        style={{ textAlign: \"right\" }}\r\n                                        type=\"text\"\r\n                                        value={index1.Discount}\r\n                                        cpattern={decimalRegx}\r\n                                        onChange={(e) => {\r\n\r\n                                            let e_val = Number(e.target.value);\r\n                                            // Check if discount type is \"percentage\"\r\n                                            if (index1.DiscountType === 2) { // Discount type 2 represents \"percentage\"\r\n                                                // Limit the input to the range of 0 to 100\r\n                                                if (e_val > 100) {\r\n                                                    e.target.value = 100; // Set the input value to 100 if it exceeds 100\r\n                                                } else if (!(e_val >= 0 && e_val < 100)) {\r\n                                                    e.target.value = ''; // Clear the input value if it is less than 0\r\n                                                }\r\n                                            }\r\n                                            index1.Discount = e.target.value;\r\n                                            setChangeAllDiscount(false);\r\n                                            setForceReload(!forceReload);\r\n                                            innerStockCaculation(index1);\r\n                                            totalAmountCalcuationFunc(tableList);\r\n                                        }}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bottom-div\">\r\n                            <div>Amount:</div>\r\n                            <div id={`itemTotalAmount-${index1.id}-${_key}`}>\r\n                                {_cfunc.amountCommaSeparateFunc(index1.itemTotalAmount)}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Return Reason\",\r\n            dataField: \"\",\r\n            classes: () => \"sales-return-row\",\r\n            formatter: (cellContent, row) => {\r\n                return (<>\r\n                    <div className=\"parent mb-1\">\r\n                        <div className=\"child\">\r\n                            <Select\r\n                                isSearchable={true}\r\n                                className=\"react-dropdown\"\r\n                                classNamePrefix=\"dropdown\"\r\n                                defaultValue={row.defaultReason}\r\n                                styles={{\r\n                                    menu: provided => ({ ...provided, zIndex: 2 })\r\n                                }}\r\n                                options={ReturnReasonOptions}\r\n                                onChange={event => {\r\n\r\n                                    row[\"defaultReason\"] = event\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"parent\">\r\n                        <div className=\"child\">\r\n                            <Input\r\n                                placeholder=\"Enter Comment\"\r\n                                defaultChecked={row.ItemComment}\r\n                                type=\"text\"\r\n                                onChange={(event) => { row.ItemComment = event.target.value }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                )\r\n            }\r\n        },\r\n\r\n        {\r\n            text: \"Image\",\r\n            dataField: \"\",\r\n            classes: () => \"sales-return-Image-row\",\r\n            formatter: (cellContent, row, key) => {\r\n                return (<span style={{ justifyContent: 'center' }}>\r\n                    <div>\r\n                        <div className=\"btn-group btn-group-example mb-3\" role=\"group\">\r\n                            <Input\r\n                                type=\"file\"\r\n                                className=\"form-control \"\r\n                                name=\"image\"\r\n                                id=\"file\"\r\n                                accept=\".jpg, .jpeg, .png ,.pdf\"\r\n                                onChange={(event) => { imageSelectHandler(event, row) }}\r\n                            />\r\n                            <button name=\"image\"\r\n                                accept=\".jpg, .jpeg, .png ,.pdf\"\r\n                                onClick={() => { imageShowHandler(row) }}\r\n                                id=\"ImageId\" type=\"button\" className=\"btn btn-primary \">Show</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </span>)\r\n            }\r\n        },\r\n        {\r\n            text: \"Action \",\r\n            dataField: \"\",\r\n            hidden: returnMode === 1 ? true : false,\r\n            formatExtraData: { TableArr, addBtnLoading },\r\n            formatter: (cellContent, row, key, { TableArr, addBtnLoading }) => (\r\n                <>\r\n                    <div style={{ justifyContent: 'center' }} >\r\n                        <Col>\r\n                            <FormGroup className=\" col col-sm-4 \">\r\n                                <Button\r\n                                    id={\"deleteid\"}\r\n                                    type=\"button\"\r\n                                    disabled={addBtnLoading}\r\n                                    className=\"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\"\r\n                                    data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title='Delete MRP'\r\n                                    onClick={(e) => { deleteButtonAction(row, TableArr) }}>\r\n                                    <i className=\"mdi mdi-delete font-size-18\"></i>\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </div>\r\n                </>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const totalAmountCalcuationFunc = (tableList = []) => {\r\n\r\n        let sumOfGrandTotal = tableList.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"itemTotalAmount\"]) || 0, 0);\r\n        let count_label = `${\"Total Amount\"} :${Number(sumOfGrandTotal).toLocaleString()}`\r\n        dispatch(BreadcrumbShowCountlabel(count_label))\r\n    }\r\n\r\n    const deleteButtonAction = (row, TablelistArray = []) => {\r\n        const newArr = TablelistArray.filter((index) => !(index.id === row.id))\r\n        let sumOfGrandTotal = newArr.reduce((accumulator, currentObject) => accumulator + Number(currentObject[\"itemTotalAmount\"]) || 0, 0);\r\n        let count_label = `${\"Total Amount\"} :${Number(sumOfGrandTotal).toLocaleString()}`\r\n        dispatch(BreadcrumbShowCountlabel(count_label));\r\n        setTableArr(newArr)\r\n    }\r\n\r\n    const ReturnDate_Onchange = (e, date) => {\r\n        setState((i) => {\r\n            const a = { ...i }\r\n            a.values.ReturnDate = date;\r\n            a.hasValid.ReturnDate.valid = true\r\n            return a\r\n        })\r\n    }\r\n\r\n    const AddPartyHandler = async (byType) => {\r\n\r\n        const invalidMsg1 = []\r\n        if ((values.ItemName === '') && (byType === 'ItemWise')) {\r\n            invalidMsg1.push(`Select Item Name`)\r\n        }\r\n        if ((values.InvoiceNumber === '') && (values.Customer === '') && (byType === 'InvoiceWise')) {\r\n            invalidMsg1.push(`Select ${fieldLabel.Customer}.`)\r\n        }\r\n        else if ((values.InvoiceNumber === '') && (byType === 'InvoiceWise')) {\r\n            invalidMsg1.push(`Select Invoice No.`)\r\n        }\r\n\r\n        if (invalidMsg1.length > 0) {\r\n            customAlert({\r\n                Type: 4,\r\n                Message: JSON.stringify(invalidMsg1)\r\n            })\r\n            return\r\n        }\r\n\r\n        const jsonBody = JSON.stringify({\r\n            \"ItemID\": values.ItemName.value,\r\n            \"BatchCode\": values.BatchCode,\r\n            \"Customer\": _cfunc.loginPartyID()// Customer Swipe when Po return\r\n        })\r\n\r\n        const InvoiceId = values.InvoiceNumber ? values.InvoiceNumber.value : ''\r\n        const nrwReturnMode = (byType === 'ItemWise') ? 2 : 1 //(returnMode === 2) ItemWise\r\n        dispatch(SalesReturnAddBtn_Action({ jsonBody, InvoiceId, returnMode: nrwReturnMode }))\r\n        setReturnMode(nrwReturnMode)\r\n    }\r\n\r\n    const RetailerHandler = (event) => {\r\n        setState((i) => {\r\n            let a = { ...i }\r\n            a.values.ItemName = \"\"\r\n            a.values.InvoiceNumber = \"\"\r\n            a.values.Customer = event\r\n\r\n            a.hasValid.Customer.valid = true;\r\n            a.hasValid.ItemName.valid = true;\r\n            a.hasValid.InvoiceNumber.valid = true;\r\n\r\n            return a\r\n        })\r\n        setTableArr([])\r\n\r\n        const jsonBody = JSON.stringify({\r\n            PartyID: _cfunc.loginPartyID(),\r\n            CustomerID: event.value\r\n        });\r\n\r\n        dispatch(InvoiceNumber(jsonBody));\r\n    }\r\n\r\n    const RetailerOnCancelClickHandler = () => {\r\n        setState((i) => {\r\n            let a = { ...i }\r\n            a.values.ItemName = \"\"\r\n            a.values.InvoiceNumber = \"\"\r\n            a.values.Customer = ''\r\n\r\n            a.hasValid.Customer.valid = true;\r\n            a.hasValid.ItemName.valid = true;\r\n            a.hasValid.InvoiceNumber.valid = true;\r\n            return a\r\n        })\r\n        setTableArr([])\r\n    }\r\n\r\n    const itemNameOnChangeHandler = (hasSelect, evn) => {\r\n        if (values.Customer === \"\") {\r\n            customAlert({ Type: 3, Message: `Please select ${fieldLabel.Customer}` })\r\n            return\r\n        }\r\n        onChangeSelect({ hasSelect, evn, state, setState, })\r\n        setReturnMode(2)\r\n    }\r\n\r\n    const imageSelectHandler = async (event, row) => { // image onchange handler\r\n\r\n        const file = event.target.files[0]\r\n        const base64 = await convertBase64(file);\r\n        let ImageUpload = base64\r\n        row.Image = ImageUpload\r\n        setImageTable(ImageUpload)\r\n    }\r\n\r\n    const convertBase64 = (file) => {// image convert in string\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader()\r\n            fileReader.readAsDataURL(file);\r\n\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result)\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error)\r\n            }\r\n        })\r\n    }\r\n\r\n    const imageShowHandler = (row) => {\r\n\r\n        var x = document.getElementById(\"add-img\");\r\n        if (x.style.display === \"none\") {\r\n            x.src = imageTable\r\n            if (imageTable != \"\") {\r\n                x.style.display = \"block\";\r\n            }\r\n\r\n        } else {\r\n            x.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    const SaveHandler = async (event) => {\r\n\r\n        event.preventDefault();\r\n        try {\r\n\r\n            const invalidMessages = [];\r\n\r\n            const filterData = TableArr.filter((index) => {\r\n                if (index.Quantity > 0) {\r\n                    let msgString = ' Select';\r\n\r\n                    if (index.StockInValid) {\r\n                        invalidMessages.push(`${index.ItemName}:${index.StockInvalidMsg}`);\r\n                        return\r\n                    };\r\n\r\n                    if (!index.defaultReason) { msgString = msgString + ', ' + \"Return Reason\" };\r\n\r\n                    if (!index.defaultReason) {\r\n                        invalidMessages.push({ [index.ItemName]: msgString });\r\n                    }\r\n                    return true\r\n                }\r\n            });\r\n\r\n            if (invalidMessages.length > 0) {\r\n                customAlert({\r\n                    Type: 4,\r\n                    Message: invalidMessages,\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (filterData.length === 0) {\r\n                customAlert({\r\n                    Type: 4,\r\n                    Message: \"Please Enter One Item Quantity\",\r\n                });\r\n                return;\r\n            }\r\n\r\n            // IsComparGstIn= compare Supplier and Customer are Same State by GSTIn Number\r\n            const IsComparGstIn = { GSTIn_1: values.Customer.GSTIN, GSTIn_2: _cfunc.loginUserGSTIN() }\r\n\r\n            const { processedItems, grandTotal } = filterData.reduce(({ processedItems, grandTotal }, index) => {\r\n\r\n                index.StockDetails.forEach((ele) => {\r\n                    if (ele.Qty > 0) {\r\n                        //**calculate Amount, Discount Amount based on Discount type */\r\n                        const calculate = return_discountCalculate_Func(ele, index, IsComparGstIn);\r\n\r\n                        grandTotal += Number(calculate.roundedTotalAmount)\r\n                        processedItems.push({\r\n                            \"Item\": index.Item,\r\n                            \"ItemName\": index.ItemName,\r\n                            \"Unit\": index.Unit,\r\n                            \"BatchCode\": ele.BatchCode,\r\n                            \"Quantity\": Number(ele.Qty).toFixed(3),\r\n                            \"BatchDate\": ele.BatchDate,\r\n                            \"BatchID\": ele.id,\r\n                            \"BaseUnitQuantity\": Number(ele.BaseUnitQuantity).toFixed(3),\r\n                            \"LiveBatch\": ele.LiveBatche,\r\n                            \"MRP\": ele.LiveBatcheMRPID,\r\n                            \"MRPValue\": ele.MRP, //changes\r\n                            \"Rate\": Number(ele.Rate).toFixed(2),\r\n\r\n                            \"GST\": ele.LiveBatcheGSTID,\r\n                            \"CGST\": Number(calculate.CGST_Amount).toFixed(2),\r\n                            \"SGST\": Number(calculate.SGST_Amount).toFixed(2),\r\n                            \"IGST\": Number(calculate.IGST_Amount).toFixed(2),\r\n\r\n                            \"GSTPercentage\": calculate.GST_Percentage,\r\n                            \"CGSTPercentage\": calculate.CGST_Percentage,\r\n                            \"SGSTPercentage\": calculate.SGST_Percentage,\r\n                            \"IGSTPercentage\": calculate.IGST_Percentage,\r\n\r\n                            \"BasicAmount\": Number(calculate.discountBaseAmt).toFixed(2),\r\n                            \"GSTAmount\": Number(calculate.roundedGstAmount).toFixed(2),\r\n                            \"Amount\": Number(calculate.roundedTotalAmount).toFixed(2),\r\n\r\n                            \"TaxType\": 'GST',\r\n                            \"DiscountType\": index.DiscountType,\r\n                            \"Discount\": Number(index.Discount) || 0,\r\n                            \"DiscountAmount\": Number(calculate.disCountAmt).toFixed(2),\r\n\r\n                            \"ItemReason\": index.defaultReason ? index.defaultReason.value : \"\",\r\n                            \"Comment\": index.ItemComment,\r\n                            \"ApprovedQuantity\": \"\",\r\n                            \"PurchaseReturn\": \"\",\r\n                            \"SubReturn\": \"\",\r\n                            \"ReturnItemImages\": [],\r\n                        });\r\n                    }\r\n                });\r\n                return { processedItems, grandTotal };\r\n            }, { processedItems: [], grandTotal: 0 });\r\n\r\n\r\n            const jsonBody = JSON.stringify({\r\n                ReturnDate: values.ReturnDate,\r\n                ReturnReason: '',\r\n                BatchCode: values.BatchCode,\r\n                Customer: _cfunc.loginPartyID(),// Customer Swipe when Po return\r\n                Party: values.Customer.value,// Party Swipe when Po return\r\n                Comment: values.Comment,\r\n                GrandTotal: Number(grandTotal).toFixed(2),\r\n                RoundOffAmount: (grandTotal - Math.trunc(grandTotal)).toFixed(2),\r\n                CreatedBy: _cfunc.loginUserID(),\r\n                UpdatedBy: _cfunc.loginUserID(),\r\n                Mode: 2, //if puchase return then mode= 2 AND |Sale return then Mode =1\r\n                ReturnItems: processedItems,\r\n                PurchaseReturnReferences: [],\r\n            });\r\n\r\n            dispatch(saveSalesReturnMaster({ jsonBody }));\r\n\r\n        } catch (e) { _cfunc.CommonConsole(e) }\r\n    };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags>{_cfunc.metaTagLabel(userPageAccessState)}</MetaTags>\r\n\r\n                <div className=\"page-content\" style={{ marginBottom: \"5cm\" }}>\r\n\r\n                    <form noValidate>\r\n                        <div className=\"px-2 c_card_filter header text-black mb-1\" >\r\n                            {/* < img id='add-img' className='abc1' src={''} style={{ top: \"400px\" }} /> */}\r\n\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\"row mt-2\" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.ReturnDate}  </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <C_DatePicker\r\n                                                name='ReturnDate'\r\n                                                value={values.ReturnDate}\r\n                                                onChange={ReturnDate_Onchange}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-2 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.Customer} </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <C_Select\r\n                                                id=\"Customer \"\r\n                                                name=\"Customer\"\r\n                                                value={values.Customer}\r\n                                                isSearchable={true}\r\n                                                isDisabled={((TableArr.length > 0) || addBtnLoading) ? true : false}\r\n                                                options={supplierOptions}\r\n                                                styles={{\r\n                                                    menu: provided => ({ ...provided, zIndex: 2 })\r\n                                                }}\r\n                                                onChange={RetailerHandler}\r\n                                                onCancelClick={RetailerOnCancelClickHandler}\r\n                                            />\r\n                                            {isError.Customer.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.Customer}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-1 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.ItemName} </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <C_Select\r\n                                                id=\"ItemName \"\r\n                                                name=\"ItemName\"\r\n                                                value={values.ItemName}\r\n                                                isDisabled={(returnMode === 1) ? true : false}\r\n                                                isSearchable={true}\r\n                                                className=\"react-dropdown\"\r\n                                                classNamePrefix=\"dropdown\"\r\n                                                styles={{\r\n                                                    menu: provided => ({ ...provided, zIndex: 2 })\r\n                                                }}\r\n                                                options={ItemList_Options}\r\n                                                onChange={itemNameOnChangeHandler}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-1 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.Comment} </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Input\r\n                                                name=\"Comment\"\r\n                                                id=\"Comment\"\r\n                                                value={values.Comment}\r\n                                                type=\"text\"\r\n                                                className={isError.Comment.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                placeholder=\"Enter Comment\"\r\n                                                autoComplete='off'\r\n                                                onChange={(event) => {\r\n                                                    onChangeText({ event, state, setState })\r\n                                                }}\r\n                                            />\r\n                                            {isError.Comment.length > 0 && (\r\n                                                <span className=\"invalid-feedback\">{isError.Comment}</span>\r\n                                            )}\r\n                                        </Col>\r\n\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-1 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.BatchCode}</Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Input\r\n                                                name=\"BatchCode\"\r\n                                                value={values.BatchCode}\r\n                                                placeholder=\"Enter BatchCode\"\r\n                                                type='text'\r\n                                                onChange={(event) => {\r\n                                                    onChangeText({ event, state, setState })\r\n                                                }}\r\n                                            />\r\n                                            {isError.BatchCode.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.BatchCode}</small></span>\r\n                                            )}\r\n\r\n                                        </Col>\r\n                                        <Col sm=\"1\" className=\"mx-6 mt-1\">\r\n                                            {\r\n                                                (!(returnMode === 1)) &&///(returnMode === 1) InvoiceWise\r\n                                                <C_Button\r\n                                                    type=\"button\"\r\n                                                    loading={addBtnLoading}\r\n                                                    className=\"btn btn-outline-primary border-1 font-size-12 text-center\"\r\n                                                    onClick={() => AddPartyHandler(\"ItemWise\")}>\r\n                                                    Add\r\n                                                </C_Button>\r\n                                            }\r\n\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-1 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>  {fieldLabel.InvoiceNumber}</Label>\r\n                                        <Col sm=\"7\">\r\n                                            <C_Select\r\n                                                id=\"InvoiceNumber \"\r\n                                                name=\"InvoiceNumber\"\r\n                                                value={values.InvoiceNumber}\r\n                                                //(returnMode === 2) ItemWise\r\n                                                isDisabled={((returnMode === 2) || invoiceNoDropDownLoading || (TableArr.length > 0)) ? true : false}\r\n                                                isSearchable={true}\r\n                                                isLoading={invoiceNoDropDownLoading}\r\n                                                styles={{\r\n                                                    menu: provided => ({ ...provided, zIndex: 2 })\r\n                                                }}\r\n                                                options={InvoiceNo_Options}\r\n                                                onChange={(hasSelect, evn) => {\r\n                                                    onChangeSelect({ hasSelect, evn, state, setState, })\r\n                                                    setReturnMode(1)\r\n                                                }}\r\n                                            />\r\n\r\n                                        </Col>\r\n                                        <Col sm=\"1\" className=\"mx-6 mt-1 \">\r\n                                            {((TableArr.length > 0) || (!(values.ItemName === \"\"))) ?\r\n                                                <Change_Button\r\n                                                    forceDisabled={addBtnLoading}\r\n                                                    onClick={(e) => {\r\n                                                        setTableArr([])\r\n                                                        setState((i) => {\r\n                                                            let a = { ...i }\r\n                                                            a.values.ItemName = \"\"\r\n                                                            a.values.InvoiceNumber = \"\"\r\n                                                            return a\r\n                                                        })\r\n                                                    }} />\r\n                                                :\r\n                                                (!(returnMode === 2)) &&//(returnMode === 2) ItemWise\r\n                                                <C_Button\r\n                                                    type=\"button\"\r\n                                                    loading={addBtnLoading}\r\n                                                    className=\"btn btn-outline-primary border-1 font-size-12 text-center\"\r\n                                                    onClick={() => AddPartyHandler(\"InvoiceWise\")}>\r\n                                                    Select\r\n                                                </C_Button>\r\n                                            }\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Row>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <ToolkitProvider\r\n                                keyField={\"id\"}\r\n                                data={TableArr}\r\n                                columns={pagesListColumns}\r\n                                search\r\n                            >\r\n                                {(toolkitProps) => (\r\n                                    <React.Fragment>\r\n                                        <Row>\r\n                                            <Col xl=\"12\">\r\n                                                <div className=\"table-responsive table\" style={{ minHeight: \"60vh\" }}>\r\n                                                    <BootstrapTable\r\n                                                        keyField={\"id\"}\r\n                                                        key={`table-key-${returnMode}`}\r\n                                                        id=\"table_Arrow\"\r\n                                                        classes={\"table  table-bordered \"}\r\n                                                        noDataIndication={\r\n                                                            <div className=\"text-danger text-center \">\r\n                                                                Items Not available\r\n                                                            </div>\r\n                                                        }\r\n                                                        {...toolkitProps.baseProps}\r\n                                                        onDataSizeChange={(e) => {\r\n                                                            _cfunc.tableInputArrowUpDounFunc(\"#table_Arrow\")\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </Col>\r\n                                            {mySearchProps(toolkitProps.searchProps,)}\r\n                                        </Row>\r\n\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </ToolkitProvider>\r\n                        </div>\r\n\r\n                        {\r\n                            TableArr.length > 0 ?\r\n                                <FormGroup>\r\n                                    <Col sm={2} style={{ marginLeft: \"-40px\" }} className={\"row save1\"}>\r\n                                        <SaveButton\r\n                                            pageMode={pageMode}\r\n                                            forceDisabled={addBtnLoading}\r\n                                            loading={saveBtnloading}\r\n                                            onClick={SaveHandler}\r\n                                            userAcc={userPageAccessState}\r\n                                            module={\"SalesReturn\"}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup >\r\n                                : null\r\n                        }\r\n\r\n                    </form >\r\n                </div >\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default PurchaseReturn\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}