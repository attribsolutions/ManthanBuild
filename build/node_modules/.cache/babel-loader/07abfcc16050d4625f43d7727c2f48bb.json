{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { deleteSalesManID_Success, editSalesManIDSuccess, saveSalesManMasterSuccess, getSalesManlistSuccess, updateSalesManIDSuccess } from \"./actions\";\nimport { SalesMan_Delete_API, SalesMan_Edit_API, SalesMan_Get_API, SalesMan_Post_API, SalesMan_Update_API } from \"../../../helpers/backend_helper\";\nimport { DELETE_SALESMAN_ID, EDIT_SALESMAN_ID, GET_SALESMAN_LIST, SAVE_SALES_MAN_MASTER, UPDATE_SALESMAN_ID } from \"./actionTypes\";\nimport { CommonConsole, loginJsonBody } from \"../../../components/Common/CommonFunction\";\n\nfunction* save_SalesMan_Master_GenFun(_ref) {\n  let {\n    config = {}\n  } = _ref;\n\n  try {\n    const response = yield call(SalesMan_Post_API, config);\n    yield put(saveSalesManMasterSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\nfunction* Post_SalesMan_List_GenratorFunction(_ref2) {\n  let {\n    jsonBody\n  } = _ref2;\n  const filters = jsonBody === undefined || null ? loginJsonBody() : jsonBody; // required only PartyID and CompanyID\n\n  try {\n    const response = yield call(SalesMan_Get_API, filters);\n    yield put(getSalesManlistSuccess(response.Data));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c = Post_SalesMan_List_GenratorFunction;\n\nfunction* Edit_SalesMan_ID_GenratorFunction(_ref3) {\n  let {\n    config = {}\n  } = _ref3;\n  const {\n    btnmode\n  } = config;\n\n  try {\n    const response = yield call(SalesMan_Edit_API, config);\n    response.pageMode = btnmode;\n    yield put(editSalesManIDSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c2 = Edit_SalesMan_ID_GenratorFunction;\n\nfunction* Update_SalesMan_ID_GenratorFunction(_ref4) {\n  let {\n    config = {}\n  } = _ref4;\n\n  try {\n    const response = yield call(SalesMan_Update_API, config);\n    yield put(updateSalesManIDSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c3 = Update_SalesMan_ID_GenratorFunction;\n\nfunction* Delete_SalesMan_ID_GenratorFunction(_ref5) {\n  let {\n    config = {}\n  } = _ref5;\n\n  try {\n    const response = yield call(SalesMan_Delete_API, config);\n    yield put(deleteSalesManID_Success(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c4 = Delete_SalesMan_ID_GenratorFunction;\n\nfunction* SalesManSaga() {\n  yield takeEvery(SAVE_SALES_MAN_MASTER, save_SalesMan_Master_GenFun);\n  yield takeEvery(GET_SALESMAN_LIST, Post_SalesMan_List_GenratorFunction);\n  yield takeEvery(DELETE_SALESMAN_ID, Delete_SalesMan_ID_GenratorFunction);\n  yield takeEvery(EDIT_SALESMAN_ID, Edit_SalesMan_ID_GenratorFunction);\n  yield takeEvery(UPDATE_SALESMAN_ID, Update_SalesMan_ID_GenratorFunction);\n}\n\n_c5 = SalesManSaga;\nexport default SalesManSaga;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Post_SalesMan_List_GenratorFunction\");\n$RefreshReg$(_c2, \"Edit_SalesMan_ID_GenratorFunction\");\n$RefreshReg$(_c3, \"Update_SalesMan_ID_GenratorFunction\");\n$RefreshReg$(_c4, \"Delete_SalesMan_ID_GenratorFunction\");\n$RefreshReg$(_c5, \"SalesManSaga\");","map":{"version":3,"names":["call","put","takeEvery","deleteSalesManID_Success","editSalesManIDSuccess","saveSalesManMasterSuccess","getSalesManlistSuccess","updateSalesManIDSuccess","SalesMan_Delete_API","SalesMan_Edit_API","SalesMan_Get_API","SalesMan_Post_API","SalesMan_Update_API","DELETE_SALESMAN_ID","EDIT_SALESMAN_ID","GET_SALESMAN_LIST","SAVE_SALES_MAN_MASTER","UPDATE_SALESMAN_ID","CommonConsole","loginJsonBody","save_SalesMan_Master_GenFun","config","response","error","Post_SalesMan_List_GenratorFunction","jsonBody","filters","undefined","Data","Edit_SalesMan_ID_GenratorFunction","btnmode","pageMode","Update_SalesMan_ID_GenratorFunction","Delete_SalesMan_ID_GenratorFunction","SalesManSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Administrator/SalesManRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n    deleteSalesManID_Success,\r\n    editSalesManIDSuccess,\r\n    saveSalesManMasterSuccess,\r\n    getSalesManlistSuccess,\r\n    updateSalesManIDSuccess\r\n} from \"./actions\";\r\nimport {\r\n    SalesMan_Delete_API,\r\n    SalesMan_Edit_API,\r\n    SalesMan_Get_API,\r\n    SalesMan_Post_API,\r\n    SalesMan_Update_API\r\n} from \"../../../helpers/backend_helper\";\r\nimport {\r\n    DELETE_SALESMAN_ID,\r\n    EDIT_SALESMAN_ID,\r\n    GET_SALESMAN_LIST,\r\n    SAVE_SALES_MAN_MASTER,\r\n    UPDATE_SALESMAN_ID\r\n} from \"./actionTypes\";\r\nimport { CommonConsole, loginJsonBody } from \"../../../components/Common/CommonFunction\";\r\n\r\nfunction* save_SalesMan_Master_GenFun({ config = {} }) {\r\n    try {\r\n        const response = yield call(SalesMan_Post_API, config);\r\n        yield put(saveSalesManMasterSuccess(response));\r\n    } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Post_SalesMan_List_GenratorFunction({jsonBody}) {\r\n    const filters = (jsonBody === undefined || null ? loginJsonBody() : jsonBody);// required only PartyID and CompanyID\r\n    try {\r\n        const response = yield call(SalesMan_Get_API, filters);\r\n        yield put(getSalesManlistSuccess(response.Data));\r\n    } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Edit_SalesMan_ID_GenratorFunction({ config = {} }) {\r\n    const { btnmode } = config;\r\n    try {\r\n        const response = yield call(SalesMan_Edit_API, config);\r\n        response.pageMode = btnmode\r\n        yield put(editSalesManIDSuccess(response));\r\n    } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Update_SalesMan_ID_GenratorFunction({ config = {} }) {\r\n    try {\r\n        const response = yield call(SalesMan_Update_API, config);\r\n        yield put(updateSalesManIDSuccess(response))\r\n    } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Delete_SalesMan_ID_GenratorFunction({ config = {} }) {\r\n    try {\r\n        const response = yield call(SalesMan_Delete_API, config);\r\n        yield put(deleteSalesManID_Success(response))\r\n    } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* SalesManSaga() {\r\n    yield takeEvery(SAVE_SALES_MAN_MASTER, save_SalesMan_Master_GenFun)\r\n    yield takeEvery(GET_SALESMAN_LIST, Post_SalesMan_List_GenratorFunction)\r\n    yield takeEvery(DELETE_SALESMAN_ID, Delete_SalesMan_ID_GenratorFunction)\r\n    yield takeEvery(EDIT_SALESMAN_ID, Edit_SalesMan_ID_GenratorFunction)\r\n    yield takeEvery(UPDATE_SALESMAN_ID, Update_SalesMan_ID_GenratorFunction)\r\n}\r\n\r\nexport default SalesManSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}