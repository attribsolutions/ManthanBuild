{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { LedgerApiErrorAction, SapLedger_Go_Button_API_Success, getExcel_Button_API_Success } from \"./action\";\nimport { GetExcelButton, Get_Product_Margin_Report, PartyLedger_API } from \"../../../helpers/backend_helper\";\nimport { GET_EXCELBUTTON_API, GO_BUTTON_API_SAP_LEDGER } from \"./actionType\";\nimport { CommonConsole } from \"../../../components/Common/CommonFunction\";\nimport * as XLSX from 'xlsx';\n\nfunction* goBtn_Get_API_GenFun(_ref) {\n  let {\n    filters\n  } = _ref;\n\n  try {\n    const response = yield call(PartyLedger_API, filters);\n    let TotalDebitAmount = 0;\n    let TotalCreditAmount = 0;\n    const newresponse = yield response.Data.data.map((i, key) => {\n      i.id = key + 1;\n\n      if (i.DebitCredit === \"S\") {\n        i.Debit_Amount = i.Amount;\n        TotalDebitAmount = Number(TotalDebitAmount) + Number(i.Debit_Amount);\n      }\n\n      if (i.DebitCredit === \"H\") {\n        i.Credit_Amount = i.Amount;\n        TotalCreditAmount = Number(TotalCreditAmount) + Number(i.Credit_Amount);\n      }\n\n      return i;\n    });\n    newresponse.push({\n      id: response.length - 1,\n      PostingDate: \"Total\",\n      Credit_Amount: TotalCreditAmount.toFixed(2),\n      Debit_Amount: TotalDebitAmount.toFixed(2)\n    });\n    response.data = newresponse;\n    yield put(SapLedger_Go_Button_API_Success(response));\n  } catch (error) {\n    yield put(LedgerApiErrorAction());\n  }\n}\n\nfunction* GetExcelButton_saga(_ref2) {\n  let {\n    IsSCM_ID,\n    PartyID\n  } = _ref2;\n\n  try {\n    const response = yield call(Get_Product_Margin_Report, IsSCM_ID, PartyID);\n\n    if (response.StatusCode === 200) {\n      let newArray = [];\n      response.Data.forEach(i => {\n        let obj = i;\n        i.ItemMargins.forEach(ele => {\n          const keys = Object.keys(ele);\n          keys.forEach(key => {\n            obj[key] = ele[key];\n          });\n        });\n        delete obj.ItemMargins;\n        newArray.push(obj);\n      });\n      const worksheet = XLSX.utils.json_to_sheet(newArray);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"ProductMargin1\");\n      XLSX.writeFile(workbook, \"Product Margin Report.xlsx\");\n    }\n\n    yield put(getExcel_Button_API_Success([]));\n  } catch (error) {\n    yield put(getExcel_Button_API_Success([]));\n    LedgerApiErrorAction();\n  }\n}\n\n_c = GetExcelButton_saga;\n\nfunction* SapLedgerSaga() {\n  yield takeLatest(GO_BUTTON_API_SAP_LEDGER, goBtn_Get_API_GenFun);\n  yield takeLatest(GET_EXCELBUTTON_API, GetExcelButton_saga);\n}\n\n_c2 = SapLedgerSaga;\nexport default SapLedgerSaga;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetExcelButton_saga\");\n$RefreshReg$(_c2, \"SapLedgerSaga\");","map":{"version":3,"names":["call","put","takeLatest","LedgerApiErrorAction","SapLedger_Go_Button_API_Success","getExcel_Button_API_Success","GetExcelButton","Get_Product_Margin_Report","PartyLedger_API","GET_EXCELBUTTON_API","GO_BUTTON_API_SAP_LEDGER","CommonConsole","XLSX","goBtn_Get_API_GenFun","filters","response","TotalDebitAmount","TotalCreditAmount","newresponse","Data","data","map","i","key","id","DebitCredit","Debit_Amount","Amount","Number","Credit_Amount","push","length","PostingDate","toFixed","error","GetExcelButton_saga","IsSCM_ID","PartyID","StatusCode","newArray","forEach","obj","ItemMargins","ele","keys","Object","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","SapLedgerSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Report/SapLedger Redux/saga.js"],"sourcesContent":["\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LedgerApiErrorAction,\r\n  SapLedger_Go_Button_API_Success, getExcel_Button_API_Success\r\n} from \"./action\";\r\nimport {\r\n  GetExcelButton, Get_Product_Margin_Report, PartyLedger_API,\r\n} from \"../../../helpers/backend_helper\";\r\nimport {\r\n  GET_EXCELBUTTON_API, GO_BUTTON_API_SAP_LEDGER,\r\n} from \"./actionType\";\r\nimport { CommonConsole } from \"../../../components/Common/CommonFunction\";\r\nimport * as XLSX from 'xlsx';\r\n\r\nfunction* goBtn_Get_API_GenFun({ filters }) {\r\n\r\n  try {\r\n\r\n    const response = yield call(PartyLedger_API, filters);\r\n    let TotalDebitAmount = 0\r\n    let TotalCreditAmount = 0\r\n\r\n    const newresponse = yield response.Data.data.map((i, key) => {\r\n\r\n      i.id = key + 1\r\n      if (i.DebitCredit === \"S\") {\r\n        i.Debit_Amount = i.Amount\r\n        TotalDebitAmount = Number(TotalDebitAmount) + Number(i.Debit_Amount)\r\n      }\r\n      if (i.DebitCredit === \"H\") {\r\n        i.Credit_Amount = i.Amount\r\n        TotalCreditAmount = Number(TotalCreditAmount) + Number(i.Credit_Amount)\r\n      }\r\n\r\n      return i\r\n\r\n    })\r\n    newresponse.push({\r\n      id: response.length - 1,\r\n      PostingDate: \"Total\",\r\n      Credit_Amount: TotalCreditAmount.toFixed(2),\r\n      Debit_Amount: TotalDebitAmount.toFixed(2)\r\n    })\r\n    response.data = newresponse\r\n\r\n    yield put(SapLedger_Go_Button_API_Success(response));\r\n\r\n  } catch (error) { yield put(LedgerApiErrorAction()) }\r\n}\r\n\r\nfunction* GetExcelButton_saga({ IsSCM_ID, PartyID }) {\r\n\r\n  try {\r\n\r\n    const response = yield call(Get_Product_Margin_Report, IsSCM_ID, PartyID);\r\n\r\n    if (response.StatusCode === 200) {\r\n\r\n      let newArray = []\r\n\r\n      response.Data.forEach(i => {\r\n        let obj = i\r\n        i.ItemMargins.forEach(ele => {\r\n          const keys = Object.keys(ele);\r\n          keys.forEach(key => {\r\n            obj[key] = ele[key]\r\n          })\r\n        })\r\n        delete obj.ItemMargins\r\n        newArray.push(obj)\r\n      })\r\n\r\n      const worksheet = XLSX.utils.json_to_sheet(newArray);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"ProductMargin1\");\r\n      XLSX.writeFile(workbook, \"Product Margin Report.xlsx\");\r\n    }\r\n    yield put(getExcel_Button_API_Success([]));\r\n  } catch (error) {\r\n    yield put(getExcel_Button_API_Success([]));\r\n    LedgerApiErrorAction()\r\n  }\r\n}\r\n\r\n\r\nfunction* SapLedgerSaga() {\r\n  yield takeLatest(GO_BUTTON_API_SAP_LEDGER, goBtn_Get_API_GenFun)\r\n  yield takeLatest(GET_EXCELBUTTON_API, GetExcelButton_saga)\r\n}\r\n\r\nexport default SapLedgerSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}