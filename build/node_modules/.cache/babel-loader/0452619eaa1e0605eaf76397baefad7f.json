{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { loginJsonBody } from \"../../../components/Common/CommonFunction\";\nimport { delete_CompanyID, edit_CompanyID, fetch_CompanyList, getCompanyGroup, postSubmit_Company, updateCompany_ID } from \"../../../helpers/backend_helper\";\nimport { deleteCompanyIDSuccess, editCompanyIDSuccess, getCompanyListSuccess, getCompanyGroupSuccess, saveCompany_Success, updateCompanyIDSuccess, companyApiErrorAction } from \"./actions\";\nimport { DELETE_COMPANY_ID, EDIT_COMPANY_ID, FETCH_COMPANY_LIST, GET_COMPANYGROUP, POST_COMPANY_SUBMIT, UPDATE_COMPANY_ID } from \"./actionType\";\n\nfunction* Save_Method_ForCompany_GenFun(_ref) {\n  let {\n    config\n  } = _ref;\n\n  // Save API\n  try {\n    const response = yield call(postSubmit_Company, config);\n    yield put(saveCompany_Success(response));\n  } catch (error) {\n    yield put(companyApiErrorAction());\n  }\n}\n\n_c = Save_Method_ForCompany_GenFun;\n\nfunction* Get_Company_List_GenFunc() {\n  // getList API\n  try {\n    const response = yield call(fetch_CompanyList, JSON.stringify(loginJsonBody()));\n    yield put(getCompanyListSuccess(response.Data));\n  } catch (error) {\n    yield put(companyApiErrorAction());\n  }\n}\n\n_c2 = Get_Company_List_GenFunc;\n\nfunction* deleteCompany_ID(_ref2) {\n  let {\n    config\n  } = _ref2;\n\n  // delete API\n  try {\n    const response = yield call(delete_CompanyID, config);\n    yield put(deleteCompanyIDSuccess(response));\n  } catch (error) {\n    yield put(companyApiErrorAction());\n  }\n}\n\nfunction* editCompany_ID(_ref3) {\n  let {\n    config\n  } = _ref3;\n  //Edit API\n  const {\n    btnmode\n  } = config;\n\n  try {\n    const response = yield call(edit_CompanyID, config);\n    response.pageMode = btnmode;\n    yield put(editCompanyIDSuccess(response));\n  } catch (error) {\n    yield put(companyApiErrorAction());\n  }\n}\n\nfunction* update_Company(_ref4) {\n  let {\n    config\n  } = _ref4;\n\n  //Update API\n  try {\n    const response = yield call(updateCompany_ID, config);\n    yield put(updateCompanyIDSuccess(response));\n  } catch (error) {\n    yield put(companyApiErrorAction());\n  }\n} /// CompanyGroupDropdown\n\n\nfunction* CompanyGroup() {\n  try {\n    const response = yield call(getCompanyGroup);\n    yield put(getCompanyGroupSuccess(response.Data));\n  } catch (error) {\n    yield put(companyApiErrorAction());\n  }\n}\n\n_c3 = CompanyGroup;\n\nfunction* CompanySaga() {\n  yield takeEvery(FETCH_COMPANY_LIST, Get_Company_List_GenFunc);\n  yield takeEvery(EDIT_COMPANY_ID, editCompany_ID);\n  yield takeEvery(POST_COMPANY_SUBMIT, Save_Method_ForCompany_GenFun);\n  yield takeEvery(DELETE_COMPANY_ID, deleteCompany_ID);\n  yield takeEvery(UPDATE_COMPANY_ID, update_Company);\n  yield takeEvery(GET_COMPANYGROUP, CompanyGroup);\n}\n\n_c4 = CompanySaga;\nexport default CompanySaga;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Save_Method_ForCompany_GenFun\");\n$RefreshReg$(_c2, \"Get_Company_List_GenFunc\");\n$RefreshReg$(_c3, \"CompanyGroup\");\n$RefreshReg$(_c4, \"CompanySaga\");","map":{"version":3,"names":["call","put","takeEvery","loginJsonBody","delete_CompanyID","edit_CompanyID","fetch_CompanyList","getCompanyGroup","postSubmit_Company","updateCompany_ID","deleteCompanyIDSuccess","editCompanyIDSuccess","getCompanyListSuccess","getCompanyGroupSuccess","saveCompany_Success","updateCompanyIDSuccess","companyApiErrorAction","DELETE_COMPANY_ID","EDIT_COMPANY_ID","FETCH_COMPANY_LIST","GET_COMPANYGROUP","POST_COMPANY_SUBMIT","UPDATE_COMPANY_ID","Save_Method_ForCompany_GenFun","config","response","error","Get_Company_List_GenFunc","JSON","stringify","Data","deleteCompany_ID","editCompany_ID","btnmode","pageMode","update_Company","CompanyGroup","CompanySaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Administrator/CompanyRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { loginJsonBody } from \"../../../components/Common/CommonFunction\";\r\nimport { delete_CompanyID, edit_CompanyID, fetch_CompanyList, getCompanyGroup, postSubmit_Company, updateCompany_ID } from \"../../../helpers/backend_helper\";\r\nimport {\r\n  deleteCompanyIDSuccess,\r\n  editCompanyIDSuccess,\r\n  getCompanyListSuccess,\r\n  getCompanyGroupSuccess,\r\n  saveCompany_Success,\r\n  updateCompanyIDSuccess,\r\n  companyApiErrorAction\r\n} from \"./actions\";\r\nimport {\r\n  DELETE_COMPANY_ID,\r\n  EDIT_COMPANY_ID,\r\n  FETCH_COMPANY_LIST,\r\n  GET_COMPANYGROUP,\r\n  POST_COMPANY_SUBMIT,\r\n  UPDATE_COMPANY_ID,\r\n} from \"./actionType\";\r\n\r\nfunction* Save_Method_ForCompany_GenFun({ config }) {         // Save API\r\n  try {\r\n    const response = yield call(postSubmit_Company, config);\r\n    yield put(saveCompany_Success(response));\r\n  } catch (error) { yield put(companyApiErrorAction()) }\r\n}\r\n\r\nfunction* Get_Company_List_GenFunc() {\r\n  // getList API\r\n  try {\r\n    const response = yield call(fetch_CompanyList, JSON.stringify(loginJsonBody()));\r\n    yield put(getCompanyListSuccess(response.Data));\r\n  } catch (error) { yield put(companyApiErrorAction()) }\r\n}\r\n\r\nfunction* deleteCompany_ID({ config }) {                      // delete API\r\n  try {\r\n    const response = yield call(delete_CompanyID, config);\r\n    yield put(deleteCompanyIDSuccess(response))\r\n  } catch (error) { yield put(companyApiErrorAction()) }\r\n}\r\n\r\nfunction* editCompany_ID({ config }) {               //Edit API\r\n  const { btnmode } = config;\r\n  try {\r\n    const response = yield call(edit_CompanyID, config);\r\n    response.pageMode = btnmode\r\n    yield put(editCompanyIDSuccess(response));\r\n  } catch (error) { yield put(companyApiErrorAction()) }\r\n}\r\n\r\nfunction* update_Company({ config }) {             //Update API\r\n  try {\r\n    const response = yield call(updateCompany_ID, config);\r\n    yield put(updateCompanyIDSuccess(response))\r\n  } catch (error) { yield put(companyApiErrorAction()) }\r\n}\r\n\r\n/// CompanyGroupDropdown\r\nfunction* CompanyGroup() {\r\n  try {\r\n    const response = yield call(getCompanyGroup);\r\n    yield put(getCompanyGroupSuccess(response.Data));\r\n  } catch (error) { yield put(companyApiErrorAction()) }\r\n}\r\n\r\nfunction* CompanySaga() {\r\n  yield takeEvery(FETCH_COMPANY_LIST, Get_Company_List_GenFunc);\r\n  yield takeEvery(EDIT_COMPANY_ID, editCompany_ID);\r\n  yield takeEvery(POST_COMPANY_SUBMIT, Save_Method_ForCompany_GenFun);\r\n  yield takeEvery(DELETE_COMPANY_ID, deleteCompany_ID);\r\n  yield takeEvery(UPDATE_COMPANY_ID, update_Company);\r\n  yield takeEvery(GET_COMPANYGROUP, CompanyGroup);\r\n\r\n}\r\n\r\nexport default CompanySaga;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}