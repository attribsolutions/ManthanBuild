{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\components\\\\Common\\\\CommonMasterListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Modal, Row } from \"reactstrap\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useDispatch } from \"react-redux\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { useHistory } from \"react-router-dom\";\nimport { BreadcrumbShowCountlabel, CommonBreadcrumbDetails } from \"../../store/actions\";\nimport { breadcrumbReturnFunc } from \"./CommonFunction\";\nimport { defaultSearch, mySearchProps } from \"./SearchBox/MySearch\";\nimport { CustomAlert } from \"../../CustomAlert/ConfirmDialog\";\nimport { listPageActionsButtonFunc } from \"./ListActionsButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet sortType = \"asc\";\nlet searchCount = 0;\nlet searchProps = {\n  onClear: function onClear() {},\n  onSearch: function onSearch() {},\n  searchText: \"\"\n};\nexport const countlabelFunc = (toolkitProps, paginationProps, dispatch, ButtonMsgLable) => {\n  let iscall = 0;\n\n  if (paginationProps.dataSize) {\n    iscall = paginationProps.dataSize;\n  }\n\n  if (!(iscall === searchCount)) {\n    dispatch(BreadcrumbShowCountlabel(`${ButtonMsgLable} Count :${iscall}`));\n    searchCount = paginationProps.dataSize;\n  }\n\n  searchProps = toolkitProps.searchProps;\n};\n\nconst CommonListPage = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userAccState, setUserAccState] = useState('');\n  const [modal_edit, setmodal_edit] = useState(false);\n  const {\n    tableList,\n    editData,\n    updateMsg,\n    deleteMsg,\n    userAccess,\n    postMsg,\n    pageField\n  } = props.reducers;\n  const {\n    getList,\n    editId,\n    deleteId,\n    postSucc,\n    updateSucc,\n    deleteSucc\n  } = props.action;\n  const {\n    getListbodyFunc = () => {},\n    MasterModal,\n    ButtonMsgLable,\n    deleteName,\n    masterPath\n  } = props;\n  const {\n    PageFieldMaster = []\n  } = { ...pageField\n  };\n  useEffect(() => {\n    const locationPath = history.location.pathname;\n    let userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserAccState(userAcc);\n      breadcrumbReturnFunc({\n        dispatch,\n        userAcc,\n        newBtnPath: masterPath\n      });\n    }\n  }, [userAccess]);\n  useEffect(() => {\n    let downList = [];\n    let listObj = {};\n    tableList.forEach(index1 => {\n      PageFieldMaster.forEach(index2 => {\n        if (index2.ShowInDownload) {\n          listObj[`$defSelect${index2.ControlID}`] = index2.ShownloadDefaultSelect;\n          listObj[index2.ControlID] = index1[index2.ControlID];\n        }\n      });\n      downList.push(listObj);\n      listObj = {};\n    });\n    dispatch(CommonBreadcrumbDetails({\n      downBtnData: downList\n    }));\n  }, [tableList]); // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\n\n  useEffect(async () => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200) {\n      dispatch(updateSucc({\n        Status: false\n      }));\n      dispatch(getList(getListbodyFunc()));\n      CustomAlert({\n        Type: 1,\n        Message: JSON.stringify(updateMsg.Message)\n      });\n      tog_center();\n    } else if (updateMsg.Status === true) {\n      dispatch(updateSucc({\n        Status: false\n      }));\n      CustomAlert({\n        Type: 3,\n        Message: JSON.stringify(updateMsg.Message)\n      });\n    }\n  }, [updateMsg]);\n  useEffect(async () => {\n    if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\n      dispatch(deleteSucc({\n        Status: false\n      }));\n      const promise = await CustomAlert({\n        Type: 1,\n        Message: deleteMsg.Message\n      });\n      dispatch(getList(getListbodyFunc()));\n    } else if (deleteMsg.Status === true) {\n      dispatch(deleteSucc({\n        Status: false\n      }));\n      CustomAlert({\n        Type: 3,\n        Message: JSON.stringify(deleteMsg.Message)\n      });\n    }\n  }, [deleteMsg]);\n  useEffect(async () => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(postSucc({\n        Status: false\n      }));\n      const promise = await CustomAlert({\n        Type: 1,\n        Message: postMsg.Message\n      });\n      dispatch(getList(getListbodyFunc()));\n      tog_center();\n    } else if (postMsg.Status === true) {\n      dispatch(postSucc({\n        Status: false\n      }));\n      CustomAlert({\n        Type: 4,\n        Message: JSON.stringify(postMsg.Message)\n      });\n    }\n  }, [postMsg]); // Edit Modal Show When Edit Data is true\n\n  useEffect(() => {\n    if (editData.Status === true) {\n      if (pageField.IsEditPopuporComponent) {\n        history.push({\n          pathname: masterPath,\n          editValue: editData.Data,\n          pageMode: editData.pageMode\n        });\n      } else {\n        setmodal_edit(true);\n      }\n    }\n  }, [editData]);\n\n  function tog_center() {\n    if (modal_edit) {\n      breadcrumbReturnFunc({\n        dispatch,\n        userAcc: userAccState,\n        newBtnPath: masterPath\n      });\n    }\n\n    setmodal_edit(false);\n  }\n\n  PageFieldMaster.sort(function (a, b) {\n    //sort function is  sort list page coloumn by asending order by listpage sequense\n    return a.ListPageSeq - b.ListPageSeq;\n  });\n  let sortLabel = \"\";\n  const columns = [];\n  PageFieldMaster.forEach((i, k) => {\n    if (i.ShowInListPage) {\n      columns.push({\n        text: i.FieldLabel,\n        dataField: i.ControlID,\n        sort: true\n      });\n\n      if (i.DefaultSort === 1) {\n        sortLabel = i.ControlID;\n        sortType = \"asc\";\n      } else if (i.DefaultSort === 2) {\n        sortLabel = i.ControlID;\n        sortType = \"desc\";\n      }\n    }\n\n    if (PageFieldMaster.length - 1 === k) {\n      columns.push(listPageActionsButtonFunc({\n        dispatchHook: dispatch,\n        ButtonMsgLable: ButtonMsgLable,\n        deleteName: deleteName,\n        userAccState: userAccState,\n        editActionFun: editId,\n        deleteActionFun: deleteId\n      }));\n    }\n  });\n  const defaultSorted = [{\n    dataField: sortLabel,\n    // if dataField is not match to any column you defined, it will be ignored.\n    order: sortType // desc or asc\n\n  }];\n  debugger;\n  const pageOptions = {\n    sizePerPage: 15,\n    // totalSize: tableList.length,\n    custom: true\n  };\n\n  if (!(userAccState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userAccState.PageHeading, \"| FoodERP-React FrontEnd\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(PaginationProvider, {\n          pagination: paginationFactory(pageOptions),\n          children: _ref => {\n            let {\n              paginationProps,\n              paginationTableProps\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"id\",\n              data: tableList,\n              columns: columns,\n              search: defaultSearch(pageField.id),\n              children: (toolkitProps, a) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"table-responsive table \",\n                      children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                        keyField: \"id\",\n                        responsive: true,\n                        bordered: false,\n                        defaultSorted: defaultSorted,\n                        striped: true,\n                        classes: \"table  table-bordered table-hover\",\n                        noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-danger text-center \",\n                          children: \"Data Not available\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 282,\n                          columnNumber: 47\n                        }, this),\n                        ...toolkitProps.baseProps,\n                        ...paginationTableProps\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this), countlabelFunc(toolkitProps, paginationProps, dispatch, ButtonMsgLable), mySearchProps(toolkitProps.searchProps, pageField.id)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-md-center mt-30\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pagination pagination-rounded justify-content-end mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal_edit,\n          toggle: () => {\n            tog_center();\n          },\n          size: \"xl\",\n          children: /*#__PURE__*/_jsxDEV(MasterModal, {\n            editValue: editData.Data,\n            masterPath: masterPath,\n            pageMode: editData.pageMode,\n            pageHeading: userAccess.pageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CommonListPage, \"HhlWxu9OwOJ9BH874RcbcC2SzOU=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = CommonListPage;\nexport default CommonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonListPage\");","map":{"version":3,"names":["React","useEffect","useState","Col","Modal","Row","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","BootstrapTable","useDispatch","MetaTags","useHistory","BreadcrumbShowCountlabel","CommonBreadcrumbDetails","breadcrumbReturnFunc","defaultSearch","mySearchProps","CustomAlert","listPageActionsButtonFunc","sortType","searchCount","searchProps","onClear","onSearch","searchText","countlabelFunc","toolkitProps","paginationProps","dispatch","ButtonMsgLable","iscall","dataSize","CommonListPage","props","history","userAccState","setUserAccState","modal_edit","setmodal_edit","tableList","editData","updateMsg","deleteMsg","userAccess","postMsg","pageField","reducers","getList","editId","deleteId","postSucc","updateSucc","deleteSucc","action","getListbodyFunc","MasterModal","deleteName","masterPath","PageFieldMaster","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","newBtnPath","downList","listObj","forEach","index1","index2","ShowInDownload","ControlID","ShownloadDefaultSelect","push","downBtnData","Status","StatusCode","Type","Message","JSON","stringify","tog_center","promise","IsEditPopuporComponent","editValue","Data","pageMode","sort","a","b","ListPageSeq","sortLabel","columns","i","k","ShowInListPage","text","FieldLabel","dataField","DefaultSort","length","dispatchHook","editActionFun","deleteActionFun","defaultSorted","order","pageOptions","sizePerPage","custom","PageHeading","paginationTableProps","id","baseProps","pageHeading"],"sources":["D:/Rohit/Git projects/Manthan/src/components/Common/CommonMasterListPage.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Col, Modal, Row } from \"reactstrap\";\r\nimport paginationFactory, {\r\n  PaginationListStandalone,\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BreadcrumbShowCountlabel, CommonBreadcrumbDetails } from \"../../store/actions\";\r\nimport { breadcrumbReturnFunc, }\r\n  from \"./CommonFunction\";\r\nimport { defaultSearch, mySearchProps } from \"./SearchBox/MySearch\";\r\nimport { CustomAlert } from \"../../CustomAlert/ConfirmDialog\";\r\nimport { listPageActionsButtonFunc } from \"./ListActionsButtons\";\r\n\r\n\r\nlet sortType = \"asc\"\r\nlet searchCount = 0\r\n\r\nlet searchProps = {\r\n  onClear: function onClear() { },\r\n  onSearch: function onSearch() { },\r\n  searchText: \"\"\r\n}\r\n\r\nexport const countlabelFunc = (toolkitProps, paginationProps, dispatch, ButtonMsgLable) => {\r\n\r\n  let iscall = 0\r\n  if (paginationProps.dataSize) {\r\n    iscall = paginationProps.dataSize\r\n  }\r\n\r\n  if (!(iscall === searchCount)) {\r\n    dispatch(BreadcrumbShowCountlabel(`${ButtonMsgLable} Count :${iscall}`))\r\n    searchCount = paginationProps.dataSize\r\n  }\r\n  searchProps = toolkitProps.searchProps\r\n}\r\n\r\nconst CommonListPage = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [userAccState, setUserAccState] = useState('');\r\n  const [modal_edit, setmodal_edit] = useState(false);\r\n\r\n\r\n  const {\r\n    tableList,\r\n    editData,\r\n    updateMsg,\r\n    deleteMsg,\r\n    userAccess,\r\n    postMsg,\r\n    pageField\r\n\r\n  } = props.reducers;\r\n\r\n  const {\r\n    getList,\r\n    editId,\r\n    deleteId,\r\n    postSucc,\r\n    updateSucc,\r\n    deleteSucc\r\n\r\n  } = props.action\r\n\r\n  const {\r\n    getListbodyFunc = () => { },\r\n    MasterModal,\r\n    ButtonMsgLable,\r\n    deleteName,\r\n    masterPath,\r\n\r\n  } = props;\r\n\r\n  const { PageFieldMaster = [] } = { ...pageField };\r\n\r\n  useEffect(() => {\r\n    const locationPath = history.location.pathname\r\n    let userAcc = userAccess.find((inx) => {\r\n      return (`/${inx.ActualPagePath}` === locationPath)\r\n    })\r\n    if (!(userAcc === undefined)) {\r\n      setUserAccState(userAcc);\r\n      breadcrumbReturnFunc({ dispatch, userAcc, newBtnPath: masterPath });\r\n    }\r\n  }, [userAccess]);\r\n\r\n\r\n  useEffect(() => {\r\n    let downList = [];\r\n    let listObj = {};\r\n\r\n    tableList.forEach((index1) => {\r\n      PageFieldMaster.forEach((index2) => {\r\n        if (index2.ShowInDownload) {\r\n          listObj[`$defSelect${index2.ControlID}`] = index2.ShownloadDefaultSelect\r\n          listObj[index2.ControlID] = index1[index2.ControlID]\r\n        }\r\n      })\r\n      downList.push(listObj)\r\n      listObj = {}\r\n    })\r\n    dispatch(CommonBreadcrumbDetails({ downBtnData: downList }))\r\n\r\n  }, [tableList])\r\n\r\n\r\n  // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\r\n  useEffect(async () => {\r\n\r\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200) {\r\n      dispatch(updateSucc({ Status: false }));\r\n      dispatch(getList(getListbodyFunc()));\r\n      CustomAlert({\r\n        Type: 1,\r\n        Message: JSON.stringify(updateMsg.Message),\r\n      })\r\n      tog_center();\r\n    } else if (updateMsg.Status === true) {\r\n      dispatch(updateSucc({ Status: false }));\r\n      CustomAlert({\r\n        Type: 3,\r\n        Message: JSON.stringify(updateMsg.Message),\r\n      })\r\n\r\n    }\r\n  }, [updateMsg]);\r\n\r\n\r\n  useEffect(async () => {\r\n    if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\r\n      dispatch(deleteSucc({ Status: false }));\r\n\r\n      const promise = await CustomAlert({\r\n        Type: 1,\r\n        Message: deleteMsg.Message,\r\n      })\r\n      dispatch(getList(getListbodyFunc()));\r\n    } else if (deleteMsg.Status === true) {\r\n      dispatch(deleteSucc({ Status: false }));\r\n      CustomAlert({\r\n        Type: 3,\r\n        Message: JSON.stringify(deleteMsg.Message),\r\n      })\r\n    }\r\n  }, [deleteMsg]);\r\n\r\n\r\n  useEffect(async () => {\r\n\r\n    if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n      dispatch(postSucc({ Status: false }))\r\n      const promise = await CustomAlert({\r\n        Type: 1,\r\n        Message: postMsg.Message\r\n      })\r\n      dispatch(getList(getListbodyFunc()));\r\n      tog_center();\r\n\r\n    }\r\n\r\n    else if ((postMsg.Status === true)) {\r\n      dispatch(postSucc({ Status: false }))\r\n      CustomAlert({\r\n        Type: 4,\r\n        Message: JSON.stringify(postMsg.Message),\r\n      })\r\n    }\r\n\r\n\r\n  }, [postMsg])\r\n\r\n  // Edit Modal Show When Edit Data is true\r\n  useEffect(() => {\r\n\r\n    if (editData.Status === true) {\r\n      if (pageField.IsEditPopuporComponent) {\r\n        history.push({\r\n          pathname: masterPath,\r\n          editValue: editData.Data,\r\n          pageMode: editData.pageMode,\r\n\r\n        })\r\n      }\r\n      else {\r\n        setmodal_edit(true)\r\n      }\r\n    }\r\n  }, [editData]);\r\n\r\n  function tog_center() {\r\n    if (modal_edit) {\r\n      breadcrumbReturnFunc({ dispatch, userAcc: userAccState, newBtnPath: masterPath });\r\n    }\r\n    setmodal_edit(false)\r\n  }\r\n\r\n  PageFieldMaster.sort(function (a, b) {  //sort function is  sort list page coloumn by asending order by listpage sequense\r\n    return a.ListPageSeq - b.ListPageSeq\r\n  });\r\n\r\n  let sortLabel = \"\"\r\n  const columns = []\r\n\r\n  PageFieldMaster.forEach((i, k) => {\r\n    if (i.ShowInListPage) {\r\n      columns.push({\r\n        text: i.FieldLabel,\r\n        dataField: i.ControlID,\r\n        sort: true,\r\n      })\r\n\r\n      if (i.DefaultSort === 1) {\r\n        sortLabel = i.ControlID\r\n        sortType = \"asc\"\r\n      } else if (i.DefaultSort === 2) {\r\n        sortLabel = i.ControlID;\r\n        sortType = \"desc\"\r\n      }\r\n    }\r\n    if (PageFieldMaster.length - 1 === k) {\r\n      columns.push(listPageActionsButtonFunc({\r\n        dispatchHook: dispatch,\r\n        ButtonMsgLable: ButtonMsgLable,\r\n        deleteName: deleteName,\r\n        userAccState: userAccState,\r\n        editActionFun: editId,\r\n        deleteActionFun: deleteId\r\n      })\r\n      )\r\n    }\r\n  })\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: sortLabel, // if dataField is not match to any column you defined, it will be ignored.\r\n      order: sortType, // desc or asc\r\n    },\r\n  ];\r\n  debugger\r\n  const pageOptions = {\r\n    sizePerPage: 15,\r\n    // totalSize: tableList.length,\r\n    custom: true,\r\n  };\r\n\r\n  if (!(userAccState === '')) {\r\n    return (\r\n      <React.Fragment>\r\n        <MetaTags>\r\n          <title>{userAccState.PageHeading}| FoodERP-React FrontEnd</title>\r\n        </MetaTags>\r\n        <div className=\"page-content\">\r\n          <PaginationProvider pagination={paginationFactory(pageOptions)}>\r\n            {({ paginationProps, paginationTableProps }) => (\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={tableList}\r\n                columns={columns}\r\n                search={defaultSearch(pageField.id)}\r\n              >\r\n                {(toolkitProps, a) => (\r\n                  <React.Fragment>\r\n                    <Row>\r\n                      <Col xl=\"12\">\r\n                        <div className=\"table-responsive table \" >\r\n                          <BootstrapTable\r\n                            keyField={\"id\"}\r\n                            responsive\r\n                            bordered={false}\r\n                            defaultSorted={defaultSorted}\r\n                            striped={true}\r\n                            classes={\"table  table-bordered table-hover\"}\r\n                            noDataIndication={<div className=\"text-danger text-center \">Data Not available</div>}\r\n                            {...toolkitProps.baseProps}\r\n                            {...paginationTableProps}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      {countlabelFunc(toolkitProps, paginationProps, dispatch, ButtonMsgLable)}\r\n                      {mySearchProps(toolkitProps.searchProps, pageField.id)}\r\n                    </Row>\r\n                    <Row className=\"align-items-md-center mt-30\">\r\n                      <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </Col>\r\n                    </Row>\r\n                  </React.Fragment>\r\n                )}\r\n              </ToolkitProvider>\r\n            )}\r\n          </PaginationProvider>\r\n          <Modal isOpen={modal_edit} toggle={() => { tog_center() }} size=\"xl\">\r\n            <MasterModal editValue={editData.Data} masterPath={masterPath} pageMode={editData.pageMode} pageHeading={userAccess.pageHeading} />\r\n          </Modal>\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <React.Fragment></React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommonListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}