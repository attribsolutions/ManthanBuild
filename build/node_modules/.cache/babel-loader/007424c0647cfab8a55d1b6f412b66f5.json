{"ast":null,"code":"import React,{useEffect}from'react';import'./Tree.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PriceDropOptions=function PriceDropOptions(props){useEffect(function(){window.addEventListener('mouseup',handleClosePriceDropOptions);return function(){// cleanup this component\nwindow.removeEventListener('mouseup',handleClosePriceDropOptions);};},[]);function handleClosePriceDropOptions(event){try{var pol=document.getElementById('price-drop');if(event.target!=pol&&event.target.parentNode!=pol){pol.style.display='none';}}catch(e){}};var ChildNode=function ChildNode(node){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"classmt\",children:/*#__PURE__*/_jsx(\"span\",{id:\"price-option\",className:\" text-black  form-control\",onClick:function onClick(e){props.setPriceSelect(node);// onchange(e);\n},children:node.label})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:ParentNode(node.children)})})]});};var ParentNode=function ParentNode(tree1){return/*#__PURE__*/_jsx(\"ul\",{className:\"list-group\",children:tree1.map(function(tree){return ChildNode(tree);})});};return/*#__PURE__*/_jsx(\"div\",{id:\"price-drop\",className:\"price-drop-options\",children:/*#__PURE__*/_jsx(\"div\",{className:\"price-drop-body\",children:/*#__PURE__*/_jsx(\"ul\",{style:{paddingLeft:'0px'},children:ParentNode(props.data)})})});};export default PriceDropOptions;// Declare a new state variable, which we'll call \"menu\"\n// export default function TreeInput({ data = [] }) {\n//     const [menu, setMenu] = useState(false);\n//     const [dropOpen, setDropOpen] = useState(false);\n//     const [currentPrice, setCurrentPrice] = useState({ Name: '' });\n//     const dropOpen_ONClickHandler = price => {\n//         setCurrentPrice(price)\n//         setDropOpen(true)\n//     }\n//     const delete_PriceList = price => {\n//     }\n//     function sub_Price_Add_Handler() {\n//         var price = document.getElementById(\"txtsubprice\")\n//         if (price.value === \"\") {\n//             alert(\"please enter value\")\n//         } else {\n//         }\n//     }\n//     const toggle = () => {\n//         setMenu('');\n//     }\n//     function fun1(data1) {\n//         return (\n//             <div>\n//                 {\n//                     data1.map(tree => fun2(tree))\n//                 }\n//             </div>\n//         )\n//     }\n//     function fun2(data2) {\n//         //\n//         return (\n//             // <li >\n//             <div style={{ paddingLeft: \"20px\" }} className={\"\"} >\n//                 <div className='row justify-content-center mt-n4 '>\n//                     <div className=' col-10'>\n//                         <Input type=\"text\" defaultValue={data2.Name} ></Input>\n//                     </div>\n//                     <div className=' col-1 al-end'> <input type=\"checkBox\" ></input></div>\n//                     <div className=' col-1 '>\n//                         <i className=\"mdi mdi-pencil font-size-12\"\n//                             onClick={e => setMenu(data2.id)}\n//                         ></i>\n//                         <Dropdown isOpen={menu === data2.id} toggle={toggle} className=\"d-inline-block\">\n//                             <DropdownToggle className=\"btn header-item \" tag=\"button\">\n//                             </DropdownToggle>\n//                             <DropdownMenu className=\"language-switch dropdown-menu-end\">\n//                                 <DropdownItem\n//                                     key={data2.id}\n//                                     onClick={(e) => { dropOpen_ONClickHandler(data2) }}\n//                                 // // className={`notify-item ${selectedLang === key ? \"active\" : \"none\"\n//                                 //     }`}\n//                                 >\n//                                     <span className=\"align-middle text-black\"\n//                                     >\n//                                         {\"Add Sub-Rate\"}\n//                                     </span>\n//                                 </DropdownItem>\n//                                 <DropdownItem\n//                                     key={data2.id}\n//                                     onClick={() => delete_PriceList(data2.id)}\n//                                 // // className={`notify-item ${selectedLang === key ? \"active\" : \"none\"\n//                                 //     }`}\n//                                 >\n//                                     <span className=\"align-middle text-danger\">\n//                                         {\"Delete\"}\n//                                     </span>\n//                                 </DropdownItem>\n//                             </DropdownMenu>\n//                         </Dropdown>\n//                     </div>\n//                     {data2.childern ? fun1(data2.childern) : null}\n//                 </div>\n//             </div>\n//         )\n//     }\n//     return (\n//         <div className={\"mt-3\"}>\n//             <Modal\n//                 isOpen={dropOpen}\n//                 toggle={() => { setDropOpen(!dropOpen) }}\n//                 size=\"sm\"\n//                 centered={true}\n//                 backdrop={'static'}\n//             >\n//                 <div className=\"modal-header\">\n//                     <h5 className=\"modal-title mt-0\">Add sub-Price </h5>\n//                     <button\n//                         type=\"button\"\n//                         onClick={() => {\n//                             setDropOpen(!dropOpen)\n//                         }}\n//                         className=\"close\"\n//                         data-dismiss=\"modal\"\n//                         aria-label=\"Close\"\n//                     >\n//                         <span aria-hidden=\"true\">&times;</span>\n//                     </button>\n//                 </div>\n//                 <div className=\"modal-body\">\n//                     <Row className=\"justify-content-md-left\">\n//                         <span >{currentPrice.Name}</span>\n//                         <Label htmlFor=\"horizontal-firstname-input\" className=\"col-4 col-form-label\" >IsDivision </Label>\n//                         <Col style={{ marginTop: '9px' }} >\n//                             <Input type=\"text\" id='txtsubprice' />\n//                         </Col>\n//                     </Row>\n//                 </div>\n//                 <div className=\"modal-footer\">\n//                     <button type=\"button\" className=\"btn btn-light\" onClick={() => {\n//                         setDropOpen(!dropOpen)\n//                     }}>Close</button>\n//                     <button type=\"button\" className=\"btn btn-primary\" onClick={() => { sub_Price_Add_Handler() }} >Add</button>\n//                 </div>\n//             </Modal>\n//             {fun1(data)}\n//         </div>\n//     )\n// }","map":{"version":3,"names":["React","useEffect","PriceDropOptions","props","window","addEventListener","handleClosePriceDropOptions","removeEventListener","event","pol","document","getElementById","target","parentNode","style","display","e","ChildNode","node","setPriceSelect","label","ParentNode","children","tree1","map","tree","paddingLeft","data"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/PartyMaster/MasterAdd/FirstTab/PriceDropOptions.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport './Tree.scss'\r\n\r\nconst PriceDropOptions = (props) => {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mouseup', handleClosePriceDropOptions);\r\n        return () => { // cleanup this component\r\n            window.removeEventListener('mouseup', handleClosePriceDropOptions);\r\n        };\r\n    }, []);\r\n\r\n    function handleClosePriceDropOptions(event) {\r\n        try {\r\n            var pol = document.getElementById('price-drop');\r\n            if (event.target != pol && event.target.parentNode != pol) {\r\n                pol.style.display = 'none';\r\n            }\r\n        } catch (e) { }\r\n    };\r\n\r\n    const ChildNode = (node) => (\r\n        <li >\r\n            <div className=\"classmt\">\r\n                <span id=\"price-option\" className=\" text-black  form-control\"\r\n                    onClick={(e) => {\r\n                        props.setPriceSelect(node);\r\n                        // onchange(e);\r\n                    }}>{node.label}</span>\r\n            </div>\r\n            <div >\r\n                <ul >\r\n                    {ParentNode(node.children)}\r\n                </ul>\r\n            </div>\r\n        </li>\r\n    );\r\n\r\n    const ParentNode = (tree1) => (\r\n        <ul className='list-group'>\r\n            {tree1.map((tree) => (\r\n                ChildNode(tree)\r\n            ))}\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <div id=\"price-drop\" className='price-drop-options' >\r\n            <div className='price-drop-body'>\r\n                <ul style={{ paddingLeft: '0px' }}>\r\n                    {ParentNode(props.data)}</ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PriceDropOptions;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Declare a new state variable, which we'll call \"menu\"\r\n\r\n// export default function TreeInput({ data = [] }) {\r\n\r\n//     const [menu, setMenu] = useState(false);\r\n//     const [dropOpen, setDropOpen] = useState(false);\r\n//     const [currentPrice, setCurrentPrice] = useState({ Name: '' });\r\n\r\n//     const dropOpen_ONClickHandler = price => {\r\n//         setCurrentPrice(price)\r\n//         setDropOpen(true)\r\n//     }\r\n//     const delete_PriceList = price => {\r\n\r\n//     }\r\n//     function sub_Price_Add_Handler() {\r\n//         var price = document.getElementById(\"txtsubprice\")\r\n//         if (price.value === \"\") {\r\n//             alert(\"please enter value\")\r\n//         } else {\r\n\r\n//         }\r\n//     }\r\n//     const toggle = () => {\r\n//         setMenu('');\r\n//     }\r\n\r\n//     function fun1(data1) {\r\n//         return (\r\n//             <div>\r\n//                 {\r\n//                     data1.map(tree => fun2(tree))\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n\r\n//     function fun2(data2) {\r\n//         //\r\n//         return (\r\n//             // <li >\r\n//             <div style={{ paddingLeft: \"20px\" }} className={\"\"} >\r\n//                 <div className='row justify-content-center mt-n4 '>\r\n//                     <div className=' col-10'>\r\n//                         <Input type=\"text\" defaultValue={data2.Name} ></Input>\r\n\r\n//                     </div>\r\n//                     <div className=' col-1 al-end'> <input type=\"checkBox\" ></input></div>\r\n//                     <div className=' col-1 '>\r\n//                         <i className=\"mdi mdi-pencil font-size-12\"\r\n//                             onClick={e => setMenu(data2.id)}\r\n//                         ></i>\r\n//                         <Dropdown isOpen={menu === data2.id} toggle={toggle} className=\"d-inline-block\">\r\n//                             <DropdownToggle className=\"btn header-item \" tag=\"button\">\r\n\r\n//                             </DropdownToggle>\r\n//                             <DropdownMenu className=\"language-switch dropdown-menu-end\">\r\n\r\n//                                 <DropdownItem\r\n//                                     key={data2.id}\r\n//                                     onClick={(e) => { dropOpen_ONClickHandler(data2) }}\r\n//                                 // // className={`notify-item ${selectedLang === key ? \"active\" : \"none\"\r\n//                                 //     }`}\r\n//                                 >\r\n//                                     <span className=\"align-middle text-black\"\r\n//                                     >\r\n//                                         {\"Add Sub-Rate\"}\r\n//                                     </span>\r\n//                                 </DropdownItem>\r\n\r\n//                                 <DropdownItem\r\n//                                     key={data2.id}\r\n//                                     onClick={() => delete_PriceList(data2.id)}\r\n//                                 // // className={`notify-item ${selectedLang === key ? \"active\" : \"none\"\r\n//                                 //     }`}\r\n//                                 >\r\n//                                     <span className=\"align-middle text-danger\">\r\n//                                         {\"Delete\"}\r\n//                                     </span>\r\n//                                 </DropdownItem>\r\n\r\n//                             </DropdownMenu>\r\n\r\n//                         </Dropdown>\r\n//                     </div>\r\n\r\n//                     {data2.childern ? fun1(data2.childern) : null}\r\n//                 </div>\r\n//             </div>\r\n\r\n//         )\r\n\r\n//     }\r\n\r\n\r\n\r\n//     return (\r\n\r\n//         <div className={\"mt-3\"}>\r\n//             <Modal\r\n//                 isOpen={dropOpen}\r\n//                 toggle={() => { setDropOpen(!dropOpen) }}\r\n//                 size=\"sm\"\r\n//                 centered={true}\r\n//                 backdrop={'static'}\r\n//             >\r\n//                 <div className=\"modal-header\">\r\n//                     <h5 className=\"modal-title mt-0\">Add sub-Price </h5>\r\n//                     <button\r\n//                         type=\"button\"\r\n//                         onClick={() => {\r\n//                             setDropOpen(!dropOpen)\r\n//                         }}\r\n//                         className=\"close\"\r\n//                         data-dismiss=\"modal\"\r\n//                         aria-label=\"Close\"\r\n//                     >\r\n//                         <span aria-hidden=\"true\">&times;</span>\r\n//                     </button>\r\n//                 </div>\r\n//                 <div className=\"modal-body\">\r\n//                     <Row className=\"justify-content-md-left\">\r\n\r\n//                         <span >{currentPrice.Name}</span>\r\n\r\n//                         <Label htmlFor=\"horizontal-firstname-input\" className=\"col-4 col-form-label\" >IsDivision </Label>\r\n//                         <Col style={{ marginTop: '9px' }} >\r\n//                             <Input type=\"text\" id='txtsubprice' />\r\n//                         </Col>\r\n//                     </Row>\r\n//                 </div>\r\n//                 <div className=\"modal-footer\">\r\n//                     <button type=\"button\" className=\"btn btn-light\" onClick={() => {\r\n//                         setDropOpen(!dropOpen)\r\n//                     }}>Close</button>\r\n//                     <button type=\"button\" className=\"btn btn-primary\" onClick={() => { sub_Price_Add_Handler() }} >Add</button>\r\n//                 </div>\r\n\r\n//             </Modal>\r\n//             {fun1(data)}\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,aAAP,C,wFAEA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,KAAD,CAAW,CAEhCF,SAAS,CAAC,UAAM,CACZG,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCC,2BAAnC,EACA,MAAO,WAAM,CAAE;AACXF,MAAM,CAACG,mBAAP,CAA2B,SAA3B,CAAsCD,2BAAtC,EACH,CAFD,CAGH,CALQ,CAKN,EALM,CAAT,CAOA,QAASA,4BAAT,CAAqCE,KAArC,CAA4C,CACxC,GAAI,CACA,GAAIC,IAAG,CAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAV,CACA,GAAIH,KAAK,CAACI,MAAN,EAAgBH,GAAhB,EAAuBD,KAAK,CAACI,MAAN,CAAaC,UAAb,EAA2BJ,GAAtD,CAA2D,CACvDA,GAAG,CAACK,KAAJ,CAAUC,OAAV,CAAoB,MAApB,CACH,CACJ,CAAC,MAAOC,CAAP,CAAU,CAAG,CAClB,EAED,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,IAAD,qBACd,mCACI,YAAK,SAAS,CAAC,SAAf,uBACI,aAAM,EAAE,CAAC,cAAT,CAAwB,SAAS,CAAC,2BAAlC,CACI,OAAO,CAAE,iBAACF,CAAD,CAAO,CACZb,KAAK,CAACgB,cAAN,CAAqBD,IAArB,EACA;AACH,CAJL,UAIQA,IAAI,CAACE,KAJb,EADJ,EADJ,cAQI,kCACI,oBACKC,UAAU,CAACH,IAAI,CAACI,QAAN,CADf,EADJ,EARJ,GADc,EAAlB,CAiBA,GAAMD,WAAU,CAAG,QAAbA,WAAa,CAACE,KAAD,qBACf,WAAI,SAAS,CAAC,YAAd,UACKA,KAAK,CAACC,GAAN,CAAU,SAACC,IAAD,QACPR,UAAS,CAACQ,IAAD,CADF,EAAV,CADL,EADe,EAAnB,CAQA,mBACI,YAAK,EAAE,CAAC,YAAR,CAAqB,SAAS,CAAC,oBAA/B,uBACI,YAAK,SAAS,CAAC,iBAAf,uBACI,WAAI,KAAK,CAAE,CAAEC,WAAW,CAAE,KAAf,CAAX,UACKL,UAAU,CAAClB,KAAK,CAACwB,IAAP,CADf,EADJ,EADJ,EADJ,CAQH,CAnDD,CAoDA,cAAezB,iBAAf,CAi},"metadata":{},"sourceType":"module"}