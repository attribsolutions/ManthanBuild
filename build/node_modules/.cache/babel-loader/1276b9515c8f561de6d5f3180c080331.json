{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\RouteUpdate\\\\RouteUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, FormGroup, Row } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { AlertState, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { BreadcrumbShowCountlabel, Breadcrumb_inputName } from \"../../../store/Utilites/Breadcrumb/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\nimport { comAddPageFieldFunc, formValid, initialFiledFunc } from \"../../../components/Common/validationFunction\";\nimport { SaveButton } from \"../../../components/Common/CommonButton\";\nimport { breadcrumbReturnFunc, btnIsDissablefunc, metaTagLabel } from \"../../../components/Common/CommonFunction\";\nimport * as url from \"../../../routes/route_url\";\nimport * as pageId from \"../../../routes/allPageID\";\nimport * as mode from \"../../../routes/PageMode\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { countlabelFunc } from \"../../../components/Common/CommonPurchaseList\";\nimport { mySearchProps } from \"../../../components/Common/SearchBox/MySearch\";\nimport { Post_RouteUpdate, Post_RouteUpdateSuccess, RouteUpdateListAPI } from \"../../../store/Administrator/RouteUpdateRedux/action\";\nimport { GetRoutesList } from \"../../../store/Administrator/RoutesRedux/actions\";\nimport * as commonFunc from \"../../../components/Common/CommonFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RouteUpdate = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const fileds = {\n    id: \"\",\n    Name: \"\",\n    IsActive: false\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(mode.defaultsave);\n  const [userPageAccessState, setUserAccState] = useState(123); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    RouteUpdateList,\n    pageField,\n    RoutesList,\n    userAccess\n  } = useSelector(state => ({\n    postMsg: state.RouteUpdateReducer.postMsg,\n    RouteUpdateList: state.RouteUpdateReducer.RouteUpdateList,\n    RoutesList: state.RoutesReducer.RoutesList,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  const {\n    Data = []\n  } = RouteUpdateList;\n  useEffect(() => {\n    const page_Id = pageId.ROUTE_UPDATE;\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(page_Id));\n    dispatch(GetRoutesList());\n    dispatch(RouteUpdateListAPI());\n  }, []);\n  const location = { ...history.location\n  }; // const hasShowloction = location.hasOwnProperty(mode.editValue)\n\n  const hasShowModal = props.hasOwnProperty(mode.editValue); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserAccState(userAcc);\n      breadcrumbReturnFunc({\n        dispatch,\n        userAcc\n      });\n    }\n\n    ;\n  }, [userAccess]); //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(Post_RouteUpdateSuccess({\n        Status: false\n      }));\n      dispatch(Breadcrumb_inputName(''));\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message,\n          RedirectPath: url.ROUTE_UPDATE\n        }));\n      }\n    } else if (postMsg.Status === true) {\n      dispatch(Post_RouteUpdateSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMsg.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    dispatch(BreadcrumbShowCountlabel(`${\"Route Update Count\"}:${Data.length}`));\n  }, [RouteUpdateList]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n  useEffect(commonFunc.tableInputArrowUpDounFunc(\"#table_Arrow\"), [Data]);\n  const RoutesListOptions = RoutesList.map(index => ({\n    value: index.id,\n    label: index.Name,\n    IsActive: index.IsActive\n  }));\n  const RouteName_Options = RoutesListOptions.filter(index => {\n    return index.IsActive === true;\n  });\n  const pagesListColumns = [{\n    text: \"Party Name\",\n    dataField: \"SubPartyName\"\n  }, {\n    text: \"RouteName\",\n    dataField: \"RouteName\",\n    formatter: (value, row, key) => {\n      return /*#__PURE__*/_jsxDEV(Select, {\n        classNamePrefix: \"select2-selection\",\n        defaultValue: {\n          value: row.Route,\n          label: row.RouteName\n        },\n        options: RouteName_Options,\n        onChange: e => {\n          row[\"Route\"] = e.value;\n          row[\"RouteName\"] = e.label;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this);\n    },\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: '300px',\n        textAlign: 'center'\n      };\n    }\n  }];\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: Data.length,\n    custom: true\n  };\n\n  const SaveHandler = async event => {\n    event.preventDefault();\n    const btnId = event.target.id;\n\n    try {\n      if (formValid(state, setState)) {\n        btnIsDissablefunc({\n          btnId,\n          state: true\n        });\n        const data = Data.map(index => ({\n          id: index.id,\n          Party: index.Party,\n          SubParty: index.SubParty,\n          Route: index.Route\n        }));\n        const jsonBody = JSON.stringify({\n          Data: data\n        });\n        dispatch(Post_RouteUpdate({\n          jsonBody,\n          btnId\n        }));\n      }\n    } catch (e) {\n      btnIsDissablefunc({\n        btnId,\n        state: false\n      });\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === mode.dropdownAdd) {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: metaTagLabel(userPageAccessState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css,\n          marginBottom: \"200px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(PaginationProvider, {\n            pagination: paginationFactory(pageOptions),\n            children: _ref => {\n              let {\n                paginationProps,\n                paginationTableProps\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                keyField: \"id\",\n                data: Data,\n                columns: pagesListColumns,\n                search: true,\n                children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table\",\n                    children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n                      keyField: \"id\",\n                      id: \"table_Arrow\",\n                      bordered: true,\n                      striped: false,\n                      noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-danger text-center \",\n                        children: \"Party Not available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 71\n                      }, this),\n                      classes: \"table align-middle table-nowrap table-hover\",\n                      headerWrapperClasses: \"thead-light\",\n                      ...toolkitProps.baseProps,\n                      ...paginationTableProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 49\n                    }, this), mySearchProps(toolkitProps.searchProps)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"align-items-md-center mt-30\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      className: \"pagination pagination-rounded justify-content-end mb-2\",\n                      children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), Data.length > 0 ? /*#__PURE__*/_jsxDEV(FormGroup, {\n            style: {\n              marginTop: \"-25px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: 2,\n                className: \"mt-n4\",\n                children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                  pageMode: pageMode,\n                  onClick: SaveHandler,\n                  userAcc: userPageAccessState,\n                  module: \"RouteUpdate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(RouteUpdate, \"TVKiEhpIpYpjQAg7EYoSIePRPrk=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = RouteUpdate;\nexport default RouteUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteUpdate\");","map":{"version":3,"names":["React","useEffect","useState","Col","Container","FormGroup","Row","MetaTags","AlertState","commonPageField","commonPageFieldSuccess","useHistory","BreadcrumbShowCountlabel","Breadcrumb_inputName","useDispatch","useSelector","Select","comAddPageFieldFunc","formValid","initialFiledFunc","SaveButton","breadcrumbReturnFunc","btnIsDissablefunc","metaTagLabel","url","pageId","mode","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","BootstrapTable","countlabelFunc","mySearchProps","Post_RouteUpdate","Post_RouteUpdateSuccess","RouteUpdateListAPI","GetRoutesList","commonFunc","RouteUpdate","props","history","dispatch","fileds","id","Name","IsActive","state","setState","modalCss","setModalCss","pageMode","setPageMode","defaultsave","userPageAccessState","setUserAccState","postMsg","RouteUpdateList","pageField","RoutesList","userAccess","RouteUpdateReducer","RoutesReducer","Login","RoleAccessUpdateData","CommonPageFieldReducer","Data","page_Id","ROUTE_UPDATE","location","hasShowModal","hasOwnProperty","editValue","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","length","fieldArr","PageFieldMaster","tableInputArrowUpDounFunc","RoutesListOptions","map","index","value","label","RouteName_Options","filter","pagesListColumns","text","dataField","formatter","row","key","Route","RouteName","e","headerStyle","colum","colIndex","width","textAlign","pageOptions","sizePerPage","totalSize","custom","SaveHandler","event","preventDefault","btnId","target","data","Party","SubParty","jsonBody","IsEditMode_Css","dropdownAdd","marginTop","marginBottom","paginationProps","paginationTableProps","toolkitProps","baseProps","searchProps"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/RouteUpdate/RouteUpdate.js"],"sourcesContent":["import React, { useEffect, useState, } from \"react\";\r\nimport {\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Row,\r\n} from \"reactstrap\";\r\n\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BreadcrumbShowCountlabel, Breadcrumb_inputName } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n} from \"../../../components/Common/validationFunction\";\r\nimport { SaveButton } from \"../../../components/Common/CommonButton\";\r\nimport { breadcrumbReturnFunc, btnIsDissablefunc, metaTagLabel, } from \"../../../components/Common/CommonFunction\";\r\nimport * as url from \"../../../routes/route_url\";\r\nimport * as pageId from \"../../../routes/allPageID\"\r\nimport * as mode from \"../../../routes/PageMode\"\r\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { countlabelFunc } from \"../../../components/Common/CommonPurchaseList\";\r\nimport { mySearchProps } from \"../../../components/Common/SearchBox/MySearch\";\r\nimport { Post_RouteUpdate, Post_RouteUpdateSuccess, RouteUpdateListAPI } from \"../../../store/Administrator/RouteUpdateRedux/action\";\r\nimport { GetRoutesList } from \"../../../store/Administrator/RoutesRedux/actions\";\r\nimport * as commonFunc from \"../../../components/Common/CommonFunction\";\r\n\r\nconst RouteUpdate = (props) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const fileds = {\r\n        id: \"\",\r\n        Name: \"\",\r\n        IsActive: false\r\n    }\r\n\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(mode.defaultsave);\r\n    const [userPageAccessState, setUserAccState] = useState(123);\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { postMsg,\r\n        RouteUpdateList,\r\n        pageField,\r\n        RoutesList,\r\n        userAccess } = useSelector((state) => ({\r\n            postMsg: state.RouteUpdateReducer.postMsg,\r\n            RouteUpdateList: state.RouteUpdateReducer.RouteUpdateList,\r\n            RoutesList: state.RoutesReducer.RoutesList,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageField\r\n        }));\r\n    const { Data = [] } = RouteUpdateList\r\n\r\n    useEffect(() => {\r\n        const page_Id = pageId.ROUTE_UPDATE\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(page_Id))\r\n        dispatch(GetRoutesList())\r\n        dispatch(RouteUpdateListAPI())\r\n    }, []);\r\n\r\n    const location = { ...history.location }\r\n    // const hasShowloction = location.hasOwnProperty(mode.editValue)\r\n    const hasShowModal = props.hasOwnProperty(mode.editValue)\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserAccState(userAcc)\r\n            breadcrumbReturnFunc({ dispatch, userAcc });\r\n        };\r\n    }, [userAccess])\r\n\r\n    //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(Post_RouteUpdateSuccess({ Status: false }))\r\n            dispatch(Breadcrumb_inputName(''))\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: url.ROUTE_UPDATE,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(Post_RouteUpdateSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMsg.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(BreadcrumbShowCountlabel(`${\"Route Update Count\"}:${Data.length}`))\r\n    }, [RouteUpdateList])\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    useEffect(commonFunc.tableInputArrowUpDounFunc(\"#table_Arrow\"), [Data]);\r\n\r\n    const RoutesListOptions = RoutesList.map((index) => ({\r\n        value: index.id,\r\n        label: index.Name,\r\n        IsActive: index.IsActive\r\n    }));\r\n\r\n    const RouteName_Options = RoutesListOptions.filter((index) => {\r\n        return index.IsActive === true\r\n    });\r\n\r\n    const pagesListColumns = [\r\n        {\r\n            text: \"Party Name\",\r\n            dataField: \"SubPartyName\",\r\n        },\r\n        {\r\n            text: \"RouteName\",\r\n            dataField: \"RouteName\",\r\n\r\n            formatter: (value, row, key) => {\r\n\r\n                return (\r\n                    <Select\r\n                        classNamePrefix=\"select2-selection\"\r\n                        defaultValue={{ value: row.Route, label: row.RouteName }}\r\n                        options={RouteName_Options}\r\n                        onChange={e => {\r\n                            row[\"Route\"] = e.value;\r\n                            row[\"RouteName\"] = e.label\r\n                        }}\r\n                    >\r\n                    </Select >\r\n                )\r\n            },\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '300px', textAlign: 'center' };\r\n            }\r\n        },\r\n    ];\r\n\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        totalSize: Data.length,\r\n        custom: true,\r\n    };\r\n\r\n    const SaveHandler = async (event) => {\r\n        event.preventDefault();\r\n        const btnId = event.target.id\r\n        try {\r\n            if (formValid(state, setState)) {\r\n                btnIsDissablefunc({ btnId, state: true })\r\n\r\n                const data = Data.map((index) => ({\r\n                    id: index.id,\r\n                    Party: index.Party,\r\n                    SubParty: index.SubParty,\r\n                    Route: index.Route,\r\n                }))\r\n                const jsonBody = JSON.stringify({\r\n                    Data: data\r\n                })\r\n\r\n                dispatch(Post_RouteUpdate({ jsonBody, btnId }));\r\n\r\n            }\r\n        } catch (e) { btnIsDissablefunc({ btnId, state: false }) }\r\n    };\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === mode.dropdownAdd)) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                 <MetaTags>{metaTagLabel(userPageAccessState)}</MetaTags>\r\n\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css, marginBottom: \"200px\" }}>\r\n                    {/* <Container fluid> */}\r\n\r\n                    <form noValidate>\r\n                        <PaginationProvider\r\n\r\n                            pagination={paginationFactory(pageOptions)}\r\n                        >\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                                <ToolkitProvider\r\n\r\n                                    keyField=\"id\"\r\n                                    data={Data}\r\n                                    columns={pagesListColumns}\r\n\r\n                                    search\r\n                                >\r\n                                    {toolkitProps => (\r\n                                        <React.Fragment>\r\n                                            <div className=\"table\">\r\n                                                <BootstrapTable\r\n                                                    keyField={\"id\"}\r\n                                                    id=\"table_Arrow\"\r\n                                                    bordered={true}\r\n                                                    striped={false}\r\n                                                    noDataIndication={<div className=\"text-danger text-center \">Party Not available</div>}\r\n                                                    classes={\"table align-middle table-nowrap table-hover\"}\r\n                                                    headerWrapperClasses={\"thead-light\"}\r\n\r\n                                                    {...toolkitProps.baseProps}\r\n                                                    {...paginationTableProps}\r\n                                                />\r\n                                                {/* {countlabelFunc(toolkitProps, paginationProps, dispatch, \"Route Update\")} */}\r\n                                                {mySearchProps(toolkitProps.searchProps)}\r\n                                            </div>\r\n\r\n                                            <Row className=\"align-items-md-center mt-30\">\r\n                                                <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                    <PaginationListStandalone\r\n                                                        {...paginationProps}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                    }\r\n                                </ToolkitProvider>\r\n                            )\r\n                            }\r\n\r\n                        </PaginationProvider>\r\n\r\n                        {Data.length > 0 ?\r\n                            <FormGroup style={{ marginTop: \"-25px\" }}>\r\n                                <Row >\r\n                                    <Col sm={2} className=\"mt-n4\">\r\n                                        <SaveButton pageMode={pageMode}\r\n                                            onClick={SaveHandler}\r\n                                            userAcc={userPageAccessState}\r\n                                            module={\"RouteUpdate\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup >\r\n                            : null\r\n                        }\r\n\r\n                    </form>\r\n                    {/* </Container> */}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default RouteUpdate\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}