{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\TermsAndConditions\\\\TermsAndConditionsMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { AlertState, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { Breadcrumb_inputName } from \"../../../store/Utilites/Breadcrumb/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { comAddPageFieldFunc, formValid, initialFiledFunc, onChangeText, resetFunction } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\nimport { SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\nimport { EditTermsAndCondtions_Success, postTermAndCondition, postTermAndConditionSuccess, UpdateTermsAndCondtions, UpdateTermsAndCondtions_Success } from \"../../../store/Administrator/TermsAndConditionsRedux/actions\";\nimport { TERMS_AND_CONDITION_LIST } from \"../../../routes/route_url\";\nimport { saveDissable } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TermsAndConditionsMaster = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const fileds = {\n    id: \"\",\n    Name: \"\",\n    IsDefault: false\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(123);\n  const [editCreatedBy, seteditCreatedBy] = useState(\"\"); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    updateMsg,\n    pageField,\n    userAccess\n  } = useSelector(state => ({\n    postMsg: state.TermsAndConditionsReducer.PostData,\n    updateMsg: state.TermsAndConditionsReducer.TermsAndConditionsupdateMessage,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(42));\n  }, []);\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]); //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          id,\n          Name,\n          IsDefault\n        } = hasEditVal;\n        const {\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        } = { ...state\n        };\n        values.id = id;\n        values.Name = Name;\n        values.IsDefault = IsDefault;\n        hasValid.Name.valid = true;\n        hasValid.IsDefault.valid = true;\n        setState({\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        });\n        dispatch(Breadcrumb_inputName(hasEditVal.Name));\n        seteditCreatedBy(hasEditVal.CreatedBy);\n      }\n\n      dispatch(EditTermsAndCondtions_Success({\n        Status: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(postTermAndConditionSuccess({\n        Status: false\n      }));\n      setState(() => resetFunction(fileds, state)); // Clear form values \n\n      saveDissable(false); //save Button Is enable function\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message,\n          RedirectPath: TERMS_AND_CONDITION_LIST\n        }));\n      }\n    } else if (postMsg.Status === true) {\n      saveDissable(false); //save Button Is enable function\n\n      dispatch(postTermAndConditionSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMsg.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\n      setState(() => resetFunction(fileds, state)); // Clear form values \n\n      saveDissable(false); //save Button Is enable function\n\n      history.push({\n        pathname: TERMS_AND_CONDITION_LIST\n      });\n    } else if (updateMsg.Status === true && !modalCss) {\n      saveDissable(false); //Update Button Is enable function\n\n      dispatch(UpdateTermsAndCondtions_Success({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg, modalCss]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name,\n        IsDefault: values.IsDefault\n      });\n      saveDissable(true); //save Button Is dissable function\n\n      if (pageMode === \"edit\") {\n        dispatch(UpdateTermsAndCondtions(jsonBody, values.id));\n      } else {\n        dispatch(postTermAndCondition(jsonBody));\n      }\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [userPageAccessState.PageHeading, \"| FoodERP-React FrontEnd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            pageHeading: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black c_card_header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        className: \"c_card_body\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: fieldLabel.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 240,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"Name\",\n                              id: \"txtName\",\n                              value: values.Name,\n                              type: \"text\",\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter Name\",\n                              autoComplete: \"off\",\n                              autoFocus: true,\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(Breadcrumb_inputName(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 241,\n                              columnNumber: 61\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 256,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 239,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-3\",\n                              children: /*#__PURE__*/_jsxDEV(Row, {\n                                className: \"justify-content-md-left\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  className: \"col-sm-4 col-form-label\",\n                                  children: fieldLabel.IsDefault\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 262,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                  md: 2,\n                                  style: {\n                                    marginTop: '9px',\n                                    marginLeft: \"1cm\"\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"form-check form-switch form-switch-md mb-3\",\n                                    children: /*#__PURE__*/_jsxDEV(Input, {\n                                      type: \"checkbox\",\n                                      className: \"form-check-input\",\n                                      checked: values.IsDefault,\n                                      name: \"IsDefault\",\n                                      onChange: e => {\n                                        setState(i => {\n                                          const a = { ...i\n                                          };\n                                          a.values.IsDefault = e.target.checked;\n                                          return a;\n                                        });\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 266,\n                                      columnNumber: 77\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 265,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 263,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 261,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 260,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 259,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mt-2\",\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                                  pageMode: pageMode,\n                                  userAcc: userPageAccessState,\n                                  editCreatedBy: editCreatedBy,\n                                  module: \"TermsAndCondtionsMaster\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 285,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 284,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 283,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 282,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(TermsAndConditionsMaster, \"NYriN6uYI69V7L+FS229ek0qE00=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = TermsAndConditionsMaster;\nexport default TermsAndConditionsMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"TermsAndConditionsMaster\");","map":{"version":3,"names":["React","useEffect","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","MetaTags","AlertState","commonPageField","commonPageFieldSuccess","useHistory","Breadcrumb_inputName","useDispatch","useSelector","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeText","resetFunction","SaveButton","EditTermsAndCondtions_Success","postTermAndCondition","postTermAndConditionSuccess","UpdateTermsAndCondtions","UpdateTermsAndCondtions_Success","TERMS_AND_CONDITION_LIST","saveDissable","TermsAndConditionsMaster","props","history","dispatch","fileds","id","Name","IsDefault","state","setState","modalCss","setModalCss","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","editCreatedBy","seteditCreatedBy","postMsg","updateMsg","pageField","userAccess","TermsAndConditionsReducer","PostData","TermsAndConditionsupdateMessage","Login","RoleAccessUpdateData","CommonPageFieldReducer","values","isError","fieldLabel","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","hasValid","required","valid","CreatedBy","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","push","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","IsEditMode_Css","marginTop","PageHeading","PageDescription","PageDescriptionDetails","backgroundColor","length","target","value","marginLeft","e","i","a","checked"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/TermsAndConditions/TermsAndConditionsMaster.js"],"sourcesContent":["import React, { useEffect, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\n\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb_inputName } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n    onChangeText,\r\n    resetFunction\r\n} from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\r\nimport { SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\r\n\r\nimport {\r\n    EditTermsAndCondtions_Success,\r\n    postTermAndCondition,\r\n    postTermAndConditionSuccess,\r\n    UpdateTermsAndCondtions,\r\n    UpdateTermsAndCondtions_Success\r\n} from \"../../../store/Administrator/TermsAndConditionsRedux/actions\";\r\nimport { TERMS_AND_CONDITION_LIST } from \"../../../routes/route_url\";\r\nimport { saveDissable } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\n\r\nconst TermsAndConditionsMaster = (props) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const fileds = {\r\n        id: \"\",\r\n        Name: \"\",\r\n        IsDefault: false\r\n    }\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n    const [editCreatedBy, seteditCreatedBy] = useState(\"\");\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { postMsg, updateMsg, pageField, userAccess } = useSelector((state) => ({\r\n        postMsg: state.TermsAndConditionsReducer.PostData,\r\n        updateMsg: state.TermsAndConditionsReducer.TermsAndConditionsupdateMessage,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(42))\r\n    }, []);\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if ((hasShowloction || hasShowModal)) {\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n            if (hasEditVal) {\r\n               \r\n                const { id, Name ,IsDefault} = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n\r\n                values.id = id\r\n                values.Name = Name;\r\n                values.IsDefault = IsDefault;\r\n\r\n                hasValid.Name.valid = true;\r\n                hasValid.IsDefault.valid = true;\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(Breadcrumb_inputName(hasEditVal.Name))\r\n                seteditCreatedBy(hasEditVal.CreatedBy)\r\n\r\n            }\r\n            dispatch(EditTermsAndCondtions_Success({ Status: false }))\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(postTermAndConditionSuccess({ Status: false }))\r\n            setState(() => resetFunction(fileds, state))// Clear form values \r\n            saveDissable(false);//save Button Is enable function\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: TERMS_AND_CONDITION_LIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            saveDissable(false);//save Button Is enable function\r\n            dispatch(postTermAndConditionSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMsg.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n\r\n        if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\r\n            setState(() => resetFunction(fileds, state)) // Clear form values \r\n            saveDissable(false); //save Button Is enable function\r\n            history.push({\r\n                pathname: TERMS_AND_CONDITION_LIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            saveDissable(false); //Update Button Is enable function\r\n            dispatch(UpdateTermsAndCondtions_Success({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    const formSubmitHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                IsDefault: values.IsDefault\r\n            });\r\n\r\n            saveDissable(true);//save Button Is dissable function\r\n\r\n            if (pageMode === \"edit\") {\r\n                dispatch(UpdateTermsAndCondtions(jsonBody, values.id));\r\n            }\r\n            else {\r\n                dispatch(postTermAndCondition(jsonBody))\r\n            }\r\n\r\n        }\r\n    };\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading}| FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb pageHeading={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black c_card_header\" >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody className=\"c_card_body\">\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name}</Label>\r\n                                                            <Input\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={values.Name}\r\n                                                                type=\"text\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete=\"off\"\r\n                                                                autoFocus={true}\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(Breadcrumb_inputName(event.target.value))\r\n                                                                }}\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-3\">\r\n                                                                <Row className=\"justify-content-md-left\">\r\n                                                                    <Label className=\"col-sm-4 col-form-label\" >{fieldLabel.IsDefault}</Label>\r\n                                                                    <Col md={2} style={{ marginTop: '9px', marginLeft: \"1cm\" }} >\r\n\r\n                                                                        <div className=\"form-check form-switch form-switch-md mb-3\" >\r\n                                                                            <Input type=\"checkbox\" className=\"form-check-input\"\r\n                                                                                checked={values.IsDefault}\r\n                                                                                name=\"IsDefault\"\r\n                                                                                onChange={(e) => {\r\n                                                                                    setState((i) => {\r\n                                                                                        const a = { ...i }\r\n                                                                                        a.values.IsDefault = e.target.checked;\r\n                                                                                        return a\r\n                                                                                    })\r\n                                                                                }}\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n                                                        <FormGroup className=\"mt-2\">\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <SaveButton\r\n                                                                        pageMode={pageMode}\r\n                                                                        userAcc={userPageAccessState}\r\n                                                                        editCreatedBy={editCreatedBy}\r\n                                                                        module={\"TermsAndCondtionsMaster\"}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n\r\n                                                    </Row>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default TermsAndConditionsMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}