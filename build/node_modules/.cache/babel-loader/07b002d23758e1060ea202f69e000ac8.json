{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { saveTermAndConditionSuccess, getTermAndCondition_Success, DeleteTermsAndCondtions_Success, EditTermsAndCondtions_Success, UpdateTermsAndCondtions_Success, TermsAndConditionsApiErrorAction } from \"./actions\";\nimport { Post_TermsAndCondtions_Master_API, get_TermsAndCondtionsList_API, del_TermsAndCondtions_Master_API, edit_TermsAndCondtions_Master_API, update_TermsAndCondtions_Master_API } from \"../../../helpers/backend_helper\";\nimport { POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API, GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API, DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, EDIT_METHOD_FOR_TERMSANDCONDITIONSLIST_API, UPDATE_METHOD_FOR_TERMSANDCONDITIONSLIST_API } from \"./actionTypes\";\nimport { CommonConsole } from \"../../../components/Common/CommonFunction\"; // post api\n\nfunction* Save_Method_ForTermsAndCondtionsMaster_GenFun(_ref) {\n  let {\n    config\n  } = _ref;\n\n  try {\n    const response = yield call(Post_TermsAndCondtions_Master_API, config);\n    yield put(saveTermAndConditionSuccess(response));\n  } catch (error) {\n    yield put(TermsAndConditionsApiErrorAction());\n  }\n} // Get List Page API\n\n\n_c = Save_Method_ForTermsAndCondtionsMaster_GenFun;\n\nfunction* Get_TermsAndCondtions_GenratorFunction() {\n  try {\n    const response = yield call(get_TermsAndCondtionsList_API);\n    yield put(getTermAndCondition_Success(response.Data));\n  } catch (error) {\n    yield put(TermsAndConditionsApiErrorAction());\n  }\n} // delete api \n\n\n_c2 = Get_TermsAndCondtions_GenratorFunction;\n\nfunction* Delete_TermsAndCondtions_GenratorFunction(_ref2) {\n  let {\n    config\n  } = _ref2;\n\n  try {\n    const response = yield call(del_TermsAndCondtions_Master_API, config);\n    yield put(DeleteTermsAndCondtions_Success(response));\n  } catch (error) {\n    yield put(TermsAndConditionsApiErrorAction());\n  }\n} // edit api\n\n\n_c3 = Delete_TermsAndCondtions_GenratorFunction;\n\nfunction* Edit_TermsAndCondtions_GenratorFunction(_ref3) {\n  let {\n    config\n  } = _ref3;\n  const {\n    btnmode\n  } = config;\n\n  try {\n    const response = yield call(edit_TermsAndCondtions_Master_API, config);\n    response.pageMode = btnmode;\n    yield put(EditTermsAndCondtions_Success(response));\n  } catch (error) {\n    yield put(TermsAndConditionsApiErrorAction());\n  }\n} // update api\n\n\n_c4 = Edit_TermsAndCondtions_GenratorFunction;\n\nfunction* update_TermsAndCondtions_GenratorFunction(_ref4) {\n  let {\n    config\n  } = _ref4;\n\n  try {\n    const response = yield call(update_TermsAndCondtions_Master_API, config);\n    yield put(UpdateTermsAndCondtions_Success(response));\n  } catch (error) {\n    yield put(TermsAndConditionsApiErrorAction());\n  }\n}\n\nfunction* TermsAndConditionsSaga() {\n  yield takeLatest(POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API, Save_Method_ForTermsAndCondtionsMaster_GenFun);\n  yield takeLatest(GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Get_TermsAndCondtions_GenratorFunction);\n  yield takeLatest(DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Delete_TermsAndCondtions_GenratorFunction);\n  yield takeLatest(EDIT_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Edit_TermsAndCondtions_GenratorFunction);\n  yield takeLatest(UPDATE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, update_TermsAndCondtions_GenratorFunction);\n}\n\n_c5 = TermsAndConditionsSaga;\nexport default TermsAndConditionsSaga;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Save_Method_ForTermsAndCondtionsMaster_GenFun\");\n$RefreshReg$(_c2, \"Get_TermsAndCondtions_GenratorFunction\");\n$RefreshReg$(_c3, \"Delete_TermsAndCondtions_GenratorFunction\");\n$RefreshReg$(_c4, \"Edit_TermsAndCondtions_GenratorFunction\");\n$RefreshReg$(_c5, \"TermsAndConditionsSaga\");","map":{"version":3,"names":["call","put","takeLatest","saveTermAndConditionSuccess","getTermAndCondition_Success","DeleteTermsAndCondtions_Success","EditTermsAndCondtions_Success","UpdateTermsAndCondtions_Success","TermsAndConditionsApiErrorAction","Post_TermsAndCondtions_Master_API","get_TermsAndCondtionsList_API","del_TermsAndCondtions_Master_API","edit_TermsAndCondtions_Master_API","update_TermsAndCondtions_Master_API","POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API","GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API","DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API","EDIT_METHOD_FOR_TERMSANDCONDITIONSLIST_API","UPDATE_METHOD_FOR_TERMSANDCONDITIONSLIST_API","CommonConsole","Save_Method_ForTermsAndCondtionsMaster_GenFun","config","response","error","Get_TermsAndCondtions_GenratorFunction","Data","Delete_TermsAndCondtions_GenratorFunction","Edit_TermsAndCondtions_GenratorFunction","btnmode","pageMode","update_TermsAndCondtions_GenratorFunction","TermsAndConditionsSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Administrator/TermsAndConditionsRedux/saga.js"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  saveTermAndConditionSuccess,\r\n  getTermAndCondition_Success,\r\n  DeleteTermsAndCondtions_Success,\r\n  EditTermsAndCondtions_Success,\r\n  UpdateTermsAndCondtions_Success,\r\n  TermsAndConditionsApiErrorAction\r\n} from \"./actions\";\r\n\r\nimport {\r\n  Post_TermsAndCondtions_Master_API,\r\n  get_TermsAndCondtionsList_API,\r\n  del_TermsAndCondtions_Master_API,\r\n  edit_TermsAndCondtions_Master_API,\r\n  update_TermsAndCondtions_Master_API\r\n} from \"../../../helpers/backend_helper\";\r\n\r\nimport {\r\n  POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API,\r\n  GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API,\r\n  DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API,\r\n  EDIT_METHOD_FOR_TERMSANDCONDITIONSLIST_API,\r\n  UPDATE_METHOD_FOR_TERMSANDCONDITIONSLIST_API\r\n} from \"./actionTypes\";\r\n\r\nimport { CommonConsole } from \"../../../components/Common/CommonFunction\";\r\n\r\n\r\n// post api\r\nfunction* Save_Method_ForTermsAndCondtionsMaster_GenFun({ config }) {\r\n  try {\r\n    const response = yield call(Post_TermsAndCondtions_Master_API, config);\r\n    yield put(saveTermAndConditionSuccess(response));\r\n  } catch (error) { yield put(TermsAndConditionsApiErrorAction()) }\r\n}\r\n\r\n\r\n// Get List Page API\r\nfunction* Get_TermsAndCondtions_GenratorFunction() {\r\n  try {\r\n    const response = yield call(get_TermsAndCondtionsList_API);\r\n    yield put(getTermAndCondition_Success(response.Data));\r\n  } catch (error) { yield put(TermsAndConditionsApiErrorAction()) }\r\n}\r\n\r\n// delete api \r\nfunction* Delete_TermsAndCondtions_GenratorFunction({config }) {\r\n  try {\r\n    const response = yield call(del_TermsAndCondtions_Master_API, config);\r\n    yield put(DeleteTermsAndCondtions_Success(response))\r\n  } catch (error) { yield put(TermsAndConditionsApiErrorAction()) }\r\n}\r\n\r\n\r\n// edit api\r\nfunction* Edit_TermsAndCondtions_GenratorFunction({ config }) {\r\n  const { btnmode } = config;\r\n  try {\r\n    const response = yield call(edit_TermsAndCondtions_Master_API, config);\r\n    response.pageMode = btnmode;\r\n    yield put(EditTermsAndCondtions_Success(response));\r\n  } catch (error) { yield put(TermsAndConditionsApiErrorAction()) }\r\n}\r\n\r\n// update api\r\nfunction* update_TermsAndCondtions_GenratorFunction({ config }) {\r\n  \r\n  try {\r\n    const response = yield call(update_TermsAndCondtions_Master_API, config);\r\n    yield put(UpdateTermsAndCondtions_Success(response))\r\n  } catch (error) { yield put(TermsAndConditionsApiErrorAction()) }\r\n}\r\n\r\n\r\nfunction* TermsAndConditionsSaga() {\r\n  yield takeLatest(POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API, Save_Method_ForTermsAndCondtionsMaster_GenFun)\r\n  yield takeLatest(GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Get_TermsAndCondtions_GenratorFunction)\r\n  yield takeLatest(DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Delete_TermsAndCondtions_GenratorFunction)\r\n  yield takeLatest(EDIT_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Edit_TermsAndCondtions_GenratorFunction)\r\n  yield takeLatest(UPDATE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, update_TermsAndCondtions_GenratorFunction)\r\n}\r\n\r\nexport default TermsAndConditionsSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}