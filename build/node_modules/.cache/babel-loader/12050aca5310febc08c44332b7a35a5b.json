{"ast":null,"code":"// export const basicAmount = i => {\n//     let rate = 0\n//     let qty = 0\n//     if (!(i.Rate == '')) { rate = i.Rate; };\n//     if (!(i.Quantity == '')) { qty = i.Quantity; };\n//     let val = parseFloat(rate) * parseFloat(qty)\n//     if (!val) {\n//         val = 0\n//     }\n//     return val\n// }\n// export const roundedGstAmount = (i) => {\n//     let rowGst = 0\n//     let qty = 0\n//     if (!(i.GSTPercentage == '')) { rowGst = i.GSTPercentage; };\n//     const base = basicAmount(i);\n//     const gst = parseFloat(rowGst);\n//     return ((base * gst) / 100)\n// }\n// export const Amount = (i) => {\n//     const roundedGstAmount = roundedGstAmount(i);\n//     const basicAmount = basicAmount(i);\n//     const total = roundedGstAmount + parseFloat(basicAmount)\n//     return total.toFixed(2)\n// }\n// export const Y = (i) => {\n//     // Retrieve values from input object\n//     const rate = Number(i.Rate) || 0;\n//     const qty = Number(i.Quantity) || 0;\n//     const rowGst = Number(i.GSTPercentage) || 0;\n//     // Calculate basic amount\n//     const basicAmount = rate * qty;\n//     // Calculate rounded GST amount\n//     const roundedGstAmount = (basicAmount * rowGst) / 100;\n//     // Calculate total amount\n//     const totalAmount = roundedGstAmount + basicAmount;\n//     return {\n//         basicAmount,\n//         roundedGstAmount: Number(roundedGstAmount.toFixed(2)),\n//         roundedTotalAmount: Number(totalAmount.toFixed(2)),\n//     };\n// };\nexport var orderCalculateFunc=function orderCalculateFunc(row){// Retrieve values from input object\nvar rate=Number(row.rate)||0;var quantity=Number(row.quantity)||0;var gstPercentage=Number(row.GSTPercentage)||0;// Calculate basic amount\nvar basicAmount=rate*quantity;// Calculate GST amount\nvar gstAmount=basicAmount*gstPercentage/100;// Calculate CGST and SGST amounts\nvar CGST_Amount=Number((gstAmount/2).toFixed(2));var SGST_Amount=CGST_Amount;// Calculate rounded GST amount\nvar roundedGstAmount=CGST_Amount+SGST_Amount;// Calculate total amount\nvar totalAmount=gstAmount+basicAmount;return{basicAmount:basicAmount,roundedTotalAmount:Number(totalAmount.toFixed(2)),CGST_Amount:CGST_Amount,SGST_Amount:SGST_Amount,roundedGstAmount:roundedGstAmount.toFixed(2)};};","map":{"version":3,"names":["orderCalculateFunc","row","rate","Number","quantity","gstPercentage","GSTPercentage","basicAmount","gstAmount","CGST_Amount","toFixed","SGST_Amount","roundedGstAmount","totalAmount","roundedTotalAmount"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Purchase/Order/OrderPageCalulation.js"],"sourcesContent":["\r\n\r\n// export const basicAmount = i => {\r\n\r\n//     let rate = 0\r\n//     let qty = 0\r\n//     if (!(i.Rate == '')) { rate = i.Rate; };\r\n//     if (!(i.Quantity == '')) { qty = i.Quantity; };\r\n\r\n//     let val = parseFloat(rate) * parseFloat(qty)\r\n//     if (!val) {\r\n//         val = 0\r\n//     }\r\n\r\n//     return val\r\n// }\r\n\r\n// export const roundedGstAmount = (i) => {\r\n//     let rowGst = 0\r\n//     let qty = 0\r\n//     if (!(i.GSTPercentage == '')) { rowGst = i.GSTPercentage; };\r\n//     const base = basicAmount(i);\r\n//     const gst = parseFloat(rowGst);\r\n//     return ((base * gst) / 100)\r\n// }\r\n\r\n// export const Amount = (i) => {\r\n\r\n//     const roundedGstAmount = roundedGstAmount(i);\r\n//     const basicAmount = basicAmount(i);\r\n//     const total = roundedGstAmount + parseFloat(basicAmount)\r\n//     return total.toFixed(2)\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// export const Y = (i) => {\r\n//     // Retrieve values from input object\r\n//     const rate = Number(i.Rate) || 0;\r\n//     const qty = Number(i.Quantity) || 0;\r\n//     const rowGst = Number(i.GSTPercentage) || 0;\r\n\r\n//     // Calculate basic amount\r\n//     const basicAmount = rate * qty;\r\n\r\n//     // Calculate rounded GST amount\r\n//     const roundedGstAmount = (basicAmount * rowGst) / 100;\r\n\r\n//     // Calculate total amount\r\n//     const totalAmount = roundedGstAmount + basicAmount;\r\n\r\n//     return {\r\n//         basicAmount,\r\n//         roundedGstAmount: Number(roundedGstAmount.toFixed(2)),\r\n//         roundedTotalAmount: Number(totalAmount.toFixed(2)),\r\n//     };\r\n// };\r\n\r\n\r\nexport const orderCalculateFunc = (row) => {\r\n    // Retrieve values from input object\r\n    const rate = Number(row.rate) || 0;\r\n    const quantity = Number(row.quantity) || 0;\r\n    const gstPercentage = Number(row.GSTPercentage) || 0;\r\n  \r\n    // Calculate basic amount\r\n    const basicAmount = rate * quantity;\r\n  \r\n    // Calculate GST amount\r\n    const gstAmount = (basicAmount * gstPercentage) / 100;\r\n  \r\n    // Calculate CGST and SGST amounts\r\n    const CGST_Amount = Number((gstAmount / 2).toFixed(2));\r\n    const SGST_Amount = CGST_Amount;\r\n  \r\n    // Calculate rounded GST amount\r\n    const roundedGstAmount = CGST_Amount + SGST_Amount;\r\n  \r\n    // Calculate total amount\r\n    const totalAmount = gstAmount + basicAmount;\r\n  \r\n    return {\r\n      basicAmount,\r\n      roundedTotalAmount: Number(totalAmount.toFixed(2)),\r\n      CGST_Amount,\r\n      SGST_Amount,\r\n      roundedGstAmount: roundedGstAmount.toFixed(2),\r\n    };\r\n  };\r\n  "],"mappings":"AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAO,IAAMA,mBAAkB,CAAG,QAArBA,mBAAqB,CAACC,GAAD,CAAS,CACvC;AACA,GAAMC,KAAI,CAAGC,MAAM,CAACF,GAAG,CAACC,IAAL,CAAN,EAAoB,CAAjC,CACA,GAAME,SAAQ,CAAGD,MAAM,CAACF,GAAG,CAACG,QAAL,CAAN,EAAwB,CAAzC,CACA,GAAMC,cAAa,CAAGF,MAAM,CAACF,GAAG,CAACK,aAAL,CAAN,EAA6B,CAAnD,CAEA;AACA,GAAMC,YAAW,CAAGL,IAAI,CAAGE,QAA3B,CAEA;AACA,GAAMI,UAAS,CAAID,WAAW,CAAGF,aAAf,CAAgC,GAAlD,CAEA;AACA,GAAMI,YAAW,CAAGN,MAAM,CAAC,CAACK,SAAS,CAAG,CAAb,EAAgBE,OAAhB,CAAwB,CAAxB,CAAD,CAA1B,CACA,GAAMC,YAAW,CAAGF,WAApB,CAEA;AACA,GAAMG,iBAAgB,CAAGH,WAAW,CAAGE,WAAvC,CAEA;AACA,GAAME,YAAW,CAAGL,SAAS,CAAGD,WAAhC,CAEA,MAAO,CACLA,WAAW,CAAXA,WADK,CAELO,kBAAkB,CAAEX,MAAM,CAACU,WAAW,CAACH,OAAZ,CAAoB,CAApB,CAAD,CAFrB,CAGLD,WAAW,CAAXA,WAHK,CAILE,WAAW,CAAXA,WAJK,CAKLC,gBAAgB,CAAEA,gBAAgB,CAACF,OAAjB,CAAyB,CAAzB,CALb,CAAP,CAOD,CA7BI"},"metadata":{},"sourceType":"module"}