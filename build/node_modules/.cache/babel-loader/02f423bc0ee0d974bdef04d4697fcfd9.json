{"ast":null,"code":"// export const columns = [\n//     \"Item Name\",\n//     \"Unit\",\n//     \"comments\",\n// ];\n// export const PageHedercolumns = [\n//     \"Billed by\",\n//     \"Billed to\",\n//     ''\n// ]\n// export const tableRows = (data) => {\n//     debugger\n//     const { OrderItem = [] } = data\n//     const datatable = [];\n//     OrderItem.forEach((element, k) => {\n//         let TableListData = [\n//             k,\n//            `(${element.HSNCode})${element.ItemName}`,\n//             element.Quantity,\n//             element.Rate,\n//             element.Amount,\n//         ];\n//         datatable.push(TableListData);\n//     });\n//     let tableTotalRowLast = [\n//         \"\",\n//         \"\",\n//         \"\",\n//         \"isaddition\",\n//         parseFloat(data.OrderAmount).toFixed(2),\n//     ];\n//     datatable.push(tableTotalRowLast);\n//     return datatable;\n// }\n// export const ReportFotterColumns = [\n//     \"SGST\",\n//     \"CGST\", \"Quantity\",\n//     \"GST % \",\n//     \"TaxbleAmt.\", \"IGST\", \"Total Amt\"\n// ];\n// export const ReportFooterRow = (element) => {\n//     // data.InvoiceServiceItems.forEach(element => {\n//     var a = [[\n//         'first', '121457', '1245445', '83565', '2451422', '54646', '64641'\n//     ], [\n//         '1211', '121457', '1245445', '83565', '2451422', '54646', '64641'\n//     ], [\n//         '1211', '121457', '1245445', '83565', '2451422', '54646', '64641'\n//     ], [\n//         'last', '121457', '1245445', '83565', '2451422', '54646', '64641'\n//     ],\n//     ]\n//     return a\n//     // })\n// }\n// export const ReportFotterColumns2 = [\n//     \"SGST\",\n// ];\n// export const ReportFooterRow2 = (element) => {\n//     var th = ['', 'thousand', 'million', 'billion', 'trillion'];\n//     var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n//     var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n//     var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n//     function toWords(s) {\n//         s = s.toString();\n//         s = s.replace(/[\\, ]/g, '');\n//         if (s != parseFloat(s)) return 'not a number';\n//         var x = s.indexOf('.');\n//         if (x == -1)\n//             x = s.length;\n//         if (x > 15)\n//             return 'too big';\n//         var n = s.split('');\n//         var str = '';\n//         var sk = 0;\n//         for (var i = 0; i < x; i++) {\n//             if ((x - i) % 3 == 2) {\n//                 if (n[i] == '1') {\n//                     str += tn[Number(n[i + 1])] + ' ';\n//                     i++;\n//                     sk = 1;\n//                 } else if (n[i] != 0) {\n//                     str += tw[n[i] - 2] + ' ';\n//                     sk = 1;\n//                 }\n//             } else if (n[i] != 0) { // 0235\n//                 str += dg[n[i]] + ' ';\n//                 if ((x - i) % 3 == 0) str += 'hundred ';\n//                 sk = 1;\n//             }\n//             if ((x - i) % 3 == 1) {\n//                 if (sk)\n//                     str += th[(x - i - 1) / 3] + ' ';\n//                 sk = 0;\n//             }\n//         }\n//         if (x != s.length) {\n//             var y = s.length;\n//             str += 'point ';\n//             for (var i = x + 1; i < y; i++)\n//                 str += dg[n[i]] + ' ';\n//         }\n//         return str.replace(/\\s+/g, ' ');\n//     }\n//     let stringNumber = toWords(67674168.45)\n//     var TableArray = [[`${stringNumber}`\n//     ],\n//     ['I/we hearby certify that food/foods mentioned in this invoice is/are warranted to be of the nature and quantity whitch it/these purports to be '\n//     ],\n//     ['Bank details Â·sdSVvDsdgbvzdfbBzdf'\n//     ],\n//     ['A/C No: 2715500356 IFSC Code:BKID00015422',\n//     ],\n//     ]\n//     return TableArray\n// }\n// export const ReportFotterColumns4 = [\n//     \"SGST\", \"a \"\n// ];\n// export const ReportFooterRow4 = (element) => {\n//     var TableArray = [[`Total.Amt:`, \"67674168.45\"\n//     ],\n//     ['Total GST: ','124855.25'\n//     ],\n//     ['Total CTCS:', '45742.635'\n//     ],\n//     ['Round Off:', '46464.253',\n//     ],\n//     [`Amount:`, `7654214463.53`]\n//     ]\n//     return TableArray\n// }\n// export const columns1 = [\"Total\", \"abc\", \"ayk\", \"Amount \"];\n// export const Rows1 = (data) => {\n//     var a1 = [];\n//     var c = 0;\n//     data.InvoiceServiceItems.forEach(element => {\n//         debugger\n//         if (c < 2) {\n//             c = c + 1;\n//             const ticketData = [\n//                 element.InvoiceID,\n//                 element.Quantity,\n//                 element.Rate,\n//                 element.BasicAmount,\n//                 element.DiscountAmount,\n//                 element.Amount,\n//                 element.CGST,\n//                 element.Value,\n//             ];\n//             a1.push(ticketData);\n//         }\n//     });\n//     return a1;\n// }\n// export const ReportHederRows = (data) => {\n//     var reportArray = [\n//         [`${data.SupplierName}`, ,`${data.CustomerName}`],\n//         [`${data.BillingAddress}`,,  `${data.ShippingAddress}`],\n//         // [`${data.BilByState}`, `${data.BilToState}`,],\n//     ]\n//     return reportArray;\n// }\n// original\nexport const columns = [\"HSNCode Item Name\", \"Quantity\", \"Rate\", \"BasicAmount \", \"CGST %\", \"CGSTAmount\", \"SGST %\", \"SGSTAmount\", \"Total Amt\"];\nexport const PageHedercolumns = [\"Billed by\", \"Billed to\", ''];\nexport const Rows = data => {\n  const {\n    OrderItem = []\n  } = data;\n  const returnArr = [];\n  let item = \"\";\n  let totalBasicAmount = 0;\n  let totalCGst = 0;\n  let totalSGst = 0;\n  let totalAmount = 0;\n  let totalQuantity = 0;\n  OrderItem.forEach((element, key) => {\n    const tableitemRow = [element.ItemName, `${element.Quantity}.${element.UnitName}`, element.Rate, element.BasicAmount, element.CGSTPercentage, element.CGST, element.SGSTPercentage, element.SGST, element.Amount, element.GSTPercentage, element.GSTAmount];\n\n    function totalLots() {\n      totalQuantity = Number(totalQuantity) + Number(element.Quantity);\n      totalCGst = Number(totalCGst) + Number(element.CGST);\n      totalSGst = Number(totalSGst) + Number(element.SGST);\n      totalAmount = Number(totalAmount) + Number(element.Amount); // totalQuantity = Number(totalQuantity) + Number(element.Quantity)\n\n      let cgst = data[\"tableTot\"].TotalCGst; // return ({ TotalCGst: Number(cgst) + Number(totalCGst),})\n\n      return {\n        TotalCGst: parseInt(totalCGst) + parseInt(cgst)\n      };\n    }\n\n    ;\n\n    function totalrow() {\n      return [`Total Quantity:${parseFloat(totalQuantity).toFixed(2)}`, \" \", `BasicAmount:${parseFloat(totalBasicAmount).toFixed(2)}`, \"\", `TotalCGST:${parseFloat(totalCGst).toFixed(2)}`, \"isaddition\", `TotalSGST:${parseFloat(totalSGst).toFixed(2)}`, \"\", `Amount:${parseFloat(totalAmount).toFixed(2)}` // parseFloat(TotalCGst).toFixed(2),\n      // parseFloat(TotalSGst).toFixed(2),\n      ];\n    }\n\n    ;\n\n    if (item === \"\") {\n      item = element.ItemName;\n    }\n\n    ;\n    let aa = {\n      TotalCGst: 0,\n      totalSGst: 0\n    };\n\n    if (data[\"tableTot\"] === undefined) {\n      data[\"tableTot\"] = aa;\n    }\n\n    if (item === element.ItemName) {\n      data[\"tableTot\"] = totalLots();\n      returnArr.push(tableitemRow);\n    } else {\n      returnArr.push(totalrow());\n      returnArr.push(tableitemRow);\n      totalBasicAmount = 0;\n      totalCGst = 0;\n      totalSGst = 0;\n      totalAmount = 0;\n      totalQuantity = 0;\n      data[\"tableTot\"] = totalLots();\n      item = element.ItemName;\n    }\n\n    if (key === OrderItem.length - 1) {\n      returnArr.push(totalrow());\n    }\n  });\n  return returnArr;\n};\n_c = Rows;\nexport const ReportFotterColumns = [\"SGST\", \"CGST\", \"Quantity\", \"GST % \", \"TaxbleAmt.\", \"IGST\", \"Total Amt\"];\nexport const ReportFooterRow = element => {\n  // data.InvoiceServiceItems.forEach(element => {\n  var a = [['first', '121457', '1245445', '83565', '2451422', '54646', '64641'], ['1211', '121457', '1245445', '83565', '2451422', '54646', '64641'], ['1211', '121457', '1245445', '83565', '2451422', '54646', '64641'], ['last', '121457', '1245445', '83565', '2451422', '54646', '64641']];\n  return a; // })\n};\n_c2 = ReportFooterRow;\nexport const ReportFotterColumns2 = [\"SGST\"];\nexport const ReportFooterRow2 = element => {\n  var th = ['', 'thousand', 'million', 'billion', 'trillion'];\n  var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n  var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n  var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\n  function toWords(s) {\n    s = s.toString();\n    s = s.replace(/[\\, ]/g, '');\n    if (s != parseFloat(s)) return 'not a number';\n    var x = s.indexOf('.');\n    if (x == -1) x = s.length;\n    if (x > 15) return 'too big';\n    var n = s.split('');\n    var str = '';\n    var sk = 0;\n\n    for (var i = 0; i < x; i++) {\n      if ((x - i) % 3 == 2) {\n        if (n[i] == '1') {\n          str += tn[Number(n[i + 1])] + ' ';\n          i++;\n          sk = 1;\n        } else if (n[i] != 0) {\n          str += tw[n[i] - 2] + ' ';\n          sk = 1;\n        }\n      } else if (n[i] != 0) {\n        // 0235\n        str += dg[n[i]] + ' ';\n        if ((x - i) % 3 == 0) str += 'hundred ';\n        sk = 1;\n      }\n\n      if ((x - i) % 3 == 1) {\n        if (sk) str += th[(x - i - 1) / 3] + ' ';\n        sk = 0;\n      }\n    }\n\n    if (x != s.length) {\n      var y = s.length;\n      str += 'point ';\n\n      for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';\n    }\n\n    return str.replace(/\\s+/g, ' ');\n  }\n\n  let stringNumber = toWords(67674168.45);\n  var TableArray = [[`${stringNumber}`], ['I/we hearby certify that food/foods mentioned in this invoice is/are warranted to be of the nature and quantity whitch it/these purports to be '], ['Bank details Â·sdSVvDsdgbvzdfbBzdf'], ['A/C No: 2715500356 IFSC Code:BKID00015422']];\n  return TableArray;\n};\n_c3 = ReportFooterRow2;\nexport const ReportFotterColumns4 = [\"SGST\", \"a \"];\nexport const ReportFooterRow4 = element => {\n  var TableArray = [[`Total.Amt:`, \"67674168.45\"], ['Total GST: ', '124855.25'], ['Total CTCS:', '45742.635'], ['Round Off:', '46464.253'], [`Amount:`, `7654214463.53`]];\n  return TableArray;\n};\n_c4 = ReportFooterRow4;\nexport const columns1 = [\"Total\", \"abc\", \"ayk\", \"Amount \"];\nexport const Rows1 = data => {\n  var a1 = [];\n  var c = 0;\n  data.InvoiceItems.forEach(element => {\n    if (c < 2) {\n      c = c + 1;\n      const ticketData = [element.InvoiceID, element.Quantity, element.Rate, element.BasicAmount, element.DiscountAmount, element.Amount, element.CGST, element.Value];\n      a1.push(ticketData);\n    }\n  });\n  return a1;\n};\n_c5 = Rows1;\nexport const ReportHederRows = data => {\n  var reportArray = [[`${data.CustomerName}`, `${data.SupplierName}`, `Driver Name : Sameer`], [`${data.BillingAddress}`, `${data.ShippingAddress}`, ``], [`FSSAI :f23dfxxxxxwe55`, `FSSAI :ui3dfxxxxxwe55`, ``], // [, , \"\"],\n  [, ``]];\n  return reportArray;\n};\n_c6 = ReportHederRows;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Rows\");\n$RefreshReg$(_c2, \"ReportFooterRow\");\n$RefreshReg$(_c3, \"ReportFooterRow2\");\n$RefreshReg$(_c4, \"ReportFooterRow4\");\n$RefreshReg$(_c5, \"Rows1\");\n$RefreshReg$(_c6, \"ReportHederRows\");","map":{"version":3,"names":["columns","PageHedercolumns","Rows","data","OrderItem","returnArr","item","totalBasicAmount","totalCGst","totalSGst","totalAmount","totalQuantity","forEach","element","key","tableitemRow","ItemName","Quantity","UnitName","Rate","BasicAmount","CGSTPercentage","CGST","SGSTPercentage","SGST","Amount","GSTPercentage","GSTAmount","totalLots","Number","cgst","TotalCGst","parseInt","totalrow","parseFloat","toFixed","aa","undefined","push","length","ReportFotterColumns","ReportFooterRow","a","ReportFotterColumns2","ReportFooterRow2","th","dg","tn","tw","toWords","s","toString","replace","x","indexOf","n","split","str","sk","i","y","stringNumber","TableArray","ReportFotterColumns4","ReportFooterRow4","columns1","Rows1","a1","c","InvoiceItems","ticketData","InvoiceID","DiscountAmount","Value","ReportHederRows","reportArray","CustomerName","SupplierName","BillingAddress","ShippingAddress"],"sources":["D:/Rohit/Git projects/Manthan/src/Reports/OrderReport/TableData.js"],"sourcesContent":["\r\n// export const columns = [\r\n \r\n//     \"Item Name\",\r\n//     \"Unit\",\r\n//     \"comments\",\r\n    \r\n// ];\r\n\r\n// export const PageHedercolumns = [\r\n//     \"Billed by\",\r\n//     \"Billed to\",\r\n//     ''\r\n// ]\r\n\r\n// export const tableRows = (data) => {\r\n//     debugger\r\n//     const { OrderItem = [] } = data\r\n//     const datatable = [];\r\n    \r\n//     OrderItem.forEach((element, k) => {\r\n\r\n//         let TableListData = [\r\n//             k,\r\n//            `(${element.HSNCode})${element.ItemName}`,\r\n//             element.Quantity,\r\n//             element.Rate,\r\n//             element.Amount,\r\n//         ];\r\n//         datatable.push(TableListData);\r\n\r\n//     });\r\n//     let tableTotalRowLast = [\r\n//         \"\",\r\n//         \"\",\r\n//         \"\",\r\n//         \"isaddition\",\r\n//         parseFloat(data.OrderAmount).toFixed(2),\r\n//     ];\r\n//     datatable.push(tableTotalRowLast);\r\n//     return datatable;\r\n// }\r\n// export const ReportFotterColumns = [\r\n//     \"SGST\",\r\n//     \"CGST\", \"Quantity\",\r\n//     \"GST % \",\r\n//     \"TaxbleAmt.\", \"IGST\", \"Total Amt\"\r\n// ];\r\n\r\n// export const ReportFooterRow = (element) => {\r\n//     // data.InvoiceServiceItems.forEach(element => {\r\n//     var a = [[\r\n//         'first', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n//     ], [\r\n//         '1211', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n//     ], [\r\n//         '1211', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n//     ], [\r\n//         'last', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n//     ],\r\n//     ]\r\n//     return a\r\n//     // })\r\n// }\r\n// export const ReportFotterColumns2 = [\r\n//     \"SGST\",\r\n// ];\r\n\r\n// export const ReportFooterRow2 = (element) => {\r\n//     var th = ['', 'thousand', 'million', 'billion', 'trillion'];\r\n//     var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\r\n//     var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\r\n//     var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n\r\n//     function toWords(s) {\r\n//         s = s.toString();\r\n//         s = s.replace(/[\\, ]/g, '');\r\n//         if (s != parseFloat(s)) return 'not a number';\r\n//         var x = s.indexOf('.');\r\n//         if (x == -1)\r\n//             x = s.length;\r\n//         if (x > 15)\r\n//             return 'too big';\r\n//         var n = s.split('');\r\n//         var str = '';\r\n//         var sk = 0;\r\n//         for (var i = 0; i < x; i++) {\r\n//             if ((x - i) % 3 == 2) {\r\n//                 if (n[i] == '1') {\r\n//                     str += tn[Number(n[i + 1])] + ' ';\r\n//                     i++;\r\n//                     sk = 1;\r\n//                 } else if (n[i] != 0) {\r\n//                     str += tw[n[i] - 2] + ' ';\r\n//                     sk = 1;\r\n//                 }\r\n//             } else if (n[i] != 0) { // 0235\r\n//                 str += dg[n[i]] + ' ';\r\n//                 if ((x - i) % 3 == 0) str += 'hundred ';\r\n//                 sk = 1;\r\n//             }\r\n//             if ((x - i) % 3 == 1) {\r\n//                 if (sk)\r\n//                     str += th[(x - i - 1) / 3] + ' ';\r\n//                 sk = 0;\r\n//             }\r\n//         }\r\n\r\n//         if (x != s.length) {\r\n//             var y = s.length;\r\n//             str += 'point ';\r\n//             for (var i = x + 1; i < y; i++)\r\n//                 str += dg[n[i]] + ' ';\r\n//         }\r\n//         return str.replace(/\\s+/g, ' ');\r\n//     }\r\n//     let stringNumber = toWords(67674168.45)\r\n//     var TableArray = [[`${stringNumber}`\r\n//     ],\r\n//     ['I/we hearby certify that food/foods mentioned in this invoice is/are warranted to be of the nature and quantity whitch it/these purports to be '\r\n//     ],\r\n//     ['Bank details Â·sdSVvDsdgbvzdfbBzdf'\r\n//     ],\r\n//     ['A/C No: 2715500356 IFSC Code:BKID00015422',\r\n//     ],\r\n//     ]\r\n//     return TableArray\r\n// }\r\n// export const ReportFotterColumns4 = [\r\n//     \"SGST\", \"a \"\r\n// ];\r\n// export const ReportFooterRow4 = (element) => {\r\n\r\n//     var TableArray = [[`Total.Amt:`, \"67674168.45\"\r\n//     ],\r\n//     ['Total GST: ','124855.25'\r\n//     ],\r\n//     ['Total CTCS:', '45742.635'\r\n//     ],\r\n//     ['Round Off:', '46464.253',\r\n//     ],\r\n//     [`Amount:`, `7654214463.53`]\r\n//     ]\r\n//     return TableArray\r\n// }\r\n\r\n// export const columns1 = [\"Total\", \"abc\", \"ayk\", \"Amount \"];\r\n\r\n// export const Rows1 = (data) => {\r\n//     var a1 = [];\r\n//     var c = 0;\r\n//     data.InvoiceServiceItems.forEach(element => {\r\n//         debugger\r\n//         if (c < 2) {\r\n//             c = c + 1;\r\n//             const ticketData = [\r\n//                 element.InvoiceID,\r\n//                 element.Quantity,\r\n//                 element.Rate,\r\n//                 element.BasicAmount,\r\n//                 element.DiscountAmount,\r\n//                 element.Amount,\r\n//                 element.CGST,\r\n//                 element.Value,\r\n//             ];\r\n//             a1.push(ticketData);\r\n//         }\r\n//     });\r\n//     return a1;\r\n// }\r\n// export const ReportHederRows = (data) => {\r\n//     var reportArray = [\r\n//         [`${data.SupplierName}`, ,`${data.CustomerName}`],\r\n//         [`${data.BillingAddress}`,,  `${data.ShippingAddress}`],\r\n//         // [`${data.BilByState}`, `${data.BilToState}`,],\r\n//     ]\r\n//     return reportArray;\r\n// }\r\n\r\n\r\n// original\r\n\r\n\r\n\r\nexport const columns = [\r\n    \"HSNCode Item Name\",\r\n    \"Quantity\",\r\n    \"Rate\",\r\n    \"BasicAmount \",\r\n    \"CGST %\",\r\n    \"CGSTAmount\",\r\n    \"SGST %\",\r\n    \"SGSTAmount\",\r\n    \"Total Amt\"];\r\n\r\nexport const PageHedercolumns = [\r\n    \"Billed by\",\r\n    \"Billed to\",\r\n    ''\r\n]\r\n\r\nexport const Rows = (data) => {\r\n\r\n\r\n    const { OrderItem = [] } = data\r\n    const returnArr = [];\r\n    let item = \"\"\r\n\r\n    let totalBasicAmount = 0\r\n    let totalCGst = 0\r\n    let totalSGst = 0\r\n    let totalAmount = 0\r\n    let totalQuantity = 0\r\n\r\n    OrderItem.forEach((element, key) => {\r\n      \r\n        const tableitemRow = [\r\n            element.ItemName,\r\n            `${element.Quantity}.${element.UnitName}`,\r\n            element.Rate,\r\n            element.BasicAmount,\r\n            element.CGSTPercentage,\r\n            element.CGST,\r\n            element.SGSTPercentage,\r\n            element.SGST,\r\n            element.Amount,\r\n            element.GSTPercentage,\r\n            element.GSTAmount,\r\n        ];\r\n\r\n        function totalLots() {\r\n            totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n            totalCGst = Number(totalCGst) + Number(element.CGST)\r\n            totalSGst = Number(totalSGst) + Number(element.SGST)\r\n            totalAmount = Number(totalAmount) + Number( element.Amount)\r\n            // totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n            let cgst = data[\"tableTot\"].TotalCGst\r\n\r\n            // return ({ TotalCGst: Number(cgst) + Number(totalCGst),})\r\n            return ({ TotalCGst: parseInt(totalCGst) + parseInt(cgst),})\r\n\r\n        };\r\n\r\n        function totalrow() {\r\n            return [\r\n                `Total Quantity:${parseFloat(totalQuantity).toFixed(2)}`,\r\n                \" \",\r\n                `BasicAmount:${parseFloat(totalBasicAmount).toFixed(2)}`,\r\n                \"\",\r\n                `TotalCGST:${parseFloat(totalCGst).toFixed(2)}`,\r\n                \"isaddition\",\r\n                `TotalSGST:${parseFloat(totalSGst).toFixed(2)}`,\r\n                \"\",\r\n                `Amount:${parseFloat(totalAmount).toFixed(2)}`,\r\n                // parseFloat(TotalCGst).toFixed(2),\r\n                // parseFloat(TotalSGst).toFixed(2),\r\n            ];\r\n        };\r\n\r\n\r\n        if (item === \"\") { item = element.ItemName };\r\n        let aa = { TotalCGst: 0, totalSGst: 0 }\r\n        if (data[\"tableTot\"] === undefined) { data[\"tableTot\"] = aa }\r\n        if ((item === element.ItemName)) {\r\n            data[\"tableTot\"] = totalLots()\r\n            returnArr.push(tableitemRow);\r\n        }\r\n        else {\r\n            returnArr.push(totalrow());\r\n            returnArr.push(tableitemRow);\r\n            totalBasicAmount = 0\r\n            totalCGst = 0\r\n            totalSGst = 0\r\n            totalAmount = 0\r\n            totalQuantity = 0\r\n\r\n            data[\"tableTot\"] = totalLots()\r\n            item = element.ItemName;\r\n        }\r\n        if (key === OrderItem.length - 1) {\r\n            returnArr.push(totalrow());\r\n        }\r\n    })\r\n    return returnArr;\r\n}\r\nexport const ReportFotterColumns = [\r\n    \"SGST\",\r\n    \"CGST\", \"Quantity\",\r\n    \"GST % \",\r\n    \"TaxbleAmt.\", \"IGST\", \"Total Amt\"\r\n];\r\n\r\nexport const ReportFooterRow = (element) => {\r\n    // data.InvoiceServiceItems.forEach(element => {\r\n    var a = [[\r\n        'first', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n    ], [\r\n        '1211', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n    ], [\r\n        '1211', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n    ], [\r\n        'last', '121457', '1245445', '83565', '2451422', '54646', '64641'\r\n    ],\r\n    ]\r\n    return a\r\n    // })\r\n}\r\nexport const ReportFotterColumns2 = [\r\n    \"SGST\",\r\n];\r\n\r\nexport const ReportFooterRow2 = (element) => {\r\n    var th = ['', 'thousand', 'million', 'billion', 'trillion'];\r\n    var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\r\n    var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\r\n    var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n\r\n    function toWords(s) {\r\n        s = s.toString();\r\n        s = s.replace(/[\\, ]/g, '');\r\n        if (s != parseFloat(s)) return 'not a number';\r\n        var x = s.indexOf('.');\r\n        if (x == -1)\r\n            x = s.length;\r\n        if (x > 15)\r\n            return 'too big';\r\n        var n = s.split('');\r\n        var str = '';\r\n        var sk = 0;\r\n        for (var i = 0; i < x; i++) {\r\n            if ((x - i) % 3 == 2) {\r\n                if (n[i] == '1') {\r\n                    str += tn[Number(n[i + 1])] + ' ';\r\n                    i++;\r\n                    sk = 1;\r\n                } else if (n[i] != 0) {\r\n                    str += tw[n[i] - 2] + ' ';\r\n                    sk = 1;\r\n                }\r\n            } else if (n[i] != 0) { // 0235\r\n                str += dg[n[i]] + ' ';\r\n                if ((x - i) % 3 == 0) str += 'hundred ';\r\n                sk = 1;\r\n            }\r\n            if ((x - i) % 3 == 1) {\r\n                if (sk)\r\n                    str += th[(x - i - 1) / 3] + ' ';\r\n                sk = 0;\r\n            }\r\n        }\r\n        if (x != s.length) {\r\n            var y = s.length;\r\n            str += 'point ';\r\n            for (var i = x + 1; i < y; i++)\r\n                str += dg[n[i]] + ' ';\r\n        }\r\n        return str.replace(/\\s+/g, ' ');\r\n    }\r\n    let stringNumber = toWords(67674168.45)\r\n    var TableArray = [[`${stringNumber}`\r\n    ],\r\n    ['I/we hearby certify that food/foods mentioned in this invoice is/are warranted to be of the nature and quantity whitch it/these purports to be '\r\n    ],\r\n    ['Bank details Â·sdSVvDsdgbvzdfbBzdf'\r\n    ],\r\n    ['A/C No: 2715500356 IFSC Code:BKID00015422',\r\n    ],\r\n    ]\r\n    return TableArray\r\n}\r\nexport const ReportFotterColumns4 = [\r\n    \"SGST\", \"a \"\r\n];\r\nexport const ReportFooterRow4 = (element) => {\r\n\r\n    var TableArray = [[`Total.Amt:`, \"67674168.45\"\r\n    ],\r\n    ['Total GST: ', '124855.25'\r\n    ],\r\n    ['Total CTCS:', '45742.635'\r\n    ],\r\n    ['Round Off:', '46464.253',\r\n    ],\r\n    [`Amount:`, `7654214463.53`]\r\n    ]\r\n    return TableArray\r\n}\r\nexport const columns1 = [\"Total\", \"abc\", \"ayk\", \"Amount \"];\r\nexport const Rows1 = (data) => {\r\n    var a1 = [];\r\n    var c = 0;\r\n    data.InvoiceItems.forEach(element => {\r\n        if (c < 2) {\r\n            c = c + 1;\r\n            const ticketData = [\r\n                element.InvoiceID,\r\n                element.Quantity,\r\n                element.Rate,\r\n                element.BasicAmount,\r\n                element.DiscountAmount,\r\n                element.Amount,\r\n                element.CGST,\r\n                element.Value,\r\n            ];\r\n            a1.push(ticketData);\r\n        }\r\n    });\r\n    return a1;\r\n}\r\nexport const ReportHederRows = (data) => {\r\n    var reportArray = [\r\n        [`${data.CustomerName}`, `${data.SupplierName}`,`Driver Name : Sameer`],\r\n        [`${data.BillingAddress}`, `${data.ShippingAddress}` , ``,],\r\n        [`FSSAI :f23dfxxxxxwe55`, `FSSAI :ui3dfxxxxxwe55`, ``],\r\n        // [, , \"\"],\r\n        [,`` , ],\r\n    ]\r\n    return reportArray;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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"},"metadata":{},"sourceType":"module"}