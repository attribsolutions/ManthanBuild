{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { delete_ProductionIdSuccess, edit_ProductionIdSuccess, getProductionistPageSuccess, getProduction_Mode2_Success, getUnitIDForProdunctionSuccess, Save_ProductionSuccess, update_ProductionIdSuccess } from \"./actions\";\nimport { Production_Delete_API, production_Edit_API, production_get_API, production_Make_API, Production_Post_API, production_UnitDropdown_API } from \"../../../helpers/backend_helper\";\nimport { DELETE_PRODUCTION_ID, GET_PRODUCTION_ITEM_MODE_2, GET_PRODUCTION_LIST_PAGE, POST_PRODUCTION_FROM_PRODUCTION_PAGE, GET_UNIT_ID_FOR_PRODUNCTION, UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE, EDIT_PRODUCTION_FOR_PRODUCTION_PAGE } from \"./actionType\";\nimport { CommonConsole, date_dmy_func, convertTimefunc } from \"../../../components/Common/CommonFunction\";\n\nfunction* SaveProductionGenFunc(_ref) {\n  let {\n    config\n  } = _ref;\n\n  try {\n    const response = yield call(Production_Post_API, config);\n    yield put(Save_ProductionSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c = SaveProductionGenFunc;\n\nfunction* DeleteProductionGenFunc(_ref2) {\n  let {\n    config\n  } = _ref2;\n\n  try {\n    const response = yield call(Production_Delete_API, config);\n    yield put(delete_ProductionIdSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c2 = DeleteProductionGenFunc;\n\nfunction* UpdateProductionGenFunc(_ref3) {\n  let {\n    config\n  } = _ref3;\n\n  try {\n    const response = yield call(config);\n    yield put(update_ProductionIdSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n} // List Page API\n\n\n_c3 = UpdateProductionGenFunc;\n\nfunction* get_PRODUCTION_GerFunc(_ref4) {\n  let {\n    filters\n  } = _ref4;\n\n  try {\n    const response = yield call(production_get_API, filters);\n    const newList = response.Data.map(index => {\n      // index.Item = index.Item;\n      var date = date_dmy_func(index.ProductionDate);\n      var batchdate = date_dmy_func(index.BatchDate);\n      var time = convertTimefunc(index.CreatedOn); // var batchtime = convertTimefunc(index.CreatedOn)\n\n      index.ProductionDate = `${date} ${time}`;\n      index.BatchDate = `${batchdate} `;\n      return index;\n    });\n    yield put(getProductionistPageSuccess(newList));\n  } catch (error) {\n    CommonConsole(error);\n  }\n} // List Page API\n\n\nfunction* getProduction_Mode2_GenFunc(_ref5) {\n  let {\n    data\n  } = _ref5;\n  const {\n    jsonBody,\n    pageMode,\n    path\n  } = data;\n\n  try {\n    const response = yield call(production_Make_API, jsonBody);\n    response.Data = response.Data[0];\n    response[\"pageMode\"] = pageMode;\n    response[\"path\"] = path; //Pagepath\n\n    yield put(getProduction_Mode2_Success(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n} // Edit Production  Page API\n\n\nfunction* editProduction_GenFunc(_ref6) {\n  let {\n    config\n  } = _ref6;\n  const {\n    btnmode\n  } = config;\n\n  try {\n    const response = yield call(production_Edit_API, config);\n    response.pageMode = btnmode;\n    yield put(edit_ProductionIdSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n; //  DesignationID dropdown list\n\nfunction* UnitIDForProduction_saga(_ref7) {\n  let {\n    data\n  } = _ref7;\n\n  try {\n    const response = yield call(production_UnitDropdown_API, data);\n    const UnitDropdown = response.Data.map(index => ({\n      value: index.id,\n      label: index.UnitName\n    }));\n    yield put(getUnitIDForProdunctionSuccess(UnitDropdown));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c4 = UnitIDForProduction_saga;\n\nfunction* ProductionSaga() {\n  yield takeLatest(GET_PRODUCTION_ITEM_MODE_2, getProduction_Mode2_GenFunc);\n  yield takeLatest(EDIT_PRODUCTION_FOR_PRODUCTION_PAGE, editProduction_GenFunc);\n  yield takeLatest(POST_PRODUCTION_FROM_PRODUCTION_PAGE, SaveProductionGenFunc);\n  yield takeLatest(UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE, UpdateProductionGenFunc);\n  yield takeLatest(DELETE_PRODUCTION_ID, DeleteProductionGenFunc);\n  yield takeLatest(GET_PRODUCTION_LIST_PAGE, get_PRODUCTION_GerFunc);\n  yield takeLatest(GET_UNIT_ID_FOR_PRODUNCTION, UnitIDForProduction_saga);\n}\n\n_c5 = ProductionSaga;\nexport default ProductionSaga;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SaveProductionGenFunc\");\n$RefreshReg$(_c2, \"DeleteProductionGenFunc\");\n$RefreshReg$(_c3, \"UpdateProductionGenFunc\");\n$RefreshReg$(_c4, \"UnitIDForProduction_saga\");\n$RefreshReg$(_c5, \"ProductionSaga\");","map":{"version":3,"names":["call","put","takeLatest","delete_ProductionIdSuccess","edit_ProductionIdSuccess","getProductionistPageSuccess","getProduction_Mode2_Success","getUnitIDForProdunctionSuccess","Save_ProductionSuccess","update_ProductionIdSuccess","Production_Delete_API","production_Edit_API","production_get_API","production_Make_API","Production_Post_API","production_UnitDropdown_API","DELETE_PRODUCTION_ID","GET_PRODUCTION_ITEM_MODE_2","GET_PRODUCTION_LIST_PAGE","POST_PRODUCTION_FROM_PRODUCTION_PAGE","GET_UNIT_ID_FOR_PRODUNCTION","UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE","EDIT_PRODUCTION_FOR_PRODUCTION_PAGE","CommonConsole","date_dmy_func","convertTimefunc","SaveProductionGenFunc","config","response","error","DeleteProductionGenFunc","UpdateProductionGenFunc","get_PRODUCTION_GerFunc","filters","newList","Data","map","index","date","ProductionDate","batchdate","BatchDate","time","CreatedOn","getProduction_Mode2_GenFunc","data","jsonBody","pageMode","path","editProduction_GenFunc","btnmode","UnitIDForProduction_saga","UnitDropdown","value","id","label","UnitName","ProductionSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Production/ProductionRedux/saga.js"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  delete_ProductionIdSuccess,\r\n  edit_ProductionIdSuccess,\r\n  getProductionistPageSuccess,\r\n  getProduction_Mode2_Success,\r\n  getUnitIDForProdunctionSuccess,\r\n  Save_ProductionSuccess,\r\n  update_ProductionIdSuccess,\r\n} from \"./actions\";\r\nimport {\r\n  Production_Delete_API,\r\n  production_Edit_API,\r\n  production_get_API,\r\n  production_Make_API,\r\n  Production_Post_API,\r\n  production_UnitDropdown_API,\r\n} from \"../../../helpers/backend_helper\";\r\n\r\nimport {\r\n  DELETE_PRODUCTION_ID,\r\n  GET_PRODUCTION_ITEM_MODE_2,\r\n  GET_PRODUCTION_LIST_PAGE,\r\n  POST_PRODUCTION_FROM_PRODUCTION_PAGE,\r\n  GET_UNIT_ID_FOR_PRODUNCTION,\r\n  UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE,\r\n  EDIT_PRODUCTION_FOR_PRODUCTION_PAGE,\r\n} from \"./actionType\";\r\n\r\nimport { CommonConsole, date_dmy_func, convertTimefunc } from \"../../../components/Common/CommonFunction\";\r\n\r\nfunction* SaveProductionGenFunc({ config }) {\r\n  try {\r\n    const response = yield call(Production_Post_API, config);\r\n    yield put(Save_ProductionSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* DeleteProductionGenFunc({ config }) {\r\n  try {\r\n    const response = yield call(Production_Delete_API, config);\r\n    yield put(delete_ProductionIdSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* UpdateProductionGenFunc({ config}) {\r\n  try {\r\n    const response = yield call(config);\r\n    yield put(update_ProductionIdSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\n// List Page API\r\nfunction* get_PRODUCTION_GerFunc({ filters }) {\r\n  \r\n  try {\r\n    const response = yield call(production_get_API, filters);\r\n    const newList = response.Data.map((index) => {\r\n      // index.Item = index.Item;\r\n      \r\n      var date = date_dmy_func(index.ProductionDate)\r\n      var batchdate = date_dmy_func(index.BatchDate)\r\n      var time = convertTimefunc(index.CreatedOn)\r\n      // var batchtime = convertTimefunc(index.CreatedOn)\r\n      index.ProductionDate = (`${date} ${time}`)\r\n      index.BatchDate = (`${batchdate} `)\r\n      return index;\r\n    });\r\n    yield put(getProductionistPageSuccess(newList));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\n// List Page API\r\nfunction* getProduction_Mode2_GenFunc({ data }) {\r\n  const { jsonBody, pageMode, path } = data;\r\n  try {\r\n    const response = yield call(production_Make_API, jsonBody);\r\n    response.Data = response.Data[0];\r\n    response[\"pageMode\"] = pageMode;\r\n    response[\"path\"] = path; //Pagepath\r\n    yield put(getProduction_Mode2_Success(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\n// Edit Production  Page API\r\nfunction* editProduction_GenFunc({ config }) {\r\n  const { btnmode } = config;\r\n  try {\r\n    const response = yield call(production_Edit_API, config);\r\n    response.pageMode = btnmode;\r\n    yield put(edit_ProductionIdSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n};\r\n\r\n//  DesignationID dropdown list\r\nfunction* UnitIDForProduction_saga({ data }) {\r\n  try {\r\n    const response = yield call(production_UnitDropdown_API, data);\r\n    const UnitDropdown = response.Data.map((index) => ({\r\n      value: index.id,\r\n      label: index.UnitName,\r\n    }));\r\n    yield put(getUnitIDForProdunctionSuccess(UnitDropdown));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* ProductionSaga() {\r\n  yield takeLatest(GET_PRODUCTION_ITEM_MODE_2, getProduction_Mode2_GenFunc);\r\n  yield takeLatest(EDIT_PRODUCTION_FOR_PRODUCTION_PAGE, editProduction_GenFunc);\r\n  yield takeLatest(POST_PRODUCTION_FROM_PRODUCTION_PAGE, SaveProductionGenFunc);\r\n  yield takeLatest(UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE, UpdateProductionGenFunc);\r\n  yield takeLatest(DELETE_PRODUCTION_ID, DeleteProductionGenFunc);\r\n  yield takeLatest(GET_PRODUCTION_LIST_PAGE, get_PRODUCTION_GerFunc);\r\n  yield takeLatest(GET_UNIT_ID_FOR_PRODUNCTION, UnitIDForProduction_saga);\r\n}\r\nexport default ProductionSaga;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}