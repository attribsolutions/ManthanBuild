{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Production\\\\Production\\\\ProductionList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Flatpickr from \"react-flatpickr\";\nimport { BreadcrumbShowCountlabel, commonPageFieldList, commonPageFieldListSuccess } from \"../../../store/actions\";\nimport PurchaseListPage from \"../../../components/Common/ComponentRelatedCommonFile/purchase\";\nimport { Button, Col, FormGroup, Label } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { currentDate, userParty } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { updateWorkOrderListSuccess } from \"../../../store/Production/WorkOrder/action\";\nimport { delete_ProductionId, delete_ProductionIdSuccess, edit_ProductionId, getProductionListPage, Productionlistfilters } from \"../../../store/Production/ProductionRedux/actions\";\nimport { MetaTags } from \"react-meta-tags\";\nimport * as report from '../../../Reports/ReportIndex';\nimport * as pageId from \"../../../routes/allPageID\";\nimport * as mode from \"../../../routes/PageMode\";\nimport * as url from \"../../../routes/route_url\";\nimport { getpdfReportdata } from \"../../../store/Utilites/PdfReport/actions\";\nimport { production_Edit_API } from \"../../../helpers/backend_helper\";\nimport ProductionMaster from \"./ProductionMaster\";\nimport { makeBtnProduction_ReIssue_STP_action, makeBtnProduction_ReIssue_STP_actionSuccess } from \"../../../store/Production/ProductionReissueRedux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductionList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [subPageMode, setSubPageMode] = useState(history.location.pathname);\n  const [pageMode, setPageMode] = useState(mode.defaultList);\n  const [otherState, setOtherState] = useState({\n    masterPath: '',\n    makeBtnShow: false,\n    newBtnPath: ''\n  });\n  const [userAccState, setUserAccState] = useState('');\n  const reducers = useSelector(state => ({\n    tableList: state.ProductionReducer.ProductionList,\n    deleteMsg: state.ProductionReducer.deleteMsg,\n    updateMsg: state.WorkOrderReducer.updateMsg,\n    postMsg: state.OrderReducer.postMsg,\n    editData: state.ProductionReducer.editData,\n    productionFilter: state.ProductionReducer.productionFilter,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageFieldList,\n    makeProductionReIssue: state.ProductionReIssueReducer.makeProductionReIssue\n  }));\n  const action = {\n    // getList: ,\n    editId: edit_ProductionId,\n    deleteId: delete_ProductionId,\n    postSucc: postMessage,\n    updateSucc: updateWorkOrderListSuccess,\n    deleteSucc: delete_ProductionIdSuccess\n  }; // Featch Modules List data  First Rendering\n\n  useEffect(() => {\n    let page_Id = '';\n    let page_Mode = mode.defaultList;\n    let masterPath = '';\n    let newBtnPath = '';\n    let makeBtnShow = false;\n\n    if (subPageMode === url.PRODUCTION_LIST) {\n      page_Id = pageId.PRODUCTION_LIST;\n      masterPath = url.PRODUCTION_MASTER;\n      newBtnPath = url.PRODUCTION_STP;\n    } else if (subPageMode === url.PRODUCTION_REISSUE_STP) {\n      page_Id = pageId.PRODUCTION_REISSUE_STP;\n      page_Mode = mode.modeSTPsave;\n      makeBtnShow = true;\n    }\n\n    ; // dispatch(getOrderListPage(\"\"))//for clear privious order list\n\n    setOtherState({\n      masterPath,\n      makeBtnShow,\n      newBtnPath\n    });\n    setPageMode(page_Mode);\n    dispatch(commonPageFieldListSuccess(null));\n    dispatch(commonPageFieldList(page_Id));\n    dispatch(BreadcrumbShowCountlabel(`${\"Production Count\"} :0`));\n    goButtonHandler(true);\n  }, []);\n  const {\n    userAccess,\n    pageField,\n    productionFilter,\n    makeProductionReIssue\n  } = reducers;\n  const {\n    fromdate,\n    todate\n  } = productionFilter;\n  useEffect(() => {\n    let userAcc = userAccess.find(inx => {\n      return inx.id === pageId.PRODUCTION_LIST;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserAccState(userAcc);\n    }\n  }, [userAccess]);\n  useEffect(() => {\n    if (makeProductionReIssue.Status === true && makeProductionReIssue.StatusCode === 200) {\n      history.push({\n        pathname: makeProductionReIssue.path,\n        page_Mode: makeProductionReIssue.pageMode\n      });\n    }\n  }, [makeProductionReIssue]);\n\n  function downBtnFunc(row) {\n    var ReportType = report.Stock; //Stock\n\n    dispatch(getpdfReportdata(production_Edit_API, ReportType, row.id));\n  }\n\n  const goButtonHandler = function () {\n    let onload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let FromDate;\n    let ToDate;\n\n    if (onload) {\n      FromDate = currentDate;\n      ToDate = currentDate;\n    } else {\n      ToDate = todate;\n      FromDate = fromdate;\n    }\n\n    const jsonBody = JSON.stringify({\n      FromDate: FromDate,\n      ToDate: ToDate\n    });\n    dispatch(getProductionListPage(jsonBody));\n  };\n\n  function fromdateOnchange(e, date) {\n    let newObj = { ...productionFilter\n    };\n    newObj.fromdate = date;\n    dispatch(Productionlistfilters(newObj));\n  }\n\n  function todateOnchange(e, date) {\n    let newObj = { ...productionFilter\n    };\n    newObj.todate = date;\n    dispatch(Productionlistfilters(newObj));\n  }\n\n  const makeBtnFunc = function () {\n    let list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    debugger;\n\n    try {\n      const jsonBody = JSON.stringify({\n        \"ProductionID\": list[0].id,\n        \"PartyID\": userParty()\n      });\n      const body = {\n        jsonBody,\n        pageMode,\n        path: url.PRODUCTION_REISSUE,\n        productionId: list[0].id\n      };\n      dispatch(makeBtnProduction_ReIssue_STP_action(body));\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userAccess.PageHeading, \"| FoodERP-React FrontEnd\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-2  c_card_header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"5\",\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \" row mt-3 \",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"col-sm-5 p-2\",\n                style: {\n                  width: \"83px\"\n                },\n                children: \"From Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                  name: \"fromdate\",\n                  className: \"form-control d-block p-2 bg-white text-dark\",\n                  placeholder: \"Select...\",\n                  options: {\n                    altInput: true,\n                    altFormat: \"d-m-Y\",\n                    dateFormat: \"Y-m-d\",\n                    defaultDate: \"today\"\n                  },\n                  onChange: fromdateOnchange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"5\",\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \" mb-1 row mt-3 \",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"col-sm-1 p-2\",\n                style: {\n                  width: \"65px\",\n                  marginRight: \"0.4cm\"\n                },\n                children: \"To Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6 \",\n                children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                  name: \"todate\",\n                  className: \"form-control d-block p-2 bg-white text-dark\",\n                  placeholder: \"Select...\",\n                  options: {\n                    altInput: true,\n                    altFormat: \"d-m-Y\",\n                    dateFormat: \"Y-m-d\",\n                    defaultDate: \"today\"\n                  },\n                  onChange: todateOnchange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"1\",\n            className: \"mx-4 \",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"btn btn-outline-success border-2 font-size-12 m-3  \",\n              onClick: () => goButtonHandler(),\n              children: \"Go\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), pageField ? /*#__PURE__*/_jsxDEV(PurchaseListPage, {\n        action: action,\n        reducers: reducers,\n        showBreadcrumb: false,\n        masterPath: otherState.masterPath,\n        newBtnPath: otherState.newBtnPath,\n        makeBtnShow: otherState.makeBtnShow,\n        pageMode: pageMode,\n        goButnFunc: goButtonHandler,\n        downBtnFunc: downBtnFunc,\n        makeBtnFunc: makeBtnFunc,\n        makeBtnName: \"make ReIssue\",\n        ButtonMsgLable: \"Production\",\n        deleteName: \"ItemName\",\n        MasterModal: ProductionMaster\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductionList, \"l5FrJvEbw5wahRrv5SSB0+yuUoM=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ProductionList;\nexport default ProductionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductionList\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Flatpickr","BreadcrumbShowCountlabel","commonPageFieldList","commonPageFieldListSuccess","PurchaseListPage","Button","Col","FormGroup","Label","useHistory","currentDate","userParty","updateWorkOrderListSuccess","delete_ProductionId","delete_ProductionIdSuccess","edit_ProductionId","getProductionListPage","Productionlistfilters","MetaTags","report","pageId","mode","url","getpdfReportdata","production_Edit_API","ProductionMaster","makeBtnProduction_ReIssue_STP_action","makeBtnProduction_ReIssue_STP_actionSuccess","ProductionList","dispatch","history","subPageMode","setSubPageMode","location","pathname","pageMode","setPageMode","defaultList","otherState","setOtherState","masterPath","makeBtnShow","newBtnPath","userAccState","setUserAccState","reducers","state","tableList","ProductionReducer","deleteMsg","updateMsg","WorkOrderReducer","postMsg","OrderReducer","editData","productionFilter","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","pageFieldList","makeProductionReIssue","ProductionReIssueReducer","action","editId","deleteId","postSucc","postMessage","updateSucc","deleteSucc","page_Id","page_Mode","PRODUCTION_LIST","PRODUCTION_MASTER","PRODUCTION_STP","PRODUCTION_REISSUE_STP","modeSTPsave","goButtonHandler","fromdate","todate","userAcc","find","inx","id","undefined","Status","StatusCode","push","path","downBtnFunc","row","ReportType","Stock","onload","FromDate","ToDate","jsonBody","JSON","stringify","fromdateOnchange","e","date","newObj","todateOnchange","makeBtnFunc","list","body","PRODUCTION_REISSUE","productionId","PageHeading","width","altInput","altFormat","dateFormat","defaultDate","marginRight"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Production/Production/ProductionList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { BreadcrumbShowCountlabel, commonPageFieldList, commonPageFieldListSuccess, } from \"../../../store/actions\";\r\nimport PurchaseListPage from \"../../../components/Common/ComponentRelatedCommonFile/purchase\"\r\nimport { Button, Col, FormGroup, Label } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { currentDate,  userParty } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport {\r\n    updateWorkOrderListSuccess\r\n} from \"../../../store/Production/WorkOrder/action\";\r\nimport {\r\n    delete_ProductionId,\r\n    delete_ProductionIdSuccess,\r\n    edit_ProductionId,\r\n    getProductionListPage,\r\n    Productionlistfilters\r\n} from \"../../../store/Production/ProductionRedux/actions\"\r\n\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport * as report from '../../../Reports/ReportIndex'\r\n\r\nimport * as pageId from \"../../../routes/allPageID\"\r\nimport * as mode from \"../../../routes/PageMode\"\r\nimport * as url from \"../../../routes/route_url\"\r\n\r\nimport { getpdfReportdata } from \"../../../store/Utilites/PdfReport/actions\";\r\nimport { production_Edit_API } from \"../../../helpers/backend_helper\";\r\nimport ProductionMaster from \"./ProductionMaster\";\r\nimport { makeBtnProduction_ReIssue_STP_action, makeBtnProduction_ReIssue_STP_actionSuccess } from \"../../../store/Production/ProductionReissueRedux/actions\";\r\n\r\nconst ProductionList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [subPageMode, setSubPageMode] = useState(history.location.pathname);\r\n    const [pageMode, setPageMode] = useState(mode.defaultList);\r\n    const [otherState, setOtherState] = useState({ masterPath: '', makeBtnShow: false ,newBtnPath:''});\r\n\r\n    const [userAccState, setUserAccState] = useState('');\r\n    const reducers = useSelector(\r\n        (state) => ({\r\n            tableList: state.ProductionReducer.ProductionList,\r\n            deleteMsg: state.ProductionReducer.deleteMsg,\r\n            updateMsg: state.WorkOrderReducer.updateMsg,\r\n            postMsg: state.OrderReducer.postMsg,\r\n            editData: state.ProductionReducer.editData,\r\n            productionFilter: state.ProductionReducer.productionFilter,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageFieldList,\r\n            makeProductionReIssue: state.ProductionReIssueReducer.makeProductionReIssue,\r\n\r\n        })\r\n    );\r\n\r\n    const action = {\r\n        // getList: ,\r\n        editId: edit_ProductionId,\r\n        deleteId: delete_ProductionId,\r\n        postSucc: postMessage,\r\n        updateSucc: updateWorkOrderListSuccess,\r\n        deleteSucc: delete_ProductionIdSuccess\r\n    }\r\n\r\n    // Featch Modules List data  First Rendering\r\n    useEffect(() => {\r\n\r\n        let page_Id = '';\r\n        let page_Mode = mode.defaultList;\r\n        let masterPath = '';\r\n        let newBtnPath = '';\r\n        let makeBtnShow = false;\r\n        \r\n        if (subPageMode === url.PRODUCTION_LIST) {\r\n            page_Id = pageId.PRODUCTION_LIST;\r\n            masterPath = url.PRODUCTION_MASTER;\r\n            newBtnPath=url.PRODUCTION_STP;\r\n        }\r\n\r\n        else if (subPageMode === url.PRODUCTION_REISSUE_STP) {\r\n            page_Id = pageId.PRODUCTION_REISSUE_STP\r\n            page_Mode = mode.modeSTPsave\r\n            makeBtnShow = true;\r\n        };\r\n        // dispatch(getOrderListPage(\"\"))//for clear privious order list\r\n        setOtherState({ masterPath, makeBtnShow,newBtnPath })\r\n        setPageMode(page_Mode)\r\n        dispatch(commonPageFieldListSuccess(null))\r\n        dispatch(commonPageFieldList(page_Id))\r\n        dispatch(BreadcrumbShowCountlabel(`${\"Production Count\"} :0`))\r\n        goButtonHandler(true)\r\n    }, []);\r\n\r\n    const { userAccess, pageField, productionFilter, makeProductionReIssue } = reducers;\r\n    const { fromdate, todate } = productionFilter\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let userAcc = userAccess.find((inx) => {\r\n            return (inx.id === pageId.PRODUCTION_LIST)\r\n        })\r\n        if (!(userAcc === undefined)) {\r\n            setUserAccState(userAcc)\r\n        }\r\n    }, [userAccess])\r\n\r\n    useEffect(() => {\r\n        if (makeProductionReIssue.Status === true && makeProductionReIssue.StatusCode === 200) {\r\n            history.push({\r\n                pathname: makeProductionReIssue.path,\r\n                page_Mode: makeProductionReIssue.pageMode,\r\n            })\r\n        }\r\n    }, [makeProductionReIssue])\r\n\r\n    function downBtnFunc(row) {\r\n        var ReportType = report.Stock;   //Stock\r\n        dispatch(getpdfReportdata(production_Edit_API, ReportType, row.id))\r\n    }\r\n\r\n\r\n    const goButtonHandler = (onload = false) => {\r\n        let FromDate\r\n        let ToDate\r\n        if (onload) {\r\n            FromDate = currentDate;\r\n            ToDate = currentDate;\r\n        } else {\r\n            ToDate = todate;\r\n            FromDate = fromdate;\r\n        }\r\n        const jsonBody = JSON.stringify({\r\n            FromDate: FromDate,\r\n            ToDate: ToDate,\r\n        });\r\n\r\n        dispatch(getProductionListPage(jsonBody));\r\n    }\r\n\r\n    function fromdateOnchange(e, date) {\r\n        let newObj = { ...productionFilter }\r\n        newObj.fromdate = date\r\n        dispatch(Productionlistfilters(newObj))\r\n    }\r\n\r\n    function todateOnchange(e, date) {\r\n        let newObj = { ...productionFilter }\r\n        newObj.todate = date\r\n        dispatch(Productionlistfilters(newObj))\r\n    }\r\n\r\n    const makeBtnFunc = (list = []) => {\r\n        debugger\r\n        try {\r\n            const jsonBody = JSON.stringify({\r\n                \"ProductionID\": list[0].id,\r\n                \"PartyID\": userParty()\r\n            })\r\n            const body = { jsonBody, pageMode, path: url.PRODUCTION_REISSUE, productionId: list[0].id }\r\n            dispatch(makeBtnProduction_ReIssue_STP_action(body))\r\n\r\n        } catch (e) { }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MetaTags> <title>{userAccess.PageHeading}| FoodERP-React FrontEnd</title></MetaTags>\r\n\r\n            <div className=\"page-content\">\r\n\r\n                <div className=\"px-2  c_card_header\"  >\r\n                    <div className=\"row\" >\r\n                        <Col sm=\"5\" >\r\n                            <FormGroup className=\" row mt-3 \" >\r\n                                <Label className=\"col-sm-5 p-2\"\r\n                                    style={{ width: \"83px\" }}>From Date</Label>\r\n                                <Col sm=\"6\">\r\n                                    <Flatpickr\r\n                                        name='fromdate'\r\n                                        className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                        placeholder=\"Select...\"\r\n                                        options={{\r\n                                            altInput: true,\r\n                                            altFormat: \"d-m-Y\",\r\n                                            dateFormat: \"Y-m-d\",\r\n                                            defaultDate: \"today\"\r\n                                        }}\r\n                                        onChange={fromdateOnchange}\r\n                                    />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"5\">\r\n                            <FormGroup className=\" mb-1 row mt-3 \" >\r\n                                <Label className=\"col-sm-1 p-2\"\r\n                                    style={{ width: \"65px\", marginRight: \"0.4cm\" }}>To Date</Label>\r\n                                <Col sm=\"6 \">\r\n                                    <Flatpickr\r\n                                        name=\"todate\"\r\n                                        className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                        placeholder=\"Select...\"\r\n                                        options={{\r\n                                            altInput: true,\r\n                                            altFormat: \"d-m-Y\",\r\n                                            dateFormat: \"Y-m-d\",\r\n                                            defaultDate: \"today\"\r\n                                        }}\r\n                                        onChange={todateOnchange}\r\n                                    />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"1\" className=\"mx-4 \">\r\n                            <Button type=\"button\" color=\"btn btn-outline-success border-2 font-size-12 m-3  \"\r\n                                onClick={() => goButtonHandler()}\r\n                            >Go</Button>\r\n                        </Col>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    (pageField) ?\r\n                        <PurchaseListPage\r\n                            action={action}\r\n                            reducers={reducers}\r\n                            showBreadcrumb={false}\r\n                            masterPath={otherState.masterPath}\r\n                            newBtnPath={otherState.newBtnPath}\r\n                            makeBtnShow={otherState.makeBtnShow}\r\n                            pageMode={pageMode}\r\n                            goButnFunc={goButtonHandler}\r\n                            downBtnFunc={downBtnFunc}\r\n                            makeBtnFunc={makeBtnFunc}\r\n\r\n                            makeBtnName={\"make ReIssue\"}\r\n                            ButtonMsgLable={\"Production\"}\r\n                            deleteName={\"ItemName\"}\r\n                            MasterModal={ProductionMaster}\r\n\r\n                        />\r\n                        : null\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default ProductionList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}