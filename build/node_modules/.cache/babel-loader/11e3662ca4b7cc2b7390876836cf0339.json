{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Accounting\\\\Receipt\\\\ReceiptList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Flatpickr from \"react-flatpickr\";\nimport { BreadcrumbShowCountlabel, commonPageFieldList, commonPageFieldListSuccess } from \"../../../store/actions\";\nimport Select from \"react-select\";\nimport CommonPurchaseList from \"../../../components/Common/CommonPurchaseList\";\nimport { Button, Col, FormGroup, Label } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { currentDate, excelDownCommonFunc, loginCompanyID, loginPartyID } from \"../../../components/Common/CommonFunction\";\nimport { useMemo } from \"react\";\nimport Receipts from \"./Receipts\";\nimport { deleteBOMId, deleteBOMIdSuccess, editBOMList, updateBOMListSuccess } from \"../../../store/Production/BOMRedux/action\";\nimport * as pageId from \"../../../routes//allPageID\";\nimport * as url from \"../../../routes/route_url\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { ReceiptListAPI, ReceiptTypeAPI } from \"../../../store/Accounting/Receipt/action\";\nimport { initialFiledFunc, onChangeSelect } from \"../../../components/Common/validationFunction\";\nimport { Retailer_List } from \"../../../store/CommonAPI/SupplierRedux/actions\";\nimport { Go_Button } from \"../../../components/Common/CommonButton\";\nimport * as mode from \"../../../routes/PageMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReceiptList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const fileds = {\n    FromDate: currentDate,\n    ToDate: currentDate,\n    Customer: {\n      value: \"\",\n      label: \"All\"\n    }\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const hasPagePath = history.location.pathname;\n  const [pageMode, setpageMode] = useState(mode.defaultList);\n  const [userAccState, setUserAccState] = useState('');\n  const reducers = useSelector(state => ({\n    tableList: state.ReceiptReducer.ReceiptList,\n    deleteMsg: state.BOMReducer.deleteMsg,\n    updateMsg: state.BOMReducer.updateMsg,\n    postMsg: state.OrderReducer.postMsg,\n    RetailerList: state.CommonAPI_Reducer.RetailerList,\n    ReceiptType: state.ReceiptReducer.ReceiptType,\n    editData: state.BOMReducer.editData,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageFieldList\n  }));\n  const {\n    userAccess,\n    pageField,\n    RetailerList,\n    ReceiptType\n  } = reducers;\n  const action = {\n    getList: ReceiptListAPI,\n    editId: editBOMList,\n    deleteId: deleteBOMId,\n    postSucc: postMessage,\n    updateSucc: updateBOMListSuccess,\n    deleteSucc: deleteBOMIdSuccess\n  }; // Receipt Type API Values **** only Post Json Body\n\n  useEffect(() => {\n    const jsonBody = JSON.stringify({\n      Company: loginCompanyID(),\n      TypeID: 3\n    });\n    dispatch(ReceiptTypeAPI(jsonBody));\n  }, []);\n  const ReceiptTypeID = ReceiptType.filter(index => {\n    return index.Name === \"Receipt\";\n  }); // Featch Modules List data  First Rendering\n\n  useEffect(() => {\n    const page_Id = pageId.RECEIPTS_LIST;\n    setpageMode(hasPagePath);\n    dispatch(commonPageFieldListSuccess(null));\n    dispatch(commonPageFieldList(page_Id));\n    dispatch(BreadcrumbShowCountlabel(`${\"Receipt Count\"} :0`));\n    goButtonHandler(true);\n  }, []);\n  const values = { ...state.values\n  };\n  useEffect(() => {\n    const page_Id = pageId.RECEIPTS_LIST;\n    let userAcc = userAccess.find(inx => {\n      return inx.id === page_Id;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserAccState(userAcc);\n    }\n  }, [userAccess]);\n  const customerOptions = RetailerList.map(index => ({\n    value: index.id,\n    label: index.Name\n  }));\n  useEffect(() => {\n    const jsonBody = JSON.stringify({\n      Type: 4,\n      PartyID: loginPartyID(),\n      CompanyID: loginCompanyID()\n    });\n    dispatch(Retailer_List(jsonBody));\n  }, []);\n\n  const goButtonHandler = async => {\n    const jsonBody = JSON.stringify({\n      FromDate: values.FromDate,\n      ToDate: values.ToDate,\n      CustomerID: values.Customer.value,\n      PartyID: loginPartyID(),\n      ReceiptType: 29\n    });\n    dispatch(ReceiptListAPI(jsonBody));\n  };\n\n  function fromdateOnchange(e, date) {\n    setState(i => {\n      const a = { ...i\n      };\n      a.values.FromDate = date;\n      a.hasValid.FromDate.valid = true;\n      return a;\n    });\n  }\n\n  function todateOnchange(e, date) {\n    setState(i => {\n      const a = { ...i\n      };\n      a.values.ToDate = date;\n      a.hasValid.ToDate.valid = true;\n      return a;\n    });\n  }\n\n  useEffect(() => {\n    const jsonBody = JSON.stringify({\n      Type: 4,\n      PartyID: loginPartyID(),\n      CompanyID: loginCompanyID()\n    });\n    dispatch(Retailer_List(jsonBody));\n  }, []);\n\n  function CustomerOnChange(e) {\n    setState(i => {\n      const a = { ...i\n      };\n      a.values.Customer = e;\n      a.hasValid.Customer.valid = true;\n      return a;\n    });\n  }\n\n  const HeaderContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-2   c_card_filter text-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"3\",\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb- row mt-3 \",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-sm-5 p-2\",\n              style: {\n                width: \"83px\"\n              },\n              children: \"FromDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: \"7\",\n              children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                name: \"FromDate\",\n                value: values.FromDate,\n                className: \"form-control d-block p-2 bg-white text-dark\",\n                placeholder: \"Select...\",\n                options: {\n                  altInput: true,\n                  altFormat: \"d-m-Y\",\n                  dateFormat: \"Y-m-d\"\n                },\n                onChange: fromdateOnchange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"3\",\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb- row mt-3 \",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-sm-5 p-2\",\n              style: {\n                width: \"65px\"\n              },\n              children: \"ToDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: \"7\",\n              children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                name: \"ToDate\",\n                value: values.ToDate,\n                className: \"form-control d-block p-2 bg-white text-dark\",\n                placeholder: \"Select...\",\n                options: {\n                  altInput: true,\n                  altFormat: \"d-m-Y\",\n                  dateFormat: \"Y-m-d\"\n                },\n                onChange: todateOnchange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"5\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-2 row mt-3 \",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"col-md-4 p-2\",\n              style: {\n                width: \"115px\"\n              },\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: \"5\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                name: \"Customer\",\n                classNamePrefix: \"select2-Customer\",\n                value: values.Customer,\n                options: customerOptions,\n                onChange: CustomerOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"1\",\n          className: \"mt-3 \",\n          children: /*#__PURE__*/_jsxDEV(Go_Button, {\n            onClick: goButtonHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userAccess.PageHeading, \"| FoodERP-React FrontEnd\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: pageField ? /*#__PURE__*/_jsxDEV(CommonPurchaseList, {\n        action: action,\n        reducers: reducers,\n        showBreadcrumb: false,\n        MasterModal: Receipts,\n        masterPath: url.RECEIPTS,\n        newBtnPath: url.RECEIPTS,\n        pageMode: pageMode,\n        HeaderContent: HeaderContent,\n        goButnFunc: goButtonHandler,\n        ButtonMsgLable: \"Receipt\",\n        deleteName: \"FullReceiptNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReceiptList, \"ytyZfxuWdUPwVESU7hX49j07Jsc=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ReceiptList;\nexport default ReceiptList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReceiptList\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Flatpickr","BreadcrumbShowCountlabel","commonPageFieldList","commonPageFieldListSuccess","Select","CommonPurchaseList","Button","Col","FormGroup","Label","useHistory","currentDate","excelDownCommonFunc","loginCompanyID","loginPartyID","useMemo","Receipts","deleteBOMId","deleteBOMIdSuccess","editBOMList","updateBOMListSuccess","pageId","url","MetaTags","ReceiptListAPI","ReceiptTypeAPI","initialFiledFunc","onChangeSelect","Retailer_List","Go_Button","mode","ReceiptList","dispatch","history","fileds","FromDate","ToDate","Customer","value","label","state","setState","hasPagePath","location","pathname","pageMode","setpageMode","defaultList","userAccState","setUserAccState","reducers","tableList","ReceiptReducer","deleteMsg","BOMReducer","updateMsg","postMsg","OrderReducer","RetailerList","CommonAPI_Reducer","ReceiptType","editData","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","pageFieldList","action","getList","editId","deleteId","postSucc","postMessage","updateSucc","deleteSucc","jsonBody","JSON","stringify","Company","TypeID","ReceiptTypeID","filter","index","Name","page_Id","RECEIPTS_LIST","goButtonHandler","values","userAcc","find","inx","id","undefined","customerOptions","map","Type","PartyID","CompanyID","async","CustomerID","fromdateOnchange","e","date","i","a","hasValid","valid","todateOnchange","CustomerOnChange","HeaderContent","width","altInput","altFormat","dateFormat","PageHeading","RECEIPTS"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Accounting/Receipt/ReceiptList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport {\r\n    BreadcrumbShowCountlabel,\r\n    commonPageFieldList,\r\n    commonPageFieldListSuccess\r\n} from \"../../../store/actions\";\r\nimport Select from \"react-select\";\r\nimport CommonPurchaseList from \"../../../components/Common/CommonPurchaseList\"\r\nimport { Button, Col, FormGroup, Label } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { currentDate, excelDownCommonFunc, loginCompanyID, loginPartyID } from \"../../../components/Common/CommonFunction\";\r\nimport { useMemo } from \"react\";\r\nimport Receipts from \"./Receipts\";\r\nimport {\r\n    deleteBOMId,\r\n    deleteBOMIdSuccess,\r\n    editBOMList,\r\n    updateBOMListSuccess\r\n} from \"../../../store/Production/BOMRedux/action\";\r\nimport * as pageId from \"../../../routes//allPageID\";\r\nimport * as url from \"../../../routes/route_url\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport {\r\n    ReceiptListAPI, ReceiptTypeAPI,\r\n} from \"../../../store/Accounting/Receipt/action\";\r\nimport { initialFiledFunc, onChangeSelect } from \"../../../components/Common/validationFunction\";\r\nimport { Retailer_List } from \"../../../store/CommonAPI/SupplierRedux/actions\";\r\nimport { Go_Button } from \"../../../components/Common/CommonButton\";\r\nimport * as mode from \"../../../routes/PageMode\"\r\n\r\nconst ReceiptList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const fileds = {\r\n        FromDate: currentDate,\r\n        ToDate: currentDate,\r\n        Customer: { value: \"\", label: \"All\" }\r\n    }\r\n\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n    const hasPagePath = history.location.pathname\r\n\r\n    const [pageMode, setpageMode] = useState(mode.defaultList)\r\n    const [userAccState, setUserAccState] = useState('');\r\n\r\n    const reducers = useSelector(\r\n        (state) => ({\r\n            tableList: state.ReceiptReducer.ReceiptList,\r\n            deleteMsg: state.BOMReducer.deleteMsg,\r\n            updateMsg: state.BOMReducer.updateMsg,\r\n            postMsg: state.OrderReducer.postMsg,\r\n            RetailerList: state.CommonAPI_Reducer.RetailerList,\r\n            ReceiptType: state.ReceiptReducer.ReceiptType,\r\n            editData: state.BOMReducer.editData,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageFieldList\r\n        })\r\n    );\r\n\r\n    const { userAccess, pageField, RetailerList, ReceiptType } = reducers;\r\n\r\n    const action = {\r\n        getList: ReceiptListAPI,\r\n        editId: editBOMList,\r\n        deleteId: deleteBOMId,\r\n        postSucc: postMessage,\r\n        updateSucc: updateBOMListSuccess,\r\n        deleteSucc: deleteBOMIdSuccess\r\n    }\r\n\r\n    // Receipt Type API Values **** only Post Json Body\r\n    useEffect(() => {\r\n        const jsonBody = JSON.stringify({\r\n            Company: loginCompanyID(),\r\n            TypeID: 3\r\n        });\r\n        dispatch(ReceiptTypeAPI(jsonBody));\r\n\r\n    }, []);\r\n\r\n    const ReceiptTypeID = ReceiptType.filter((index) => {\r\n        return index.Name === \"Receipt\"\r\n    })\r\n\r\n    // Featch Modules List data  First Rendering\r\n    useEffect(() => {\r\n        const page_Id = pageId.RECEIPTS_LIST\r\n        setpageMode(hasPagePath)\r\n        dispatch(commonPageFieldListSuccess(null))\r\n        dispatch(commonPageFieldList(page_Id))\r\n        dispatch(BreadcrumbShowCountlabel(`${\"Receipt Count\"} :0`))\r\n        goButtonHandler(true)\r\n    }, []);\r\n\r\n    const values = { ...state.values }\r\n\r\n    useEffect(() => {\r\n        const page_Id = pageId.RECEIPTS_LIST\r\n        let userAcc = userAccess.find((inx) => {\r\n            return (inx.id === page_Id)\r\n        })\r\n        if (!(userAcc === undefined)) {\r\n            setUserAccState(userAcc)\r\n        }\r\n    }, [userAccess])\r\n\r\n    const customerOptions = RetailerList.map((index) => ({\r\n        value: index.id,\r\n        label: index.Name,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const jsonBody = JSON.stringify({\r\n            Type: 4,\r\n            PartyID: loginPartyID(),\r\n            CompanyID: loginCompanyID()\r\n        });\r\n        dispatch(Retailer_List(jsonBody));\r\n    }, []);\r\n\r\n    const goButtonHandler = (async) => {\r\n\r\n        const jsonBody = JSON.stringify({\r\n            FromDate: values.FromDate,\r\n            ToDate: values.ToDate,\r\n            CustomerID: values.Customer.value,\r\n            PartyID: loginPartyID(),\r\n            ReceiptType: 29,\r\n        });\r\n        dispatch(ReceiptListAPI(jsonBody));\r\n    }\r\n\r\n    function fromdateOnchange(e, date) {\r\n        setState((i) => {\r\n            const a = { ...i }\r\n            a.values.FromDate = date;\r\n            a.hasValid.FromDate.valid = true\r\n            return a\r\n        })\r\n    }\r\n\r\n    function todateOnchange(e, date) {\r\n        setState((i) => {\r\n            const a = { ...i }\r\n            a.values.ToDate = date;\r\n            a.hasValid.ToDate.valid = true\r\n            return a\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const jsonBody = JSON.stringify({\r\n            Type: 4,\r\n            PartyID: loginPartyID(),\r\n            CompanyID: loginCompanyID()\r\n        });\r\n        dispatch(Retailer_List(jsonBody));\r\n    }, []);\r\n\r\n    function CustomerOnChange(e) {\r\n\r\n        setState((i) => {\r\n            const a = { ...i }\r\n            a.values.Customer = e;\r\n            a.hasValid.Customer.valid = true\r\n            return a\r\n        })\r\n\r\n    }\r\n\r\n    const HeaderContent = () => {\r\n        return (\r\n            <div className=\"px-2   c_card_filter text-black\" >\r\n                <div className=\"row\" >\r\n                    <Col sm=\"3\" className=\"\">\r\n                        <FormGroup className=\"mb- row mt-3 \" >\r\n                            <Label className=\"col-sm-5 p-2\"\r\n                                style={{ width: \"83px\" }}>FromDate</Label>\r\n                            <Col sm=\"7\">\r\n                                <Flatpickr\r\n                                    name='FromDate'\r\n                                    value={values.FromDate}\r\n                                    className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                    placeholder=\"Select...\"\r\n                                    options={{\r\n                                        altInput: true,\r\n                                        altFormat: \"d-m-Y\",\r\n                                        dateFormat: \"Y-m-d\",\r\n                                    }}\r\n                                    onChange={fromdateOnchange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col sm=\"3\" className=\"\">\r\n                        <FormGroup className=\"mb- row mt-3 \" >\r\n                            <Label className=\"col-sm-5 p-2\"\r\n                                style={{ width: \"65px\" }}>ToDate</Label>\r\n                            <Col sm=\"7\">\r\n                                <Flatpickr\r\n                                    name=\"ToDate\"\r\n                                    value={values.ToDate}\r\n                                    className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                    placeholder=\"Select...\"\r\n                                    options={{\r\n                                        altInput: true,\r\n                                        altFormat: \"d-m-Y\",\r\n                                        dateFormat: \"Y-m-d\",\r\n                                    }}\r\n                                    onChange={todateOnchange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col sm=\"5\">\r\n                        <FormGroup className=\"mb-2 row mt-3 \" >\r\n                            <Label className=\"col-md-4 p-2\"\r\n                                style={{ width: \"115px\" }}>Customer</Label>\r\n                            <Col sm=\"5\">\r\n                                <Select\r\n                                    name=\"Customer\"\r\n                                    classNamePrefix=\"select2-Customer\"\r\n                                    value={values.Customer}\r\n                                    options={customerOptions}\r\n                                    onChange={CustomerOnChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Col >\r\n\r\n                    <Col sm=\"1\" className=\"mt-3 \">\r\n                        <Go_Button onClick={goButtonHandler} />\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MetaTags> <title>{userAccess.PageHeading}| FoodERP-React FrontEnd</title></MetaTags>\r\n            <div className=\"page-content\">\r\n                {\r\n                    (pageField) ?\r\n                        <CommonPurchaseList\r\n                            action={action}\r\n                            reducers={reducers}\r\n                            showBreadcrumb={false}\r\n                            MasterModal={Receipts}\r\n                            masterPath={url.RECEIPTS}\r\n                            newBtnPath={url.RECEIPTS}\r\n                            pageMode={pageMode}\r\n                            HeaderContent={HeaderContent}\r\n                            goButnFunc={goButtonHandler}\r\n                            ButtonMsgLable={\"Receipt\"}\r\n                            deleteName={\"FullReceiptNumber\"}\r\n\r\n                        />\r\n                        : null\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ReceiptList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}