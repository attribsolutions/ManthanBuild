{"ast":null,"code":"import { invoice } from \"../ReportIndex\";\nexport const columns = [\"HSN Item Name\", \"Quantity\", \"MRP\", \"Rate\", \"Taxable Amt\", \"CGST \", \"CGST Amt\", \"SGST \", \"SGST Amt\", \"Total Amt\"];\nexport const columns1 = [\"HSN Item Name\", \"Quantity\", \"Rate\", \"Basic Amt\", \"CGST %\", \"CGST Amt\", \"SGST %\", \"SGST Amt\", \"Debit note\", \"Credit note\", \"Total Amt\"]; // export const PageHedercolumns = [\n//     \"Billed by\",\n//     \"Billed to\",\n//     ''\n// ]\n\nexport const BilledBy = [\"Billed by\"];\nexport const BilledTo = [\"Billed by\"];\nexport const DetailsOfTransport = [\"Billed by\"];\nexport const Rows = data => {\n  const {\n    InvoiceItems = []\n  } = data;\n  InvoiceItems.sort((firstItem, secondItem) => firstItem.GSTPercentage - secondItem.GSTPercentage);\n  const returnArr = [];\n  let Gst = 0;\n  let totalBasicAmount = 0;\n  let totalCGst = 0;\n  let totalSGst = 0;\n  let totalAmount = 0;\n  let totalQuantity = 0;\n  InvoiceItems.forEach((element, key) => {\n    const tableitemRow = [`(${element.HSNCode})${element.ItemName}`, `${Number(element.Quantity).toFixed(2)}${element.UnitName}`, element.MRPValue, element.Rate, element.BasicAmount, `${element.CGSTPercentage}%`, element.CGST, `${element.SGSTPercentage}%`, element.SGST, element.Amount];\n\n    function totalLots() {\n      totalQuantity = Number(totalQuantity) + Number(element.Quantity);\n      totalCGst = Number(totalCGst) + Number(element.CGST);\n      totalSGst = Number(totalSGst) + Number(element.SGST);\n      totalAmount = Number(totalAmount) + Number(element.Amount);\n      totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount);\n      let cgst = data[\"tableTot\"].TotalCGst;\n      return {\n        TotalCGst: parseInt(totalCGst) + parseInt(cgst)\n      };\n    }\n\n    ;\n\n    function totalrow() {\n      return [`Total Quantity:${parseFloat(totalQuantity).toFixed(2)}${element.UnitName}`, \" \", \"\", `TaxableAmt:${parseFloat(totalBasicAmount).toFixed(2)}`, \"\", `CGSTAmt:${parseFloat(totalCGst).toFixed(2)}`, \"isaddition\", `SGSTAmt:${parseFloat(totalSGst).toFixed(2)}`, \"\", `Amt:${parseFloat(totalAmount).toFixed(2)}`];\n    }\n\n    ;\n\n    if (Gst === 0) {\n      Gst = element.GSTPercentage;\n    }\n\n    ;\n    let aa = {\n      TotalCGst: 0,\n      totalSGst: 0\n    };\n\n    if (data[\"tableTot\"] === undefined) {\n      data[\"tableTot\"] = aa;\n    }\n\n    if (Gst === element.GSTPercentage) {\n      data[\"tableTot\"] = totalLots();\n      returnArr.push(tableitemRow);\n    } else {\n      returnArr.push(totalrow());\n      returnArr.push(tableitemRow);\n      totalBasicAmount = 0;\n      totalCGst = 0;\n      totalSGst = 0;\n      totalAmount = 0;\n      totalQuantity = 0;\n      data[\"tableTot\"] = totalLots();\n      Gst = element.GSTPercentage;\n    }\n\n    if (key === InvoiceItems.length - 1) {\n      returnArr.push(totalrow());\n    }\n  });\n  return returnArr;\n};\n_c = Rows;\nexport const BilledByRow = data => {\n  var BilledByArray = [[`${data.PartyName}`], [`${data.PartyAddress}`], [`${data.PartyState}`], [`GSTIN:${data.PartyGSTIN}`], [`FSSAINo:${data.PartyFSSAINo}`]];\n  return BilledByArray;\n};\n_c2 = BilledByRow;\nexport const BilledToRow = data => {\n  var BilledToArray = [[`${data.CustomerName}`], [`${data.CustomerAddress}`], [`${data.CustomerState}`], [`GSTIN:${data.CustomerGSTIN}`], [`FSSAINo:${data.CustomerFSSAINo}`]];\n  return BilledToArray;\n};\n_c3 = BilledToRow;\nexport const DetailsOfTransportRow = data => {\n  let result = data.InvoicesReferences.map(a => a.FullOrderNumber);\n  const PONumber = result.toString();\n  var DetailsOfTransportArray = [[data.ReportType === invoice ? ` PO Number:${PONumber}` : `Driver Name :${data.DriverName}`], [`vehical No :${data.VehicleNo === null ? \"\" : data.VehicleNo}`], [`E-way Bill :`], [`IRN NO :${data.FullInvoiceNumber}`]];\n  return DetailsOfTransportArray;\n}; // export const ReportHederRows = (data) => {\n//     var reportArray = [\n//         [, ,data.ReportType===invoice?`Purches Order No: 1`:'Driver Name : Sameer'],\n//         [`${data.PartyName}`, `${data.CustomerName}`,data.ReportType===invoice?`Driver Name : Sameer`:`vehical No :MH34566` ,],\n//         [`maharashtra`, `karnatak`,data.ReportType===invoice?`vehical No :MH34566`:`E-way Bill :24654364633` ],\n//         [`FSSAI :f23dfxxxxxwe55`, `FSSAI :ui3dfxxxxxwe55`, data.ReportType===invoice?`E-way Bill :24654364633`:`INR NO :${data.FullInvoiceNumber}`, ],\n//         [,,  data.ReportType===invoice?`INR NO :${data.FullInvoiceNumber}`:null]\n//     ]\n//     return reportArray;\n// }\n\n_c4 = DetailsOfTransportRow;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Rows\");\n$RefreshReg$(_c2, \"BilledByRow\");\n$RefreshReg$(_c3, \"BilledToRow\");\n$RefreshReg$(_c4, \"DetailsOfTransportRow\");","map":{"version":3,"names":["invoice","columns","columns1","BilledBy","BilledTo","DetailsOfTransport","Rows","data","InvoiceItems","sort","firstItem","secondItem","GSTPercentage","returnArr","Gst","totalBasicAmount","totalCGst","totalSGst","totalAmount","totalQuantity","forEach","element","key","tableitemRow","HSNCode","ItemName","Number","Quantity","toFixed","UnitName","MRPValue","Rate","BasicAmount","CGSTPercentage","CGST","SGSTPercentage","SGST","Amount","totalLots","cgst","TotalCGst","parseInt","totalrow","parseFloat","aa","undefined","push","length","BilledByRow","BilledByArray","PartyName","PartyAddress","PartyState","PartyGSTIN","PartyFSSAINo","BilledToRow","BilledToArray","CustomerName","CustomerAddress","CustomerState","CustomerGSTIN","CustomerFSSAINo","DetailsOfTransportRow","result","InvoicesReferences","map","a","FullOrderNumber","PONumber","toString","DetailsOfTransportArray","ReportType","DriverName","VehicleNo","FullInvoiceNumber"],"sources":["D:/Rohit/Git projects/Manthan/src/Reports/InvioceReport/TableData.js"],"sourcesContent":["import { invoice } from \"../ReportIndex\";\r\n\r\nexport const columns =[\r\n    \"HSN Item Name\",\r\n    \"Quantity\",\r\n    \"MRP\",\r\n    \"Rate\",\r\n    \"Taxable Amt\",\r\n    \"CGST \",\r\n    \"CGST Amt\",\r\n    \"SGST \",\r\n    \"SGST Amt\",\r\n    \"Total Amt\" ,\r\n\r\n];\r\n\r\nexport const columns1 =[\r\n    \"HSN Item Name\",\r\n    \"Quantity\",\r\n    \"Rate\",\r\n    \"Basic Amt\",\r\n    \"CGST %\",\r\n    \"CGST Amt\",\r\n    \"SGST %\",\r\n    \"SGST Amt\",\r\n    \"Debit note\",\r\n    \"Credit note\",\r\n    \"Total Amt\" \r\n];\r\n\r\n\r\n\r\n// export const PageHedercolumns = [\r\n//     \"Billed by\",\r\n//     \"Billed to\",\r\n//     ''\r\n// ]\r\nexport const BilledBy = [\r\n    \"Billed by\",  \r\n]\r\nexport const BilledTo = [\r\n    \"Billed by\",\r\n]\r\nexport const DetailsOfTransport = [\r\n    \"Billed by\",\r\n]\r\n\r\nexport const Rows = (data) => {\r\n    const { InvoiceItems = [] } = data\r\n    InvoiceItems.sort((firstItem, secondItem) => firstItem.GSTPercentage - secondItem.GSTPercentage);\r\n    const returnArr = [];\r\n    let Gst = 0\r\n    let totalBasicAmount = 0\r\n    let totalCGst = 0\r\n    let totalSGst = 0\r\n    let totalAmount = 0\r\n    let totalQuantity = 0\r\n\r\n    InvoiceItems.forEach((element, key) => {\r\n      \r\n        const tableitemRow = [\r\n            `(${element.HSNCode})${element.ItemName}`,\r\n            `${Number(element.Quantity).toFixed(2)}${element.UnitName}`,\r\n            element.MRPValue,\r\n            element.Rate,\r\n            element.BasicAmount,\r\n            `${element.CGSTPercentage}%`,\r\n            element.CGST,\r\n            `${element.SGSTPercentage}%`,\r\n            element.SGST,\r\n            element.Amount,\r\n\r\n            \r\n           \r\n        ];\r\n\r\n        function totalLots() {\r\n            totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n            totalCGst = Number(totalCGst) + Number(element.CGST)\r\n            totalSGst = Number(totalSGst) + Number(element.SGST)\r\n            totalAmount = Number(totalAmount) + Number( element.Amount)\r\n            totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount)\r\n            let cgst = data[\"tableTot\"].TotalCGst\r\n            return ({ TotalCGst: parseInt(totalCGst) + parseInt(cgst)})\r\n        };\r\n\r\n        function totalrow() {\r\n            return [\r\n                `Total Quantity:${parseFloat(totalQuantity).toFixed(2)}${element.UnitName}`,\r\n                \" \",\r\n                \"\",\r\n                `TaxableAmt:${parseFloat(totalBasicAmount).toFixed(2)}`,\r\n                \"\",\r\n                `CGSTAmt:${parseFloat(totalCGst).toFixed(2)}`,\r\n                \"isaddition\",\r\n                `SGSTAmt:${parseFloat(totalSGst).toFixed(2)}`,\r\n                \"\",\r\n                `Amt:${parseFloat(totalAmount).toFixed(2)}`,\r\n            ];\r\n        };\r\n\r\n\r\n        if (Gst === 0) { Gst = element.GSTPercentage };\r\n        let aa = { TotalCGst: 0, totalSGst: 0 }\r\n        if (data[\"tableTot\"] === undefined) { data[\"tableTot\"] = aa }\r\n        if ((Gst === element.GSTPercentage)) {\r\n            data[\"tableTot\"] = totalLots()\r\n            returnArr.push(tableitemRow);\r\n        }\r\n        else {\r\n            returnArr.push(totalrow());\r\n            returnArr.push(tableitemRow);\r\n            totalBasicAmount = 0\r\n            totalCGst = 0\r\n            totalSGst = 0\r\n            totalAmount = 0\r\n            totalQuantity = 0\r\n\r\n            data[\"tableTot\"] = totalLots()\r\n            Gst = element.GSTPercentage;\r\n        }\r\n        if (key === InvoiceItems.length - 1) {\r\n            returnArr.push(totalrow());\r\n        }\r\n    })\r\n    return returnArr;\r\n}\r\n\r\n\r\n\r\nexport const BilledByRow = (data) => {\r\n    \r\n    \r\n    var BilledByArray = [\r\n       \r\n        [`${data.PartyName}`], \r\n        [`${data.PartyAddress}`]  ,\r\n        [`${data.PartyState}`],\r\n        [`GSTIN:${data.PartyGSTIN}`],\r\n        [`FSSAINo:${data.PartyFSSAINo}`],\r\n    ]\r\n    return BilledByArray;\r\n} \r\nexport const BilledToRow = (data) => {\r\n    \r\n    \r\n    var BilledToArray = [\r\n        [`${data.CustomerName}`],\r\n        [`${data.CustomerAddress}`]  ,\r\n        [`${data.CustomerState}`],\r\n        [`GSTIN:${data.CustomerGSTIN}`,],\r\n        [`FSSAINo:${data.CustomerFSSAINo}`],\r\n    ]\r\n  \r\n    return BilledToArray;\r\n}\r\nexport const DetailsOfTransportRow = (data) => {\r\n\r\n\r\nlet result = data.InvoicesReferences.map(a => a.FullOrderNumber);\r\n    const PONumber =result.toString()\r\n    var DetailsOfTransportArray = [\r\n        [data.ReportType===invoice?` PO Number:${PONumber}`:`Driver Name :${data.DriverName}`],\r\n        [`vehical No :${data.VehicleNo === null ?\"\":data.VehicleNo}`],\r\n        [`E-way Bill :`],\r\n        [`IRN NO :${data.FullInvoiceNumber}`]\r\n    ]\r\n  \r\n    return DetailsOfTransportArray;\r\n}\r\n\r\n\r\n\r\n// export const ReportHederRows = (data) => {\r\n   \r\n//     var reportArray = [\r\n//         [, ,data.ReportType===invoice?`Purches Order No: 1`:'Driver Name : Sameer'],\r\n//         [`${data.PartyName}`, `${data.CustomerName}`,data.ReportType===invoice?`Driver Name : Sameer`:`vehical No :MH34566` ,],\r\n//         [`maharashtra`, `karnatak`,data.ReportType===invoice?`vehical No :MH34566`:`E-way Bill :24654364633` ],\r\n//         [`FSSAI :f23dfxxxxxwe55`, `FSSAI :ui3dfxxxxxwe55`, data.ReportType===invoice?`E-way Bill :24654364633`:`INR NO :${data.FullInvoiceNumber}`, ],\r\n//         [,,  data.ReportType===invoice?`INR NO :${data.FullInvoiceNumber}`:null]\r\n//     ]\r\n//     return reportArray;\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}