{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { saveCompanyGroupMasterSuccess, getCompanyGroupListSuccess, deleteCompanyGroupIDSuccess, editCompanyGroupSuccess, updateCompanyGroupIDSuccess } from \"./action\";\nimport { CompanyGroup_Get_API, CompanyGroup_Post_API, CompanyGroup_Delete_API, CompanyGroup_edit_API, CompanyGroup_update_API } from \"../../../helpers/backend_helper\";\nimport { SAVE_COMPANY_GROUP_MASTER, GET_COMPANY_GROUP_LIST, DELETE_COMPANY_GROUP_ID, EDIT_COMPANY_GROUP_ID, UPDATE_COMPANY_GROUP_ID } from \"./actionType\";\nimport { CommonConsole } from \"../../../components/Common/ComponentRelatedCommonFile/CommonFunction\";\n\nfunction* Get_CompanyGroup_GenratorFunction() {\n  //get API\n  try {\n    const response = yield call(CompanyGroup_Get_API);\n    yield put(getCompanyGroupListSuccess(response.Data));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c = Get_CompanyGroup_GenratorFunction;\n\nfunction* Post_Method_For_CompanyGroup_GenFun(_ref) {\n  let {\n    config\n  } = _ref;\n\n  //Post API\n  try {\n    const response = yield call(CompanyGroup_Post_API, config);\n    yield put(saveCompanyGroupMasterSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c2 = Post_Method_For_CompanyGroup_GenFun;\n\nfunction* Edit_CompanyGroupType_ID_GenratorFunction(_ref2) {\n  let {\n    config\n  } = _ref2;\n  // Edit API\n  const {\n    btnmode\n  } = config;\n\n  try {\n    const response = yield call(CompanyGroup_edit_API, config);\n    response.pageMode = btnmode;\n    yield put(editCompanyGroupSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c3 = Edit_CompanyGroupType_ID_GenratorFunction;\n\nfunction* Update_CompanyGroupType_ID_GenratorFunction(_ref3) {\n  let {\n    config\n  } = _ref3;\n\n  // Update API\n  try {\n    const response = yield call(CompanyGroup_update_API, config);\n    yield put(updateCompanyGroupIDSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c4 = Update_CompanyGroupType_ID_GenratorFunction;\n\nfunction* Delete_CompanyGroupType_ID_GenratorFunction(_ref4) {\n  let {\n    config\n  } = _ref4;\n\n  //Delete API\n  try {\n    const response = yield call(CompanyGroup_Delete_API, config);\n    yield put(deleteCompanyGroupIDSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c5 = Delete_CompanyGroupType_ID_GenratorFunction;\n\nfunction* CompanyGroupSaga() {\n  yield takeEvery(SAVE_COMPANY_GROUP_MASTER, Post_Method_For_CompanyGroup_GenFun);\n  yield takeEvery(GET_COMPANY_GROUP_LIST, Get_CompanyGroup_GenratorFunction);\n  yield takeEvery(EDIT_COMPANY_GROUP_ID, Edit_CompanyGroupType_ID_GenratorFunction);\n  yield takeEvery(UPDATE_COMPANY_GROUP_ID, Update_CompanyGroupType_ID_GenratorFunction);\n  yield takeEvery(DELETE_COMPANY_GROUP_ID, Delete_CompanyGroupType_ID_GenratorFunction);\n}\n\n_c6 = CompanyGroupSaga;\nexport default CompanyGroupSaga;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Get_CompanyGroup_GenratorFunction\");\n$RefreshReg$(_c2, \"Post_Method_For_CompanyGroup_GenFun\");\n$RefreshReg$(_c3, \"Edit_CompanyGroupType_ID_GenratorFunction\");\n$RefreshReg$(_c4, \"Update_CompanyGroupType_ID_GenratorFunction\");\n$RefreshReg$(_c5, \"Delete_CompanyGroupType_ID_GenratorFunction\");\n$RefreshReg$(_c6, \"CompanyGroupSaga\");","map":{"version":3,"names":["call","put","takeEvery","saveCompanyGroupMasterSuccess","getCompanyGroupListSuccess","deleteCompanyGroupIDSuccess","editCompanyGroupSuccess","updateCompanyGroupIDSuccess","CompanyGroup_Get_API","CompanyGroup_Post_API","CompanyGroup_Delete_API","CompanyGroup_edit_API","CompanyGroup_update_API","SAVE_COMPANY_GROUP_MASTER","GET_COMPANY_GROUP_LIST","DELETE_COMPANY_GROUP_ID","EDIT_COMPANY_GROUP_ID","UPDATE_COMPANY_GROUP_ID","CommonConsole","Get_CompanyGroup_GenratorFunction","response","Data","error","Post_Method_For_CompanyGroup_GenFun","config","Edit_CompanyGroupType_ID_GenratorFunction","btnmode","pageMode","Update_CompanyGroupType_ID_GenratorFunction","Delete_CompanyGroupType_ID_GenratorFunction","CompanyGroupSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Administrator/CompanyGroupRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  saveCompanyGroupMasterSuccess,\r\n  getCompanyGroupListSuccess,\r\n  deleteCompanyGroupIDSuccess,\r\n  editCompanyGroupSuccess,\r\n  updateCompanyGroupIDSuccess\r\n} from \"./action\";\r\nimport {\r\n  CompanyGroup_Get_API,\r\n  CompanyGroup_Post_API,\r\n  CompanyGroup_Delete_API,\r\n  CompanyGroup_edit_API,\r\n  CompanyGroup_update_API,\r\n} from \"../../../helpers/backend_helper\";\r\nimport {\r\n  SAVE_COMPANY_GROUP_MASTER,\r\n  GET_COMPANY_GROUP_LIST,\r\n  DELETE_COMPANY_GROUP_ID,\r\n  EDIT_COMPANY_GROUP_ID,\r\n  UPDATE_COMPANY_GROUP_ID\r\n} from \"./actionType\";\r\n\r\nimport { CommonConsole } from \"../../../components/Common/ComponentRelatedCommonFile/CommonFunction\";\r\n\r\nfunction* Get_CompanyGroup_GenratorFunction() {//get API\r\n  try {\r\n    const response = yield call(CompanyGroup_Get_API);\r\n    yield put(getCompanyGroupListSuccess(response.Data));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Post_Method_For_CompanyGroup_GenFun({ config }) { //Post API\r\n  try {\r\n    const response = yield call(CompanyGroup_Post_API, config);\r\n    yield put(saveCompanyGroupMasterSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Edit_CompanyGroupType_ID_GenratorFunction({ config }) { // Edit API\r\n  const { btnmode } = config;\r\n  try {\r\n    const response = yield call(CompanyGroup_edit_API, config);\r\n    response.pageMode = btnmode;\r\n    yield put(editCompanyGroupSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Update_CompanyGroupType_ID_GenratorFunction({ config }) { // Update API\r\n  try {\r\n    const response = yield call(CompanyGroup_update_API, config);\r\n    yield put(updateCompanyGroupIDSuccess(response))\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Delete_CompanyGroupType_ID_GenratorFunction({ config }) { //Delete API\r\n  try {\r\n    const response = yield call(CompanyGroup_Delete_API, config);\r\n    yield put(deleteCompanyGroupIDSuccess(response))\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* CompanyGroupSaga() {\r\n  yield takeEvery(SAVE_COMPANY_GROUP_MASTER, Post_Method_For_CompanyGroup_GenFun)\r\n  yield takeEvery(GET_COMPANY_GROUP_LIST, Get_CompanyGroup_GenratorFunction)\r\n  yield takeEvery(EDIT_COMPANY_GROUP_ID, Edit_CompanyGroupType_ID_GenratorFunction)\r\n  yield takeEvery(UPDATE_COMPANY_GROUP_ID, Update_CompanyGroupType_ID_GenratorFunction)\r\n  yield takeEvery(DELETE_COMPANY_GROUP_ID, Delete_CompanyGroupType_ID_GenratorFunction)\r\n}\r\n\r\nexport default CompanyGroupSaga;"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SACEC,6BADF,EAEEC,0BAFF,EAGEC,2BAHF,EAIEC,uBAJF,EAKEC,2BALF,QAMO,UANP;AAOA,SACEC,oBADF,EAEEC,qBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,uBALF,QAMO,iCANP;AAOA,SACEC,yBADF,EAEEC,sBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,uBALF,QAMO,cANP;AAQA,SAASC,aAAT,QAA8B,sEAA9B;;AAEA,UAAUC,iCAAV,GAA8C;EAAC;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACQ,oBAAD,CAA3B;IACA,MAAMP,GAAG,CAACG,0BAA0B,CAACgB,QAAQ,CAACC,IAAV,CAA3B,CAAT;EACD,CAHD,CAGE,OAAOC,KAAP,EAAc;IAAEJ,aAAa,CAACI,KAAD,CAAb;EAAsB;AACzC;;KALSH,iC;;AAOV,UAAUI,mCAAV,OAA0D;EAAA,IAAZ;IAAEC;EAAF,CAAY;;EAAE;EAC1D,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMpB,IAAI,CAACS,qBAAD,EAAwBe,MAAxB,CAA3B;IACA,MAAMvB,GAAG,CAACE,6BAA6B,CAACiB,QAAD,CAA9B,CAAT;EACD,CAHD,CAGE,OAAOE,KAAP,EAAc;IAAEJ,aAAa,CAACI,KAAD,CAAb;EAAsB;AACzC;;MALSC,mC;;AAOV,UAAUE,yCAAV,QAAgE;EAAA,IAAZ;IAAED;EAAF,CAAY;EAAE;EAChE,MAAM;IAAEE;EAAF,IAAcF,MAApB;;EACA,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMpB,IAAI,CAACW,qBAAD,EAAwBa,MAAxB,CAA3B;IACAJ,QAAQ,CAACO,QAAT,GAAoBD,OAApB;IACA,MAAMzB,GAAG,CAACK,uBAAuB,CAACc,QAAD,CAAxB,CAAT;EACD,CAJD,CAIE,OAAOE,KAAP,EAAc;IAAEJ,aAAa,CAACI,KAAD,CAAb;EAAsB;AACzC;;MAPSG,yC;;AASV,UAAUG,2CAAV,QAAkE;EAAA,IAAZ;IAAEJ;EAAF,CAAY;;EAAE;EAClE,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMpB,IAAI,CAACY,uBAAD,EAA0BY,MAA1B,CAA3B;IACA,MAAMvB,GAAG,CAACM,2BAA2B,CAACa,QAAD,CAA5B,CAAT;EACD,CAHD,CAGE,OAAOE,KAAP,EAAc;IAAEJ,aAAa,CAACI,KAAD,CAAb;EAAsB;AACzC;;MALSM,2C;;AAOV,UAAUC,2CAAV,QAAkE;EAAA,IAAZ;IAAEL;EAAF,CAAY;;EAAE;EAClE,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMpB,IAAI,CAACU,uBAAD,EAA0Bc,MAA1B,CAA3B;IACA,MAAMvB,GAAG,CAACI,2BAA2B,CAACe,QAAD,CAA5B,CAAT;EACD,CAHD,CAGE,OAAOE,KAAP,EAAc;IAAEJ,aAAa,CAACI,KAAD,CAAb;EAAsB;AACzC;;MALSO,2C;;AAOV,UAAUC,gBAAV,GAA6B;EAC3B,MAAM5B,SAAS,CAACW,yBAAD,EAA4BU,mCAA5B,CAAf;EACA,MAAMrB,SAAS,CAACY,sBAAD,EAAyBK,iCAAzB,CAAf;EACA,MAAMjB,SAAS,CAACc,qBAAD,EAAwBS,yCAAxB,CAAf;EACA,MAAMvB,SAAS,CAACe,uBAAD,EAA0BW,2CAA1B,CAAf;EACA,MAAM1B,SAAS,CAACa,uBAAD,EAA0Bc,2CAA1B,CAAf;AACD;;MANSC,gB;AAQV,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}