{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Accounting\\\\Receipt\\\\Receipts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport Flatpickr from \"react-flatpickr\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { AlertState, BreadcrumbShowCountlabel, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\nimport { comAddPageFieldFunc, formValid, initialFiledFunc, onChangeSelect, onChangeText, resetFunction } from \"../../../components/Common/validationFunction\";\nimport { SaveButton } from \"../../../components/Common/CommonButton\";\nimport { breadcrumbReturnFunc, btnIsDissablefunc, currentDate, loginCompanyID, loginPartyID, loginUserID } from \"../../../components/Common/CommonFunction\";\nimport * as url from \"../../../routes/route_url\";\nimport * as pageId from \"../../../routes/allPageID\";\nimport * as mode from \"../../../routes/PageMode\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { countlabelFunc } from \"../../../components/Common/CommonPurchaseList\";\nimport { mySearchProps } from \"../../../components/Common/SearchBox/MySearch\";\nimport { Retailer_List } from \"../../../store/CommonAPI/SupplierRedux/actions\";\nimport { BankListAPI, GetOpeningBalance, GetOpeningBalance_Success, ReceiptGoButtonMaster, ReceiptGoButtonMaster_Success, ReceiptTypeAPI, saveReceiptMaster, saveReceiptMaster_Success } from \"../../../store/Accounting/Receipt/action\";\nimport { postSelect_Field_for_dropdown } from \"../../../store/Administrator/PartyMasterBulkUpdateRedux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Receipts = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const fileds = {\n    ReceiptDate: currentDate,\n    OpeningBalanceAmt: \"\",\n    Customer: \"\",\n    ReceiptModeName: \"\",\n    AmountPaid: 0,\n    BankName: \"\",\n    ChequeNo: \"\",\n    DepositorBankName: \"\",\n    Description: \"\",\n    ChequeDate: currentDate\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(mode.defaultsave);\n  const [userPageAccessState, setUserAccState] = useState(123);\n  const [editCreatedBy, seteditCreatedBy] = useState(\"\"); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    ReceiptGoButton,\n    OpeningBalance,\n    pageField,\n    RetailerList,\n    BankList,\n    ReceiptModeList,\n    ReceiptType,\n    userAccess\n  } = useSelector(state => ({\n    postMsg: state.ReceiptReducer.postMsg,\n    ReceiptGoButton: state.ReceiptReducer.ReceiptGoButton,\n    OpeningBalance: state.ReceiptReducer.OpeningBalance,\n    RetailerList: state.CommonAPI_Reducer.RetailerList,\n    ReceiptModeList: state.PartyMasterBulkUpdateReducer.SelectField,\n    ReceiptType: state.ReceiptReducer.ReceiptType,\n    BankList: state.ReceiptReducer.bankList,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  const location = { ...history.location\n  };\n  const page_Mode = location.pageMode;\n  const hasShowloction = location.hasOwnProperty(mode.editValue);\n  const hasShowModal = props.hasOwnProperty(mode.editValue);\n  const {\n    Data = []\n  } = ReceiptGoButton;\n  const {\n    OpeningBalanceAmount = ''\n  } = OpeningBalance;\n  useEffect(() => {\n    const page_Id = pageId.RECEIPTS;\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(page_Id));\n    dispatch(BankListAPI());\n  }, []);\n  useEffect(() => {\n    dispatch(BreadcrumbShowCountlabel(`Receipt Count :${Data.length}`));\n  }, [ReceiptGoButton]); // Customer dropdown Options\n\n  useEffect(() => {\n    const jsonBody = JSON.stringify({\n      Type: 4,\n      PartyID: loginPartyID(),\n      CompanyID: loginCompanyID()\n    });\n    dispatch(Retailer_List(jsonBody));\n  }, []); // Receipt Mode dropdown Values\n\n  useEffect(() => {\n    const jsonBody = JSON.stringify({\n      Company: loginCompanyID(),\n      TypeID: 4\n    });\n    dispatch(postSelect_Field_for_dropdown(jsonBody));\n  }, []); // Receipt Type API Values **** only Use Post Json Body\n\n  useEffect(() => {\n    const jsonBody = JSON.stringify({\n      Company: loginCompanyID(),\n      TypeID: 3\n    });\n    dispatch(ReceiptTypeAPI(jsonBody));\n  }, []);\n  useEffect(() => {\n    debugger;\n\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n      let insidePageMode = null;\n      let Data = null;\n\n      if (hasShowloction) {\n        insidePageMode = location.pageMode;\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props[mode.editValue];\n        insidePageMode = props.pageMode;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          id,\n          CustomerID,\n          Customer,\n          Description,\n          ReceiptMode,\n          ReceiptModeName,\n          Bank,\n          BankName,\n          AmountPaid,\n          DocumentNo\n        } = hasEditVal;\n        setState(i => {\n          i.values.Customer = {\n            value: CustomerID,\n            label: Customer\n          };\n          i.values.ReceiptModeName = {\n            value: ReceiptMode,\n            label: ReceiptModeName\n          };\n          i.values.BankName = {\n            value: Bank,\n            label: BankName\n          };\n          i.values.Description = Description;\n          i.values.ChequeNo = DocumentNo;\n          i.values.AmountPaid = AmountPaid;\n          i.hasValid.Customer.valid = true;\n          i.hasValid.AmountPaid.valid = true;\n          i.hasValid.BankName.valid = true;\n          i.hasValid.Description.valid = true;\n          i.hasValid.ReceiptModeName.valid = true;\n          return i;\n        });\n        document.getElementById(\"AmountPaid\").value = AmountPaid;\n        AmountPaidDistribution(AmountPaid);\n      }\n    } else {\n      dispatch(ReceiptGoButtonMaster_Success({\n        Status: false\n      }));\n      dispatch(GetOpeningBalance_Success(''));\n    }\n  }, []);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserAccState(userAcc);\n      breadcrumbReturnFunc({\n        dispatch,\n        userAcc\n      });\n    }\n\n    ;\n  }, [userAccess]); //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(saveReceiptMaster_Success({\n        Status: false\n      }));\n      dispatch(ReceiptGoButtonMaster_Success([]));\n      setState(() => resetFunction(fileds, state)); // Clear form values \n      // dispatch(Breadcrumb_inputName(''))\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message,\n          RedirectPath: url.RECEIPTS_LIST\n        }));\n      }\n    } else if (postMsg.Status === true) {\n      dispatch(saveReceiptMaster_Success({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMsg.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  const customerOptions = RetailerList.map(index => ({\n    value: index.id,\n    label: index.Name\n  }));\n  const ReceiptModeOptions = ReceiptModeList.map(index => ({\n    value: index.id,\n    label: index.Name\n  }));\n  const bankList = BankList.map(index => ({\n    value: index.Bank,\n    label: index.BankName,\n    IsSelfDepositoryBank: index.IsSelfDepositoryBank\n  }));\n  const DepositorBankOptions = bankList.filter(index => {\n    return index.IsSelfDepositoryBank === true;\n  });\n  const BankListOptions = bankList.filter(index => {\n    return index.IsSelfDepositoryBank === false;\n  });\n  const pagesListColumns = [{\n    text: \"Receipt Date\",\n    dataField: \"InvoiceDate\"\n  }, {\n    text: \"Bill No\",\n    dataField: \"FullInvoiceNumber\"\n  }, {\n    text: \"Bill Amount\",\n    dataField: \"GrandTotal\"\n  }, {\n    text: \"Paid\",\n    dataField: \"PaidAmount\"\n  }, {\n    text: \"Bal Amt\",\n    dataField: \"BalanceAmount\"\n  }, {\n    text: \"Calculate\",\n    dataField: \"\",\n    formatter: (cellContent, row, key) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          justifyContent: 'center',\n          width: \"100px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: `Quantity${row.FullInvoiceNumber}`,\n          defaultValue: row.Calculate,\n          disabled: page_Mode === mode.modeSTPsave ? true : false // value={row.Calculate}\n          // type=\"text\"\n          ,\n          autoComplete: \"off\",\n          className: \"col col-sm text-center\",\n          onChange: e => CalculateOnchange(e, row, key)\n        }, `Quantity${row.FullInvoiceNumber}${key}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }, this);\n    },\n    headerStyle: (colum, colIndex) => {\n      return {\n        width: '140px',\n        textAlign: 'center'\n      };\n    }\n  }];\n  const pageOptions = {\n    // sizePerPage: 10,\n    totalSize: Data.length,\n    custom: true\n  }; // Customer dropdown function\n\n  function CustomerOnChange(e) {\n    debugger;\n    setState(i => {\n      i.values.AmountPaid = 0;\n      i.hasValid.AmountPaid.valid = true;\n      return i;\n    });\n    const jsonBody = JSON.stringify({\n      PartyID: loginPartyID(),\n      CustomerID: e.value,\n      ReceiptDate: values.ReceiptDate\n    });\n    const body = {\n      jsonBody,\n      pageMode\n    };\n    dispatch(ReceiptGoButtonMaster(body));\n    dispatch(GetOpeningBalance(jsonBody));\n  } // Calculate Input box onChange Function\n\n\n  function CalculateOnchange(event, row, key) {\n    debugger;\n    let input = event.target.value;\n    let result = /^\\d*(\\.\\d{0,2})?$/.test(input);\n    let val1 = 0;\n\n    if (result) {\n      let v1 = Number(row.BalanceAmount);\n      let v2 = Number(input);\n\n      if (v1 >= v2) {\n        val1 = input;\n      } else {\n        val1 = v1;\n      }\n\n      ;\n    } else if (result === false) {\n      val1 = row.Calculate;\n    } else {\n      val1 = 0;\n    }\n\n    event.target.value = val1;\n    row.Calculate = event.target.value;\n    let CalculateAmount = Data.map(index => {\n      return parseFloat(index.Calculate);\n    });\n    const sum = CalculateAmount.reduce((partialSum, a) => partialSum + a, 0);\n    let sum1 = document.getElementById(\"AmountPaid\").value = sum.toFixed(2);\n    setState(i => {\n      let a = { ...i\n      };\n      a.values.AmountPaid = sum1;\n      a.hasValid.AmountPaid.valid = true;\n      return a;\n    });\n  }\n\n  ;\n\n  function AmountPaid_onChange(event, state) {\n    let input = event.target.value;\n    let result = /^\\d*(\\.\\d{0,2})?$/.test(input);\n    let BalanceAmount = Data.map(index => {\n      return parseFloat(index.BalanceAmount);\n    });\n    const sum = BalanceAmount.reduce((partialSum, a) => partialSum + a, 0);\n    let val1 = 0;\n\n    if (result) {\n      let v1 = Number(sum);\n      let v2 = Number(input);\n\n      if (v1 >= v2) {\n        val1 = input;\n      } else {\n        val1 = v1;\n      }\n\n      ;\n    } else if (result === false) {\n      val1 = input.slice(0, -1);\n    } else {\n      val1 = 0;\n    }\n\n    event.target.value = val1;\n    AmountPaidDistribution(val1);\n  }\n\n  function AmountPaidDistribution(val1) {\n    let value = Number(val1);\n    let Amount = value;\n    Data.map(index => {\n      let amt = Number(index.BalanceAmount);\n\n      if (Amount > amt && !(amt === 0)) {\n        Amount = Amount - amt;\n        index.Calculate = amt.toFixed(2);\n      } else if (Amount <= amt && Amount > 0) {\n        index.Calculate = Amount.toFixed(2);\n        Amount = 0;\n      } else {\n        index.Calculate = 0;\n      }\n\n      try {\n        document.getElementById(`Quantity${index.FullInvoiceNumber}`).value = index.Calculate;\n      } catch (e) {}\n    });\n  }\n\n  function ReceiptModeOnchange(event) {\n    setState(i => {\n      i.values.BankName = '';\n      i.values.DepositorBankName = '';\n      i.values.ChequeNo = '';\n      i.hasValid.BankName.valid = true;\n      i.hasValid.DepositorBankName.valid = true;\n      i.hasValid.ChequeNo.valid = true;\n      return i;\n    });\n  }\n\n  function ReceiptDate_Onchange(e, date) {\n    setState(i => {\n      const a = { ...i\n      };\n      a.values.ReceiptDate = date;\n      a.hasValid.ReceiptDate.valid = true;\n      return a;\n    });\n  }\n\n  function ChequeDate_Onchange(e, date) {\n    setState(i => {\n      const a = { ...i\n      };\n      a.values.ChequeDate = date;\n      a.hasValid.ChequeDate.valid = true;\n      return a;\n    });\n  }\n\n  const saveHandeller = async event => {\n    event.preventDefault();\n    const btnId = event.target.id;\n\n    if (values.ReceiptModeName.label === \"Cheque\") {\n      const invalidMsg1 = [];\n\n      if (values.BankName === \"\") {\n        invalidMsg1.push(`BankName Is Required`);\n      }\n\n      if (values.DepositorBankName === \"\") {\n        invalidMsg1.push(`DepositorBankName Is Required`);\n      }\n\n      ;\n\n      if (values.ChequeNo === \"\") {\n        invalidMsg1.push(`ChequeNo Is Required`);\n      }\n\n      ;\n\n      if (values.BankName === \"\" || values.DepositorBankName === \"\" || values.ChequeNo === \"\" || values.ChequeDate === \"\") {\n        dispatch(AlertState({\n          Type: 4,\n          Status: true,\n          Message: JSON.stringify(invalidMsg1)\n        }));\n        return;\n      }\n    }\n\n    const ReceiptTypeID = ReceiptType.find(index => {\n      return index.Name === \"Receipt\";\n    });\n    const ReceiptInvoices1 = Data.map(index => ({\n      Invoice: index.Invoice,\n      GrandTotal: index.GrandTotal,\n      PaidAmount: index.Calculate,\n      flag: 0\n    }));\n    const FilterReceiptInvoices = ReceiptInvoices1.filter(index => {\n      return index.PaidAmount > 0;\n    });\n\n    try {\n      if (formValid(state, setState)) {\n        btnIsDissablefunc({\n          btnId,\n          state: true\n        });\n        var BulkData = [{\n          \"ReceiptDate\": values.ReceiptDate,\n          \"Description\": values.Description,\n          \"AmountPaid\": values.AmountPaid,\n          \"BalanceAmount\": \"\",\n          \"OpeningBalanceAdjusted\": \"\",\n          \"DocumentNo\": values.ChequeNo,\n          \"AdvancedAmountAjusted\": \"\",\n          \"Bank\": values.BankName.value,\n          \"Customer\": values.Customer.value,\n          \"ChequeDate\": values.ReceiptModeName.label === \"Cheque\" ? values.ChequeDate : \"\",\n          \"DepositorBank\": values.DepositorBankName.value,\n          \"Party\": loginPartyID(),\n          \"ReceiptMode\": values.ReceiptModeName.value,\n          \"ReceiptType\": ReceiptTypeID.id,\n          \"CreatedBy\": loginUserID(),\n          \"UpdatedBy\": loginUserID(),\n          \"ReceiptInvoices\": FilterReceiptInvoices\n        }];\n        const jsonBody = JSON.stringify({\n          BulkData: BulkData\n        });\n\n        if (pageMode === mode.edit) {// dispatch(updateCategoryID({ jsonBody, updateId: values.id, btnId }));\n        } else {\n          dispatch(saveReceiptMaster({\n            jsonBody,\n            btnId\n          }));\n        }\n      }\n    } catch (e) {\n      btnIsDissablefunc({\n        btnId,\n        state: false\n      });\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === mode.dropdownAdd) {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userAccess.PageHeading, \"| FoodERP-React FrontEnd\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginBottom: \"5cm\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2 c_card_filter header text-black mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"row mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.ReceiptDate, \"  \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                      name: \"ReceiptDate\",\n                      value: values.ReceiptDate // disabled={page_Mode === mode.modeSTPsave ? true : false}\n                      ,\n                      className: \"form-control d-block p-2 bg-white text-dark\",\n                      placeholder: \"Select...\",\n                      options: {\n                        altInput: true,\n                        altFormat: \"d-m-Y\",\n                        dateFormat: \"Y-m-d\"\n                      },\n                      onChange: ReceiptDate_Onchange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.Customer, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      name: \"Customer\",\n                      isDisabled: page_Mode === mode.modeSTPsave ? true : false,\n                      value: values.Customer,\n                      isSearchable: true,\n                      className: \"react-dropdown\",\n                      classNamePrefix: \"dropdown\",\n                      options: customerOptions,\n                      onChange: (hasSelect, evn) => {\n                        onChangeSelect({\n                          hasSelect,\n                          evn,\n                          state,\n                          setState\n                        });\n                        CustomerOnChange(hasSelect);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 45\n                    }, this), isError.Customer.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.Customer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [\"  \", fieldLabel.OpeningBalanceAmt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"OpeningBalanceAmt\",\n                      id: \"OpeningBalanceAmt\",\n                      disabled: true,\n                      value: OpeningBalanceAmount,\n                      type: \"text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.ReceiptModeName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      id: \"ReceiptModeName \",\n                      name: \"ReceiptModeName\",\n                      value: values.ReceiptModeName,\n                      isDisabled: page_Mode === mode.modeSTPsave ? true : false,\n                      isSearchable: true,\n                      className: \"react-dropdown\",\n                      classNamePrefix: \"dropdown\",\n                      options: ReceiptModeOptions,\n                      onChange: (hasSelect, evn) => {\n                        onChangeSelect({\n                          hasSelect,\n                          evn,\n                          state,\n                          setState\n                        });\n                        ReceiptModeOnchange(hasSelect);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 45\n                    }, this), isError.ReceiptModeName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.ReceiptModeName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 29\n            }, this), values.ReceiptModeName.label === \"Cheque\" || values.ReceiptModeName.label === \"RTGS\" ? /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.BankName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      name: \"BankName\",\n                      value: values.BankName,\n                      isDisabled: page_Mode === mode.modeSTPsave ? true : false,\n                      isSearchable: true,\n                      className: \"react-dropdown\",\n                      classNamePrefix: \"dropdown\",\n                      options: BankListOptions,\n                      onChange: (hasSelect, evn) => {\n                        onChangeSelect({\n                          hasSelect,\n                          evn,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 49\n                    }, this), isError.BankName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.BankName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 685,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [fieldLabel.DepositorBankName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      name: \"DepositorBankName\",\n                      value: values.DepositorBankName,\n                      isSearchable: true,\n                      className: \"react-dropdown\",\n                      classNamePrefix: \"dropdown\",\n                      options: DepositorBankOptions,\n                      onChange: (hasSelect, evn) => {\n                        onChangeSelect({\n                          hasSelect,\n                          evn,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 49\n                    }, this), isError.DepositorBankName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.DepositorBankName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 33\n            }, this) : null, values.ReceiptModeName.label === \"Cheque\" && /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [\"  \", fieldLabel.ChequeNo]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      name: \"ChequeNo\",\n                      disabled: page_Mode === mode.modeSTPsave ? true : false,\n                      value: values.ChequeNo,\n                      type: \"text\",\n                      className: isError.ChequeNo.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                      placeholder: \"Please Enter Cheque Number\",\n                      autoComplete: \"off\",\n                      autoFocus: true,\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 729,\n                      columnNumber: 49\n                    }, this), isError.ChequeNo.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.ChequeNo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [\"  \", fieldLabel.ChequeDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                      name: \"ChequeDate\",\n                      disabled: page_Mode === mode.modeSTPsave ? true : false,\n                      value: values.ChequeDate,\n                      className: \"form-control d-block p-2 bg-white text-dark\",\n                      placeholder: \"Select...\",\n                      options: {\n                        altInput: true,\n                        altFormat: \"d-m-Y\",\n                        dateFormat: \"Y-m-d\"\n                      },\n                      onChange: ChequeDate_Onchange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [\"  \", fieldLabel.AmountPaid]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      name: \"AmountPaid\",\n                      id: \"AmountPaid\",\n                      defaultValue: values.AmountPaid // value={values.AmountPaid}\n                      ,\n                      disabled: page_Mode === mode.modeSTPsave ? true : false,\n                      className: isError.AmountPaid.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                      placeholder: \"Please Enter Amount\",\n                      autoComplete: \"off\",\n                      autoFocus: true,\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                        AmountPaid_onChange(event, state);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 779,\n                      columnNumber: 45\n                    }, this), isError.AmountPaid.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.AmountPaid\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 796,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 778,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \" row mt-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"col-sm-1 p-2\",\n                    style: {\n                      width: \"115px\",\n                      marginRight: \"0.4cm\"\n                    },\n                    children: [\"  \", fieldLabel.Description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      id: \"Description\",\n                      name: \"Description\",\n                      value: values.Description,\n                      type: \"text\",\n                      className: isError.Description.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                      placeholder: \"Please Enter Description\",\n                      autoComplete: \"off\",\n                      autoFocus: true,\n                      onChange: event => {\n                        onChangeText({\n                          event,\n                          state,\n                          setState\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 807,\n                      columnNumber: 45\n                    }, this), isError.Description.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.Description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 806,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n            keyField: \"id\",\n            data: Data,\n            columns: pagesListColumns,\n            search: true,\n            children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table\",\n                children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n                  keyField: \"id\",\n                  bordered: true,\n                  striped: false,\n                  noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-danger text-center \",\n                    children: \"Record Not available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 847,\n                    columnNumber: 63\n                  }, this),\n                  classes: \"table align-middle table-nowrap table-hover\",\n                  headerWrapperClasses: \"thead-light\",\n                  ...toolkitProps.baseProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 41\n                }, this), mySearchProps(toolkitProps.searchProps)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 25\n          }, this), Data.length > 0 ? /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 2,\n              style: {\n                marginLeft: \"-40px\"\n              },\n              className: \"row save1\",\n              children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                pageMode: pageMode,\n                onClick: saveHandeller,\n                userAcc: userPageAccessState,\n                editCreatedBy: editCreatedBy,\n                module: \"Receipts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Receipts, \"rQnn/FQS2u01Hwp7LIpX6uyShvs=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Receipts;\nexport default Receipts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Receipts\");","map":{"version":3,"names":["React","useEffect","useState","Col","FormGroup","Input","Label","Row","Flatpickr","MetaTags","AlertState","BreadcrumbShowCountlabel","commonPageField","commonPageFieldSuccess","useHistory","useDispatch","useSelector","Select","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeSelect","onChangeText","resetFunction","SaveButton","breadcrumbReturnFunc","btnIsDissablefunc","currentDate","loginCompanyID","loginPartyID","loginUserID","url","pageId","mode","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","BootstrapTable","countlabelFunc","mySearchProps","Retailer_List","BankListAPI","GetOpeningBalance","GetOpeningBalance_Success","ReceiptGoButtonMaster","ReceiptGoButtonMaster_Success","ReceiptTypeAPI","saveReceiptMaster","saveReceiptMaster_Success","postSelect_Field_for_dropdown","Receipts","props","history","dispatch","fileds","ReceiptDate","OpeningBalanceAmt","Customer","ReceiptModeName","AmountPaid","BankName","ChequeNo","DepositorBankName","Description","ChequeDate","state","setState","modalCss","setModalCss","pageMode","setPageMode","defaultsave","userPageAccessState","setUserAccState","editCreatedBy","seteditCreatedBy","postMsg","ReceiptGoButton","OpeningBalance","pageField","RetailerList","BankList","ReceiptModeList","ReceiptType","userAccess","ReceiptReducer","CommonAPI_Reducer","PartyMasterBulkUpdateReducer","SelectField","bankList","Login","RoleAccessUpdateData","CommonPageFieldReducer","values","isError","fieldLabel","location","page_Mode","hasShowloction","hasOwnProperty","editValue","hasShowModal","Data","OpeningBalanceAmount","page_Id","RECEIPTS","length","jsonBody","JSON","stringify","Type","PartyID","CompanyID","Company","TypeID","hasEditVal","insidePageMode","id","CustomerID","ReceiptMode","Bank","DocumentNo","i","value","label","hasValid","valid","document","getElementById","AmountPaidDistribution","Status","fieldArr","PageFieldMaster","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","StatusCode","Message","RedirectPath","RECEIPTS_LIST","AfterResponseAction","customerOptions","map","index","Name","ReceiptModeOptions","IsSelfDepositoryBank","DepositorBankOptions","filter","BankListOptions","pagesListColumns","text","dataField","formatter","cellContent","row","key","justifyContent","width","FullInvoiceNumber","Calculate","modeSTPsave","e","CalculateOnchange","headerStyle","colum","colIndex","textAlign","pageOptions","totalSize","custom","CustomerOnChange","body","event","input","target","result","test","val1","v1","Number","BalanceAmount","v2","CalculateAmount","parseFloat","sum","reduce","partialSum","a","sum1","toFixed","AmountPaid_onChange","slice","Amount","amt","ReceiptModeOnchange","ReceiptDate_Onchange","date","ChequeDate_Onchange","saveHandeller","preventDefault","btnId","invalidMsg1","push","ReceiptTypeID","ReceiptInvoices1","Invoice","GrandTotal","PaidAmount","flag","FilterReceiptInvoices","BulkData","edit","IsEditMode_Css","dropdownAdd","PageHeading","marginBottom","marginRight","altInput","altFormat","dateFormat","hasSelect","evn","toolkitProps","baseProps","searchProps","marginLeft"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Accounting/Receipt/Receipts.js"],"sourcesContent":["import React, { useEffect, useState, } from \"react\";\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState, BreadcrumbShowCountlabel, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n    onChangeSelect,\r\n    onChangeText,\r\n    resetFunction,\r\n} from \"../../../components/Common/validationFunction\";\r\nimport { SaveButton } from \"../../../components/Common/CommonButton\";\r\nimport { breadcrumbReturnFunc, btnIsDissablefunc, currentDate, loginCompanyID, loginPartyID, loginUserID, } from \"../../../components/Common/CommonFunction\";\r\nimport * as url from \"../../../routes/route_url\";\r\nimport * as pageId from \"../../../routes/allPageID\"\r\nimport * as mode from \"../../../routes/PageMode\"\r\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { countlabelFunc } from \"../../../components/Common/CommonPurchaseList\";\r\nimport { mySearchProps } from \"../../../components/Common/SearchBox/MySearch\";\r\nimport { Retailer_List } from \"../../../store/CommonAPI/SupplierRedux/actions\";\r\nimport { BankListAPI, GetOpeningBalance, GetOpeningBalance_Success, ReceiptGoButtonMaster, ReceiptGoButtonMaster_Success, ReceiptTypeAPI, saveReceiptMaster, saveReceiptMaster_Success } from \"../../../store/Accounting/Receipt/action\";\r\nimport { postSelect_Field_for_dropdown } from \"../../../store/Administrator/PartyMasterBulkUpdateRedux/actions\";\r\n\r\nconst Receipts = (props) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const fileds = {\r\n        ReceiptDate: currentDate,\r\n        OpeningBalanceAmt: \"\",\r\n        Customer: \"\",\r\n        ReceiptModeName: \"\",\r\n        AmountPaid: 0,\r\n        BankName: \"\",\r\n        ChequeNo: \"\",\r\n        DepositorBankName: \"\",\r\n        Description: \"\",\r\n        ChequeDate: currentDate,\r\n    }\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(mode.defaultsave);\r\n    const [userPageAccessState, setUserAccState] = useState(123);\r\n    const [editCreatedBy, seteditCreatedBy] = useState(\"\");\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { postMsg,\r\n        ReceiptGoButton,\r\n        OpeningBalance,\r\n        pageField,\r\n        RetailerList,\r\n        BankList,\r\n        ReceiptModeList,\r\n        ReceiptType,\r\n        userAccess } = useSelector((state) => ({\r\n            postMsg: state.ReceiptReducer.postMsg,\r\n            ReceiptGoButton: state.ReceiptReducer.ReceiptGoButton,\r\n            OpeningBalance: state.ReceiptReducer.OpeningBalance,\r\n            RetailerList: state.CommonAPI_Reducer.RetailerList,\r\n            ReceiptModeList: state.PartyMasterBulkUpdateReducer.SelectField,\r\n            ReceiptType: state.ReceiptReducer.ReceiptType,\r\n            BankList: state.ReceiptReducer.bankList,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageField\r\n        }));\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    const location = { ...history.location }\r\n    const page_Mode = location.pageMode\r\n    const hasShowloction = location.hasOwnProperty(mode.editValue)\r\n    const hasShowModal = props.hasOwnProperty(mode.editValue)\r\n\r\n    const { Data = [] } = ReceiptGoButton\r\n    const { OpeningBalanceAmount = '' } = OpeningBalance\r\n\r\n    useEffect(() => {\r\n        const page_Id = pageId.RECEIPTS\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(page_Id))\r\n        dispatch(BankListAPI())\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(BreadcrumbShowCountlabel(`Receipt Count :${Data.length}`))\r\n    }, [ReceiptGoButton]);\r\n\r\n    // Customer dropdown Options\r\n    useEffect(() => {\r\n        const jsonBody = JSON.stringify({\r\n            Type: 4,\r\n            PartyID: loginPartyID(),\r\n            CompanyID: loginCompanyID()\r\n        });\r\n        dispatch(Retailer_List(jsonBody));\r\n    }, []);\r\n\r\n    // Receipt Mode dropdown Values\r\n    useEffect(() => {\r\n        const jsonBody = JSON.stringify({\r\n            Company: loginCompanyID(),\r\n            TypeID: 4\r\n        });\r\n        dispatch(postSelect_Field_for_dropdown(jsonBody));\r\n    }, []);\r\n\r\n    // Receipt Type API Values **** only Use Post Json Body\r\n    useEffect(() => {\r\n        const jsonBody = JSON.stringify({\r\n            Company: loginCompanyID(),\r\n            TypeID: 3\r\n        });\r\n        dispatch(ReceiptTypeAPI(jsonBody));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            let insidePageMode = null\r\n            let Data = null\r\n            if (hasShowloction) {\r\n                insidePageMode = location.pageMode;\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props[mode.editValue]\r\n                insidePageMode = props.pageMode;\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                const { id, CustomerID, Customer,\r\n                    Description, ReceiptMode, ReceiptModeName,\r\n                    Bank, BankName, AmountPaid, DocumentNo, } = hasEditVal\r\n                setState((i) => {\r\n                    i.values.Customer = { value: CustomerID, label: Customer }\r\n                    i.values.ReceiptModeName = { value: ReceiptMode, label: ReceiptModeName }\r\n                    i.values.BankName = { value: Bank, label: BankName }\r\n                    i.values.Description = Description\r\n                    i.values.ChequeNo = DocumentNo\r\n                    i.values.AmountPaid = AmountPaid\r\n\r\n                    i.hasValid.Customer.valid = true;\r\n                    i.hasValid.AmountPaid.valid = true;\r\n                    i.hasValid.BankName.valid = true;\r\n                    i.hasValid.Description.valid = true;\r\n                    i.hasValid.ReceiptModeName.valid = true;\r\n                    return i\r\n                })\r\n                document.getElementById(\"AmountPaid\").value = AmountPaid\r\n                AmountPaidDistribution(AmountPaid);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(ReceiptGoButtonMaster_Success({ Status: false }))\r\n            dispatch(GetOpeningBalance_Success(''))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserAccState(userAcc)\r\n            breadcrumbReturnFunc({ dispatch, userAcc });\r\n        };\r\n    }, [userAccess])\r\n\r\n    //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(saveReceiptMaster_Success({ Status: false }))\r\n            dispatch(ReceiptGoButtonMaster_Success([]))\r\n            setState(() => resetFunction(fileds, state))// Clear form values \r\n            // dispatch(Breadcrumb_inputName(''))\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: url.RECEIPTS_LIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(saveReceiptMaster_Success({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMsg.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    const customerOptions = RetailerList.map((index) => ({\r\n        value: index.id,\r\n        label: index.Name,\r\n    }));\r\n\r\n    const ReceiptModeOptions = ReceiptModeList.map((index) => ({\r\n        value: index.id,\r\n        label: index.Name,\r\n    }));\r\n\r\n    const bankList = BankList.map((index) => ({\r\n        value: index.Bank,\r\n        label: index.BankName,\r\n        IsSelfDepositoryBank: index.IsSelfDepositoryBank\r\n    }));\r\n\r\n    const DepositorBankOptions = bankList.filter((index) => {\r\n        return index.IsSelfDepositoryBank === true\r\n    })\r\n\r\n    const BankListOptions = bankList.filter((index) => {\r\n        return index.IsSelfDepositoryBank === false\r\n    })\r\n\r\n    const pagesListColumns = [\r\n        {\r\n            text: \"Receipt Date\",\r\n            dataField: \"InvoiceDate\",\r\n        },\r\n        {\r\n            text: \"Bill No\",\r\n            dataField: \"FullInvoiceNumber\",\r\n        },\r\n        {\r\n            text: \"Bill Amount\",\r\n            dataField: \"GrandTotal\",\r\n        },\r\n        {\r\n            text: \"Paid\",\r\n            dataField: \"PaidAmount\",\r\n        },\r\n        {\r\n            text: \"Bal Amt\",\r\n            dataField: \"BalanceAmount\",\r\n        },\r\n        {\r\n            text: \"Calculate\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, key) => {\r\n\r\n                return (<span style={{ justifyContent: 'center', width: \"100px\" }}>\r\n                    <Input\r\n                        key={`Quantity${row.FullInvoiceNumber}${key}`}\r\n                        id={`Quantity${row.FullInvoiceNumber}`}\r\n                        defaultValue={row.Calculate}\r\n                        disabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                        // value={row.Calculate}\r\n                        // type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        className=\"col col-sm text-center\"\r\n                        onChange={(e) => CalculateOnchange(e, row, key)}\r\n\r\n                    />\r\n                </span>)\r\n            },\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '140px', textAlign: 'center' };\r\n            },\r\n        },\r\n    ];\r\n\r\n    const pageOptions = {\r\n        // sizePerPage: 10,\r\n        totalSize: Data.length,\r\n        custom: true,\r\n    };\r\n\r\n    // Customer dropdown function\r\n    function CustomerOnChange(e) {\r\n        debugger\r\n        setState((i) => {\r\n            i.values.AmountPaid = 0\r\n            i.hasValid.AmountPaid.valid = true;\r\n            return i\r\n        })\r\n        const jsonBody = JSON.stringify({\r\n            PartyID: loginPartyID(),\r\n            CustomerID: e.value,\r\n            ReceiptDate: values.ReceiptDate\r\n        });\r\n        const body = { jsonBody, pageMode }\r\n        dispatch(ReceiptGoButtonMaster(body));\r\n        dispatch(GetOpeningBalance(jsonBody));\r\n    }\r\n\r\n    // Calculate Input box onChange Function\r\n    function CalculateOnchange(event, row, key) {\r\n        debugger\r\n        let input = event.target.value\r\n        let result = /^\\d*(\\.\\d{0,2})?$/.test(input);\r\n        let val1 = 0;\r\n        if (result) {\r\n            let v1 = Number(row.BalanceAmount);\r\n            let v2 = Number(input)\r\n            if (v1 >= v2) { val1 = input }\r\n            else { val1 = v1 };\r\n        }\r\n        else if (result === false) {\r\n            val1 = row.Calculate\r\n        }\r\n\r\n        else {\r\n            val1 = 0\r\n        }\r\n\r\n        event.target.value = val1;\r\n\r\n        row.Calculate = event.target.value\r\n\r\n        let CalculateAmount = Data.map((index) => {\r\n            return parseFloat(index.Calculate)\r\n        })\r\n\r\n        const sum = CalculateAmount.reduce((partialSum, a) => partialSum + a, 0);\r\n\r\n        let sum1 = document.getElementById(\"AmountPaid\").value = sum.toFixed(2)\r\n\r\n        setState((i) => {\r\n            let a = { ...i }\r\n            a.values.AmountPaid = sum1\r\n            a.hasValid.AmountPaid.valid = true;\r\n            return a\r\n        })\r\n\r\n    };\r\n\r\n    function AmountPaid_onChange(event, state) {\r\n\r\n        let input = event.target.value\r\n\r\n        let result = /^\\d*(\\.\\d{0,2})?$/.test(input);\r\n\r\n        let BalanceAmount = Data.map((index) => {\r\n            return parseFloat(index.BalanceAmount)\r\n        })\r\n        const sum = BalanceAmount.reduce((partialSum, a) => partialSum + a, 0);\r\n\r\n        let val1 = 0;\r\n        if (result) {\r\n            let v1 = Number(sum);\r\n            let v2 = Number(input)\r\n            if (v1 >= v2) { val1 = input }\r\n            else { val1 = v1 };\r\n\r\n        }\r\n        else if (result === false) {\r\n            val1 = input.slice(0, -1);\r\n        }\r\n        else {\r\n            val1 = 0\r\n        }\r\n        event.target.value = val1;\r\n\r\n        AmountPaidDistribution(val1)\r\n\r\n    }\r\n\r\n    function AmountPaidDistribution(val1) {\r\n        let value = Number(val1)\r\n\r\n        let Amount = value\r\n\r\n        Data.map((index) => {\r\n\r\n            let amt = Number(index.BalanceAmount)\r\n            if ((Amount > amt) && !(amt === 0)) {\r\n\r\n                Amount = Amount - amt\r\n                index.Calculate = amt.toFixed(2)\r\n            }\r\n            else if ((Amount <= amt) && (Amount > 0)) {\r\n                index.Calculate = Amount.toFixed(2)\r\n                Amount = 0\r\n            }\r\n            else {\r\n                index.Calculate = 0;\r\n            }\r\n            try {\r\n                document.getElementById(`Quantity${index.FullInvoiceNumber}`).value = index.Calculate\r\n            } catch (e) { }\r\n        })\r\n    }\r\n\r\n    function ReceiptModeOnchange(event) {\r\n        setState((i) => {\r\n            i.values.BankName = '';\r\n            i.values.DepositorBankName = '';\r\n            i.values.ChequeNo = '';\r\n            i.hasValid.BankName.valid = true;\r\n            i.hasValid.DepositorBankName.valid = true;\r\n            i.hasValid.ChequeNo.valid = true;\r\n            return i\r\n        })\r\n    }\r\n\r\n    function ReceiptDate_Onchange(e, date) {\r\n        setState((i) => {\r\n            const a = { ...i }\r\n            a.values.ReceiptDate = date;\r\n            a.hasValid.ReceiptDate.valid = true\r\n            return a\r\n        })\r\n    }\r\n\r\n    function ChequeDate_Onchange(e, date) {\r\n        setState((i) => {\r\n            const a = { ...i }\r\n            a.values.ChequeDate = date;\r\n            a.hasValid.ChequeDate.valid = true\r\n            return a\r\n        })\r\n    }\r\n\r\n    const saveHandeller = async (event) => {\r\n\r\n        event.preventDefault();\r\n        const btnId = event.target.id;\r\n\r\n        if (values.ReceiptModeName.label === \"Cheque\") {\r\n            const invalidMsg1 = []\r\n\r\n            if (values.BankName === \"\") {\r\n                invalidMsg1.push(`BankName Is Required`)\r\n            }\r\n            if (values.DepositorBankName === \"\") {\r\n                invalidMsg1.push(`DepositorBankName Is Required`)\r\n            };\r\n            if (values.ChequeNo === \"\") {\r\n                invalidMsg1.push(`ChequeNo Is Required`)\r\n            };\r\n\r\n            if ((values.BankName === \"\")\r\n                || (values.DepositorBankName === \"\")\r\n                || (values.ChequeNo === \"\")\r\n                || (values.ChequeDate === \"\")) {\r\n\r\n                dispatch(\r\n                    AlertState({\r\n                        Type: 4,\r\n                        Status: true,\r\n                        Message: JSON.stringify(invalidMsg1),\r\n                    })\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const ReceiptTypeID = ReceiptType.find((index) => {\r\n            return index.Name === \"Receipt\"\r\n        })\r\n\r\n        const ReceiptInvoices1 = Data.map((index) => ({\r\n            Invoice: index.Invoice,\r\n            GrandTotal: index.GrandTotal,\r\n            PaidAmount: index.Calculate,\r\n            flag: 0\r\n        }))\r\n\r\n        const FilterReceiptInvoices = ReceiptInvoices1.filter((index) => {\r\n            return index.PaidAmount > 0\r\n        })\r\n\r\n        try {\r\n            if (formValid(state, setState)) {\r\n                btnIsDissablefunc({ btnId, state: true })\r\n\r\n                var BulkData = [{\r\n                    \"ReceiptDate\": values.ReceiptDate,\r\n                    \"Description\": values.Description,\r\n                    \"AmountPaid\": values.AmountPaid,\r\n                    \"BalanceAmount\": \"\",\r\n                    \"OpeningBalanceAdjusted\": \"\",\r\n                    \"DocumentNo\": values.ChequeNo,\r\n                    \"AdvancedAmountAjusted\": \"\",\r\n                    \"Bank\": values.BankName.value,\r\n                    \"Customer\": values.Customer.value,\r\n                    \"ChequeDate\": values.ReceiptModeName.label === \"Cheque\" ? values.ChequeDate : \"\",\r\n                    \"DepositorBank\": values.DepositorBankName.value,\r\n                    \"Party\": loginPartyID(),\r\n                    \"ReceiptMode\": values.ReceiptModeName.value,\r\n                    \"ReceiptType\": ReceiptTypeID.id,\r\n                    \"CreatedBy\": loginUserID(),\r\n                    \"UpdatedBy\": loginUserID(),\r\n                    \"ReceiptInvoices\": FilterReceiptInvoices\r\n                }]\r\n                const jsonBody = JSON.stringify({\r\n                    BulkData: BulkData\r\n                })\r\n\r\n                if (pageMode === mode.edit) {\r\n                    // dispatch(updateCategoryID({ jsonBody, updateId: values.id, btnId }));\r\n                }\r\n                else {\r\n                    dispatch(saveReceiptMaster({ jsonBody, btnId }));\r\n                }\r\n            }\r\n        } catch (e) { btnIsDissablefunc({ btnId, state: false }) }\r\n    };\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === mode.dropdownAdd)) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags> <title>{userAccess.PageHeading}| FoodERP-React FrontEnd</title></MetaTags>\r\n\r\n                <div className=\"page-content\" style={{ marginBottom: \"5cm\" }}>\r\n\r\n                    <form noValidate>\r\n                        <div className=\"px-2 c_card_filter header text-black mb-2\" >\r\n\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\"row mt-2\" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.ReceiptDate}  </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Flatpickr\r\n                                                name='ReceiptDate'\r\n                                                value={values.ReceiptDate}\r\n                                                // disabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                                                className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                placeholder=\"Select...\"\r\n                                                options={{\r\n                                                    altInput: true,\r\n                                                    altFormat: \"d-m-Y\",\r\n                                                    dateFormat: \"Y-m-d\",\r\n                                                }}\r\n                                                onChange={ReceiptDate_Onchange}\r\n                                            />\r\n                                        </Col>\r\n\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-2 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.Customer} </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Select\r\n                                                name=\"Customer\"\r\n                                                isDisabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                                                value={values.Customer}\r\n                                                isSearchable={true}\r\n                                                className=\"react-dropdown\"\r\n                                                classNamePrefix=\"dropdown\"\r\n                                                options={customerOptions}\r\n                                                onChange={(hasSelect, evn) => {\r\n                                                    onChangeSelect({ hasSelect, evn, state, setState });\r\n                                                    CustomerOnChange(hasSelect)\r\n                                                }\r\n                                                }\r\n                                            />\r\n                                            {isError.Customer.length > 0 && (\r\n                                                <span className=\"invalid-feedback\">{isError.Customer}</span>\r\n                                            )}\r\n                                        </Col>\r\n\r\n                                    </FormGroup>\r\n                                </Col >\r\n\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-2 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>  {fieldLabel.OpeningBalanceAmt}</Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Input\r\n                                                name=\"OpeningBalanceAmt\"\r\n                                                id=\"OpeningBalanceAmt\"\r\n                                                disabled={true}\r\n                                                value={OpeningBalanceAmount}\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-2 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.ReceiptModeName} </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Select\r\n                                                id=\"ReceiptModeName \"\r\n                                                name=\"ReceiptModeName\"\r\n                                                value={values.ReceiptModeName}\r\n                                                isDisabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                                                isSearchable={true}\r\n                                                className=\"react-dropdown\"\r\n                                                classNamePrefix=\"dropdown\"\r\n                                                options={ReceiptModeOptions}\r\n                                                onChange={(hasSelect, evn) => {\r\n                                                    onChangeSelect({ hasSelect, evn, state, setState, })\r\n                                                    ReceiptModeOnchange(hasSelect)\r\n                                                }}\r\n                                            />\r\n                                            {isError.ReceiptModeName.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.ReceiptModeName}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Row>\r\n\r\n                            {(values.ReceiptModeName.label === \"Cheque\") || (values.ReceiptModeName.label === \"RTGS\") ?\r\n                                < Row >\r\n                                    <Col sm=\"6\">\r\n                                        <FormGroup className=\" row mt-2 \" >\r\n                                            <Label className=\"col-sm-1 p-2\"\r\n                                                style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.BankName} </Label>\r\n                                            <Col sm=\"7\">\r\n                                                <Select\r\n                                                    name=\"BankName\"\r\n                                                    value={values.BankName}\r\n                                                    isDisabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                                                    isSearchable={true}\r\n                                                    className=\"react-dropdown\"\r\n                                                    classNamePrefix=\"dropdown\"\r\n                                                    options={BankListOptions}\r\n                                                    onChange={(hasSelect, evn) => {\r\n                                                        onChangeSelect({ hasSelect, evn, state, setState });\r\n                                                    }}\r\n                                                />\r\n                                                {isError.BankName.length > 0 && (\r\n                                                    <span className=\"invalid-feedback\">{isError.BankName}</span>\r\n                                                )}\r\n                                            </Col>\r\n\r\n                                        </FormGroup>\r\n                                    </Col >\r\n\r\n                                    <Col sm=\"6\">\r\n                                        <FormGroup className=\" row mt-2 \" >\r\n                                            <Label className=\"col-sm-1 p-2\"\r\n                                                style={{ width: \"115px\", marginRight: \"0.4cm\" }}>{fieldLabel.DepositorBankName} </Label>\r\n                                            <Col sm=\"7\">\r\n                                                <Select\r\n                                                    name=\"DepositorBankName\"\r\n                                                    value={values.DepositorBankName}\r\n\r\n                                                    isSearchable={true}\r\n                                                    className=\"react-dropdown\"\r\n                                                    classNamePrefix=\"dropdown\"\r\n                                                    options={DepositorBankOptions}\r\n                                                    onChange={(hasSelect, evn) => {\r\n                                                        onChangeSelect({ hasSelect, evn, state, setState });\r\n                                                    }}\r\n                                                />\r\n                                                {isError.DepositorBankName.length > 0 && (\r\n                                                    <span className=\"invalid-feedback\">{isError.DepositorBankName}</span>\r\n                                                )}\r\n                                            </Col>\r\n\r\n                                        </FormGroup>\r\n                                    </Col >\r\n\r\n\r\n                                </Row>\r\n                                : null}\r\n\r\n                            {(values.ReceiptModeName.label === \"Cheque\") &&\r\n                                <Row>\r\n\r\n                                    <Col sm=\"6\">\r\n                                        <FormGroup className=\" row mt-2 \" >\r\n                                            <Label className=\"col-sm-1 p-2\"\r\n                                                style={{ width: \"115px\", marginRight: \"0.4cm\" }}>  {fieldLabel.ChequeNo}</Label>\r\n                                            <Col sm=\"7\">\r\n                                                <Input\r\n                                                    name=\"ChequeNo\"\r\n                                                    disabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                                                    value={values.ChequeNo}\r\n                                                    type=\"text\"\r\n                                                    className={isError.ChequeNo.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                    placeholder=\"Please Enter Cheque Number\"\r\n                                                    autoComplete='off'\r\n                                                    autoFocus={true}\r\n                                                    onChange={(event) => {\r\n                                                        onChangeText({ event, state, setState })\r\n                                                    }}\r\n                                                />\r\n                                                {isError.ChequeNo.length > 0 && (\r\n                                                    <span className=\"invalid-feedback\">{isError.ChequeNo}</span>\r\n                                                )}\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col >\r\n\r\n                                    <Col sm=\"6\">\r\n                                        <FormGroup className=\" row mt-2 \" >\r\n                                            <Label className=\"col-sm-1 p-2\"\r\n                                                style={{ width: \"115px\", marginRight: \"0.4cm\" }}>  {fieldLabel.ChequeDate}</Label>\r\n                                            <Col sm=\"7\">\r\n                                                <Flatpickr\r\n                                                    name='ChequeDate'\r\n                                                    disabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                                                    value={values.ChequeDate}\r\n                                                    className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                    placeholder=\"Select...\"\r\n                                                    options={{\r\n                                                        altInput: true,\r\n                                                        altFormat: \"d-m-Y\",\r\n                                                        dateFormat: \"Y-m-d\",\r\n                                                    }}\r\n                                                    onChange={ChequeDate_Onchange}\r\n                                                />\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col >\r\n                                </Row>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-2 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>  {fieldLabel.AmountPaid}</Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Input\r\n\r\n                                                name=\"AmountPaid\"\r\n                                                id=\"AmountPaid\"\r\n                                                defaultValue={values.AmountPaid}\r\n                                                // value={values.AmountPaid}\r\n                                                disabled={page_Mode === mode.modeSTPsave ? true : false}\r\n                                                className={isError.AmountPaid.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                placeholder=\"Please Enter Amount\"\r\n                                                autoComplete='off'\r\n                                                autoFocus={true}\r\n                                                onChange={(event) => {\r\n                                                    onChangeText({ event, state, setState })\r\n                                                    AmountPaid_onChange(event, state)\r\n                                                }}\r\n                                            />\r\n                                            {isError.AmountPaid.length > 0 && (\r\n                                                <span className=\"invalid-feedback\">{isError.AmountPaid}</span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\" row mt-2 \" >\r\n                                        <Label className=\"col-sm-1 p-2\"\r\n                                            style={{ width: \"115px\", marginRight: \"0.4cm\" }}>  {fieldLabel.Description}</Label>\r\n                                        <Col sm=\"7\">\r\n                                            <Input\r\n                                                id=\"Description\"\r\n                                                name=\"Description\"\r\n                                                value={values.Description}\r\n                                                type=\"text\"\r\n                                                className={isError.Description.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                placeholder=\"Please Enter Description\"\r\n                                                autoComplete='off'\r\n                                                autoFocus={true}\r\n                                                onChange={(event) => { onChangeText({ event, state, setState }) }}\r\n                                            />\r\n                                            {isError.Description.length > 0 && (\r\n                                                <span className=\"invalid-feedback\">{isError.Description}</span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Row>\r\n\r\n                        </div>\r\n\r\n                        {/* <PaginationProvider\r\n                            pagination={paginationFactory(pageOptions)}\r\n                        >\r\n                            {({ paginationProps, paginationTableProps }) => ( */}\r\n                        <ToolkitProvider\r\n\r\n                            keyField=\"id\"\r\n                            data={Data}\r\n                            columns={pagesListColumns}\r\n\r\n                            search\r\n                        >\r\n                            {toolkitProps => (\r\n                                <React.Fragment>\r\n                                    <div className=\"table\">\r\n                                        <BootstrapTable\r\n                                            keyField={\"id\"}\r\n                                            bordered={true}\r\n                                            striped={false}\r\n                                            noDataIndication={<div className=\"text-danger text-center \">Record Not available</div>}\r\n                                            classes={\"table align-middle table-nowrap table-hover\"}\r\n                                            headerWrapperClasses={\"thead-light\"}\r\n\r\n                                            {...toolkitProps.baseProps}\r\n                                        // {...paginationTableProps}\r\n                                        />\r\n\r\n                                        {/* {countlabelFunc(toolkitProps, \"\", dispatch, \"Receipt\")} */}\r\n                                        {mySearchProps(toolkitProps.searchProps)}\r\n                                    </div>\r\n\r\n                                    {/* <Row className=\"align-items-md-center mt-30\">\r\n                                                <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                    <PaginationListStandalone\r\n                                                        {...paginationProps}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row> */}\r\n                                </React.Fragment>\r\n                            )\r\n                            }\r\n                        </ToolkitProvider>\r\n                        {/* )\r\n                            }\r\n\r\n                        </PaginationProvider> */}\r\n\r\n                        {Data.length > 0 ?\r\n                            <FormGroup>\r\n                                <Col sm={2} style={{ marginLeft: \"-40px\" }} className={\"row save1\"}>\r\n                                    <SaveButton pageMode={pageMode}\r\n                                        onClick={saveHandeller}\r\n                                        userAcc={userPageAccessState}\r\n                                        editCreatedBy={editCreatedBy}\r\n                                        module={\"Receipts\"}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </FormGroup >\r\n                            : null\r\n                        }\r\n\r\n                    </form >\r\n                </div >\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Receipts\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}