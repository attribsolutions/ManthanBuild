{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Sale\\\\Invoice\\\\Invoice.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, Input, Label, Row, Table } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { comAddPageFieldFunc, initialFiledFunc, onChangeDate } from \"../../../components/Common/validationFunction\";\nimport Select from \"react-select\";\nimport { Change_Button, Go_Button, SaveButton } from \"../../../components/Common/CommonButton\";\nimport { updateBOMListSuccess } from \"../../../store/Production/BOMRedux/action\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport * as mode from \"../../../routes/PageMode\";\nimport * as pageId from \"../../../routes/allPageID\";\nimport * as url from \"../../../routes/route_url\";\nimport { editInvoiceListSuccess, GoButtonForinvoiceAdd, GoButtonForinvoiceAddSuccess, invoiceSaveAction, invoiceSaveActionSuccess, makeIB_InvoiceActionSuccess } from \"../../../store/Sales/Invoice/action\";\nimport { GetVenderSupplierCustomer } from \"../../../store/CommonAPI/SupplierRedux/actions\";\nimport { customAlert } from \"../../../CustomAlert/ConfirmDialog\";\nimport { discountCalculate, innerStockCaculation, orderQtyOnChange, orderQtyUnit_SelectOnchange, showAllStockOnclick, showStockOnclick, stockDistributeFunc, stockQtyOnChange } from \"./invoiceCaculations\";\nimport \"./invoice.scss\";\nimport * as _cfunc from \"../../../components/Common/CommonFunction\";\nimport { CInput, C_DatePicker, decimalRegx, onlyNumberRegx } from \"../../../CustomValidateForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Invoice = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const currentDate_ymd = _cfunc.date_ymd_func();\n\n  const subPageMode = history.location.pathname;\n  const goBtnId = `ADDGoBtn${subPageMode}`;\n  const saveBtnid = `saveBtn${subPageMode}`;\n  const fileds = {\n    InvoiceDate: currentDate_ymd,\n    Customer: \"\"\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(mode.defaultsave);\n  const [userPageAccessState, setUserAccState] = useState('');\n  const [showAllStockState, setShowAllStockState] = useState(true);\n  const {\n    postMsg,\n    updateMsg,\n    pageField,\n    userAccess,\n    GoButton = '',\n    vendorSupplierCustomer,\n    makeIBInvoice,\n    goBtnloading,\n    saveBtnloading\n  } = useSelector(state => ({\n    postMsg: state.InvoiceReducer.postMsg,\n    updateMsg: state.BOMReducer.updateMsg,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField,\n    customer: state.CommonAPI_Reducer.customer,\n    GoButton: state.InvoiceReducer.gobutton_Add,\n    vendorSupplierCustomer: state.CommonAPI_Reducer.vendorSupplierCustomer,\n    makeIBInvoice: state.InvoiceReducer.makeIBInvoice,\n    saveBtnloading: state.InvoiceReducer.saveBtnloading,\n    goBtnloading: state.InvoiceReducer.goBtnloading\n  }));\n  const {\n    OrderItemDetails = [],\n    OrderIDs = []\n  } = GoButton;\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\");\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  useEffect(() => {\n    dispatch(GetVenderSupplierCustomer(subPageMode));\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(pageId.INVOICE_1));\n    dispatch(GoButtonForinvoiceAddSuccess([]));\n  }, []); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserAccState(userAcc);\n\n      _cfunc.breadcrumbReturnFunc({\n        dispatch,\n        userAcc\n      });\n    }\n\n    ;\n  }, [userAccess]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (hasShowloction || hasShowModal || location.state) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      } else if (location) {\n        setPageMode(mode.defaultsave);\n        let Customer = location.state.CustomerID;\n        let CustomerName = location.state.Customer;\n        hasEditVal = {\n          Customer,\n          CustomerName\n        };\n      }\n\n      if (hasEditVal) {\n        const {\n          Customer,\n          CustomerName\n        } = hasEditVal;\n        const {\n          values,\n          hasValid\n        } = { ...state\n        };\n        hasValid.Customer.valid = true;\n        values.Customer = {\n          label: CustomerName,\n          value: Customer\n        }; //++++++++++++++++++++++++++**Dynamic go Button API Call method+++++++++++++++++\n\n        const jsonBody = JSON.stringify({\n          FromDate: hasEditVal.InvoiceDate,\n          Customer: hasEditVal.Customer,\n          Party: _cfunc.loginPartyID(),\n          OrderIDs: \"\"\n        });\n        dispatch(GoButtonForinvoiceAdd({\n          jsonBody\n        }));\n        dispatch(editInvoiceListSuccess({\n          Status: false\n        }));\n      }\n    }\n  }, []);\n  useEffect(async () => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(invoiceSaveActionSuccess({\n        Status: false\n      }));\n      dispatch(GoButtonForinvoiceAddSuccess([]));\n\n      if (pageMode === mode.dropdownAdd) {\n        customAlert({\n          Type: 1,\n          Message: JSON.stringify(postMsg.Message)\n        });\n      } else {\n        const promise = await customAlert({\n          Type: 1,\n          Message: JSON.stringify(postMsg.Message),\n          RedirectPath: url.INVOICE_LIST_1\n        });\n\n        if (promise) {\n          if (subPageMode === url.INVOICE_1) {\n            history.push({\n              pathname: url.INVOICE_LIST_1\n            });\n          } else if (subPageMode === url.IB_INVOICE) {\n            history.push({\n              pathname: url.IB_INVOICE_LIST\n            });\n          }\n        }\n      }\n    } else if (postMsg.Status === true) {\n      customAlert({\n        Type: 4,\n        Message: JSON.stringify(postMsg.Message)\n      });\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\n      history.push({\n        pathname: url.MATERIAL_ISSUE_LIST\n      });\n    } else if (updateMsg.Status === true && !modalCss) {\n      dispatch(updateBOMListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg, modalCss]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n  useEffect(() => {\n    showAllStockOnclick(OrderItemDetails, showAllStockState);\n  }, [showAllStockState]);\n  useEffect(() => {\n    if (makeIBInvoice.Status === true && makeIBInvoice.StatusCode === 200) {\n      setState(i => {\n        const obj = { ...i\n        };\n        obj.values.Customer = makeIBInvoice.customer;\n        obj.hasValid.Customer.valid = true;\n        return obj;\n      });\n      goButtonHandler(makeIBInvoice);\n      dispatch(makeIB_InvoiceActionSuccess({\n        Status: false\n      }));\n    }\n  }, [makeIBInvoice]);\n  useEffect(() => _cfunc.tableInputArrowUpDounFunc(\"#table_Arrow\"), [OrderItemDetails]);\n  const CustomerDropdown_Options = vendorSupplierCustomer.map(index => ({\n    value: index.id,\n    label: index.Name\n  }));\n  const pagesListColumns = [{\n    //***************ItemName********************************************************************* */\n    text: \"Item Name\",\n    dataField: \"ItemName\",\n    classes: () => 'invoice-item-row',\n    formatter: (cellContent, index1) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invoice-item-row-div-1\",\n          children: /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: `ItemName${index1.id}`,\n            children: index1.ItemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), index1.StockInValid ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: `StockInvalidMsg-${index1.id}`,\n            style: {\n              color: \"red\"\n            },\n            children: [\" \", index1.StockInvalidMsg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true);\n    }\n  }, {\n    //***************Quantity********************************************************************* */\n    text: \"Quantity/Unit\",\n    dataField: \"\",\n    // classes: () => ('invoice-quantity-row1'),\n    formatter: (cellContent, index1) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-1 mb-2\",\n        style: {\n          minWidth: \"200px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          disabled: pageMode === 'edit' ? true : false,\n          id: `OrderQty-${index1.id}`,\n          className: \"input\",\n          style: {\n            textAlign: \"right\"\n          },\n          autoComplete: \"off\",\n          defaultValue: index1.Quantity,\n          onChange: event => orderQtyOnChange(event, index1)\n        }, index1.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-1 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"select\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            classNamePrefix: \"select2-selection\",\n            id: \"ddlUnit\",\n            isDisabled: pageMode === 'edit' ? true : false,\n            defaultValue: index1.default_UnitDropvalue,\n            options: index1.UnitDetails.map(i => ({\n              \"label\": i.UnitName,\n              \"value\": i.UnitID,\n              \"ConversionUnit\": i.ConversionUnit,\n              \"Unitlabel\": i.Unitlabel,\n              \"BaseUnitQuantity\": i.BaseUnitQuantity,\n              \"BaseUnitQuantityNoUnit\": i.BaseUnitQuantityNoUnit\n            })),\n            onChange: event => orderQtyUnit_SelectOnchange(event, index1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Order-Qty :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"samp\", {\n          children: index1.OrderQty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"samp\", {\n          children: index1.UnitName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, {\n    //***************StockDetails********************************************************************* */\n    text: \"Stock Details\",\n    dataField: \"StockDetails\",\n    headerFormatter: function (cell) {\n      let index1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let k = arguments.length > 2 ? arguments[2] : undefined;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-content-start\",\n        children: [OrderItemDetails.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"samp\", {\n            id: \"allplus-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \" mdi mdi-plus-circle-outline text-primary font-size-16 \",\n              style: {\n                position: \"\",\n                display: showAllStockState ? \"none\" : \"block\"\n              },\n              onClick: e => {\n                setShowAllStockState(!showAllStockState);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: \"allminus-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-minus-circle-outline text-primary font-size-16\",\n              style: {\n                position: \"\",\n                display: showAllStockState ? \"block\" : \"none\"\n              },\n              onClick: e => {\n                setShowAllStockState(!showAllStockState);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 56\n        }, _this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: \"1px\",\n            paddingTop: \"1px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"samp\", {\n            children: \" Stock Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, _this);\n    },\n    formatter: (cellContent, index1) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"samp\", {\n          style: {\n            fontWeight: \"bold\",\n            textShadow: 1\n          },\n          children: 'Total Stock'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"samp\", {\n          id: `minus-circle${index1.id}`,\n          style: {\n            display: showAllStockState ? \"block\" : \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-minus-circle-outline text-primary font-size-16\",\n            style: {\n              position: \"absolute\"\n            },\n            onClick: e => {\n              showStockOnclick(index1, false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 29\n          }, this)\n        }, `minus-circle${index1.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 25\n        }, this)]\n      }, `plus-circle-icon${index1.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `view${index1.id}`,\n        style: {\n          backgroundColor: \"#b9be511a\",\n          display: showAllStockState ? \"bolck\" : \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"table table-bordered table-responsive mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Thead, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                zIndex: -3\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"BatchCode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                    children: \"Stock Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"MRP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n            children: cellContent.map(index2 => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"120px\"\n                    },\n                    children: index2.BatchCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"120px\",\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                      id: `ActualQuantity-${index1.id}-${index2.id}`,\n                      children: index2.ActualQuantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"150px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      disabled: pageMode === 'edit' ? true : false,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      id: `batchQty${index1.id}-${index2.id}`,\n                      defaultValue: index2.Qty,\n                      onChange: event => stockQtyOnChange(event, index1, index2)\n                    }, `batchQty${index1.id}-${index2.id}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"50px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: `stockItemRate-${index1.id}-${index2.id}`,\n                      children: [\" \", index2.Rate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"50px\"\n                    },\n                    children: index1.MRPValue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 45\n                }, this)]\n              }, index1.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }, this)\n  }, {\n    //***************Discount********************************************************************* */\n    text: \"Discount/unit\",\n    dataField: \"\",\n    classes: () => 'invoice-discount-row',\n    formatter: (Rate, index1, key) => {\n      if (!index1.DiscountType) index1.DiscountType = 2;\n      if (!index1.Discount) index1.Discount = 0;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: \"Type\\xA0\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                classNamePrefix: \"select2-selection\",\n                defaultValue: {\n                  value: 2,\n                  label: \" % \"\n                },\n                options: [{\n                  value: 1,\n                  label: \"Rs\"\n                }, {\n                  value: 2,\n                  label: \"%\"\n                }],\n                onChange: e => {\n                  index1.DiscountType = e.value;\n                  innerStockCaculation(index1);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: \"Value\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child\",\n              children: /*#__PURE__*/_jsxDEV(CInput, {\n                className: \"input\",\n                style: {\n                  textAlign: \"right\"\n                },\n                type: \"text\",\n                defaultValue: index1.Discount,\n                cpattern: decimalRegx,\n                onChange: e => {\n                  let e_val = e.target.value;\n\n                  if (e_val === '') {\n                    e.target.value = 0;\n                  } //******************  if discount type=2 == \"percentage\"  then only 100% iput enter*/\n\n\n                  if (index1.DiscountType === 2) {\n                    //discount type=2 === \"percentage\"\n                    if (e_val > 100) {\n                      e.target.value = 100;\n                    } else if (e_val < 0) {\n                      e.target.value = 0;\n                    }\n                  }\n\n                  index1.Discount = e.target.value;\n                  innerStockCaculation(index1);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: `tAmount-${index1.id}`,\n            children: index1.tAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n\n  function InvoiceDateOnchange(y, v, e) {\n    dispatch(GoButtonForinvoiceAddSuccess([]));\n    onChangeDate({\n      e,\n      v,\n      state,\n      setState\n    });\n  }\n\n  ;\n\n  function CustomerOnchange(hasSelect) {\n    setState(i => {\n      const v1 = { ...i\n      };\n      v1.values.Customer = hasSelect;\n      v1.hasValid.Customer.valid = true;\n      return v1;\n    });\n  }\n\n  ;\n\n  function goButtonHandler(makeIBInvoice) {\n    const btnId = goBtnId;\n\n    _cfunc.btnIsDissablefunc({\n      btnId,\n      state: true\n    });\n\n    try {\n      const jsonBody = JSON.stringify({\n        FromDate: values.InvoiceDate,\n        Customer: makeIBInvoice ? makeIBInvoice.customer.value : values.Customer.value,\n        Party: _cfunc.loginPartyID(),\n        OrderIDs: \"\"\n      });\n      dispatch(GoButtonForinvoiceAdd({\n        subPageMode,\n        jsonBody,\n        btnId\n      }));\n    } catch (e) {\n      _cfunc.btnIsDissablefunc({\n        btnId,\n        state: false\n      });\n    }\n  }\n\n  ;\n\n  const SaveHandler = async event => {\n    event.preventDefault();\n    const btnId = event.target.id;\n\n    _cfunc.btnIsDissablefunc({\n      btnId,\n      state: true\n    });\n\n    function returnFunc() {\n      _cfunc.btnIsDissablefunc({\n        btnId,\n        state: false\n      });\n    }\n\n    try {\n      const validMsg = [];\n      const invoiceItems = [];\n      let grand_total = 0;\n      OrderItemDetails.forEach(index => {\n        if (index.StockInValid) {\n          validMsg.push(`${index.ItemName}:${index.StockInvalidMsg}`);\n          return returnFunc();\n        }\n\n        ;\n        index.StockDetails.forEach(ele => {\n          if (ele.Qty > 0) {\n            const calculate = discountCalculate(ele, index);\n            grand_total = grand_total + Number(calculate.tAmount);\n            invoiceItems.push({\n              Item: index.Item,\n              Unit: index.default_UnitDropvalue.value,\n              BatchCode: ele.BatchCode,\n              Quantity: Number(ele.Qty).toFixed(3),\n              BatchDate: ele.BatchDate,\n              BatchID: ele.id,\n              BaseUnitQuantity: Number(ele.BaseUnitQuantity).toFixed(3),\n              LiveBatch: ele.LiveBatche,\n              MRP: ele.LiveBatcheMRPID,\n              MRPValue: ele.MRP,\n              //changes\n              Rate: Number(ele.Rate).toFixed(2),\n              BasicAmount: Number(calculate.discountBaseAmt).toFixed(2),\n              GSTAmount: Number(calculate.gstAmt).toFixed(2),\n              GST: ele.LiveBatcheGSTID,\n              GSTPercentage: ele.GST,\n              // changes\n              CGST: Number(calculate.CGST).toFixed(2),\n              SGST: Number(calculate.SGST).toFixed(2),\n              IGST: 0,\n              GSTPercentage: ele.GST,\n              CGSTPercentage: ele.GST / 2,\n              SGSTPercentage: ele.GST / 2,\n              IGSTPercentage: 0,\n              Amount: Number(calculate.tAmount).toFixed(2),\n              TaxType: 'GST',\n              DiscountType: index.DiscountType,\n              Discount: Number(index.Discount).toFixed(2),\n              DiscountAmount: Number(calculate.disCountAmt).toFixed(2)\n            });\n          }\n        });\n      });\n\n      if (validMsg.length > 0) {\n        customAlert({\n          Type: 4,\n          Message: JSON.stringify(validMsg)\n        });\n        return returnFunc();\n      }\n\n      if (!(invoiceItems.length > 0)) {\n        customAlert({\n          Type: 4,\n          Message: \"Please Enter One Item Quantity\"\n        });\n        return returnFunc();\n      }\n\n      const forInvoice_1_json = () => ({\n        // Json Body Generate For Invoice_1  Start+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n        InvoiceDate: values.InvoiceDate,\n        InvoiceItems: invoiceItems,\n        InvoicesReferences: OrderIDs.map(i => ({\n          Order: i\n        }))\n      });\n\n      const forIB_Invoice_json = async () => ({\n        //   Json Body Generate For IB_Invoice  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n        IBChallanDate: values.InvoiceDate,\n        IBChallanItems: invoiceItems,\n        IBChallansReferences: await OrderIDs.map(i => ({\n          Demand: i\n        }))\n      });\n\n      const for_common_json = () => ({\n        //   Json Body Generate Common for Both +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n        CustomerGSTTin: '41',\n        GrandTotal: Math.round(grand_total),\n        RoundOffAmount: (grand_total - Math.trunc(grand_total)).toFixed(2),\n        Customer: values.Customer.value,\n        Party: _cfunc.loginPartyID(),\n        CreatedBy: _cfunc.loginUserID(),\n        UpdatedBy: _cfunc.loginUserID()\n      });\n\n      let jsonBody; //json body decleration \n\n      if (subPageMode === url.INVOICE_1) {\n        jsonBody = JSON.stringify({ ...for_common_json(),\n          ...forInvoice_1_json()\n        });\n      } else if (subPageMode === url.IB_INVOICE) {\n        jsonBody = JSON.stringify({ ...for_common_json(),\n          ...forIB_Invoice_json()\n        });\n      } // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n      if (pageMode === mode.edit) {\n        returnFunc();\n      } else {\n        dispatch(invoiceSaveAction({\n          subPageMode,\n          jsonBody,\n          btnId\n        }));\n      }\n    } catch (e) {\n      returnFunc();\n    }\n  };\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: _cfunc.metaTagLabel(userPageAccessState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"px-2 mb-1 c_card_filter header text-black\",\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \" mt-1 row  \",\n              sm: 11,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"row mt-2 mb-3  \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"mt-1\",\n                    style: {\n                      width: \"150px\"\n                    },\n                    children: [fieldLabel.InvoiceDate, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 733,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"7\",\n                    children: [/*#__PURE__*/_jsxDEV(C_DatePicker, {\n                      name: \"InvoiceDate\",\n                      value: values.InvoiceDate,\n                      id: \"myInput11\",\n                      disabled: OrderItemDetails.length > 0 || pageMode === \"edit\" ? true : false,\n                      onChange: InvoiceDateOnchange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 735,\n                      columnNumber: 45\n                    }, this), isError.InvoiceDate.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"invalid-feedback\",\n                      children: isError.InvoiceDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"row mt-2 mb-3 \",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"mt-2\",\n                    style: {\n                      width: \"100px\"\n                    },\n                    children: [\" \", fieldLabel.Customer, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 7,\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      name: \"Customer\",\n                      value: values.Customer,\n                      isSearchable: true,\n                      isDisabled: OrderItemDetails.length > 0 ? true : false,\n                      id: 'customerselect',\n                      className: \"react-dropdown\",\n                      classNamePrefix: \"dropdown\",\n                      options: CustomerDropdown_Options,\n                      onChange: CustomerOnchange,\n                      styles: {\n                        menu: provided => ({ ...provided,\n                          zIndex: 2\n                        })\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 753,\n                      columnNumber: 45\n                    }, this), isError.Customer.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger f-8\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: isError.Customer\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 769,\n                        columnNumber: 83\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 1,\n              className: \"mt-3\",\n              children: pageMode === mode.defaultsave ? OrderItemDetails.length === 0 ? /*#__PURE__*/_jsxDEV(Go_Button, {\n                onClick: e => goButtonHandler(),\n                loading: goBtnloading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(Change_Button, {\n                onClick: e => dispatch(GoButtonForinvoiceAddSuccess([]))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 41\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive mb-4\",\n          children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n            keyField: \"id\",\n            data: OrderItemDetails,\n            columns: pagesListColumns,\n            search: true,\n            children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xl: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                    id: \"table_Arrow\",\n                    keyField: \"id\",\n                    responsive: true,\n                    bordered: false,\n                    striped: false,\n                    classes: \"table  table-bordered\",\n                    noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-danger text-center \",\n                      children: \"Items Not available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 53\n                    }, this),\n                    ...toolkitProps.baseProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 21\n        }, this), OrderItemDetails.length > 0 ? /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 2,\n            style: {\n              marginLeft: \"-40px\"\n            },\n            className: \"row save1\",\n            children: /*#__PURE__*/_jsxDEV(SaveButton, {\n              pageMode: pageMode,\n              onClick: SaveHandler,\n              id: saveBtnid,\n              loading: saveBtnloading,\n              userAcc: userPageAccessState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 52\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Invoice, \"1vZMcMuBSQvTBE4kCVIGyovnHTs=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Invoice;\nexport default Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"names":["React","useEffect","useState","Col","FormGroup","Input","Label","Row","Table","MetaTags","commonPageFieldSuccess","useDispatch","useSelector","AlertState","commonPageField","useHistory","comAddPageFieldFunc","initialFiledFunc","onChangeDate","Select","Change_Button","Go_Button","SaveButton","updateBOMListSuccess","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","BootstrapTable","Tbody","Thead","mode","pageId","url","editInvoiceListSuccess","GoButtonForinvoiceAdd","GoButtonForinvoiceAddSuccess","invoiceSaveAction","invoiceSaveActionSuccess","makeIB_InvoiceActionSuccess","GetVenderSupplierCustomer","customAlert","discountCalculate","innerStockCaculation","orderQtyOnChange","orderQtyUnit_SelectOnchange","showAllStockOnclick","showStockOnclick","stockDistributeFunc","stockQtyOnChange","_cfunc","CInput","C_DatePicker","decimalRegx","onlyNumberRegx","Invoice","props","dispatch","history","currentDate_ymd","date_ymd_func","subPageMode","location","pathname","goBtnId","saveBtnid","fileds","InvoiceDate","Customer","state","setState","modalCss","setModalCss","pageMode","setPageMode","defaultsave","userPageAccessState","setUserAccState","showAllStockState","setShowAllStockState","postMsg","updateMsg","pageField","userAccess","GoButton","vendorSupplierCustomer","makeIBInvoice","goBtnloading","saveBtnloading","InvoiceReducer","BOMReducer","Login","RoleAccessUpdateData","CommonPageFieldReducer","customer","CommonAPI_Reducer","gobutton_Add","OrderItemDetails","OrderIDs","hasShowloction","hasOwnProperty","hasShowModal","values","isError","fieldLabel","INVOICE_1","userAcc","locationPath","masterPath","find","inx","ActualPagePath","breadcrumbReturnFunc","hasEditVal","editValue","CustomerID","CustomerName","hasValid","valid","label","value","jsonBody","JSON","stringify","FromDate","Party","loginPartyID","Status","StatusCode","dropdownAdd","Type","Message","promise","RedirectPath","INVOICE_LIST_1","push","IB_INVOICE","IB_INVOICE_LIST","MATERIAL_ISSUE_LIST","fieldArr","PageFieldMaster","i","obj","goButtonHandler","tableInputArrowUpDounFunc","CustomerDropdown_Options","map","index","id","Name","pagesListColumns","text","dataField","classes","formatter","cellContent","index1","ItemName","StockInValid","color","StockInvalidMsg","minWidth","textAlign","Quantity","event","default_UnitDropvalue","UnitDetails","UnitName","UnitID","ConversionUnit","Unitlabel","BaseUnitQuantity","BaseUnitQuantityNoUnit","OrderQty","headerFormatter","cell","k","length","position","display","e","paddingLeft","paddingTop","fontWeight","textShadow","backgroundColor","zIndex","index2","width","BatchCode","ActualQuantity","Qty","Rate","MRPValue","key","DiscountType","Discount","e_val","target","tAmount","InvoiceDateOnchange","y","v","CustomerOnchange","hasSelect","v1","btnId","btnIsDissablefunc","SaveHandler","preventDefault","returnFunc","validMsg","invoiceItems","grand_total","forEach","StockDetails","ele","calculate","Number","Item","Unit","toFixed","BatchDate","BatchID","LiveBatch","LiveBatche","MRP","LiveBatcheMRPID","BasicAmount","discountBaseAmt","GSTAmount","gstAmt","GST","LiveBatcheGSTID","GSTPercentage","CGST","SGST","IGST","CGSTPercentage","SGSTPercentage","IGSTPercentage","Amount","TaxType","DiscountAmount","disCountAmt","forInvoice_1_json","InvoiceItems","InvoicesReferences","Order","forIB_Invoice_json","IBChallanDate","IBChallanItems","IBChallansReferences","Demand","for_common_json","CustomerGSTTin","GrandTotal","Math","round","RoundOffAmount","trunc","CreatedBy","loginUserID","UpdatedBy","edit","metaTagLabel","menu","provided","toolkitProps","baseProps","marginLeft"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Sale/Invoice/Invoice.js"],"sourcesContent":["import React, { useEffect, useState, } from \"react\";\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n    Table\r\n} from \"reactstrap\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    initialFiledFunc,\r\n    onChangeDate,\r\n} from \"../../../components/Common/validationFunction\";\r\nimport Select from \"react-select\";\r\nimport { Change_Button, Go_Button, SaveButton } from \"../../../components/Common/CommonButton\";\r\nimport {\r\n    updateBOMListSuccess\r\n} from \"../../../store/Production/BOMRedux/action\";\r\n\r\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\nimport * as mode from \"../../../routes/PageMode\";\r\nimport * as pageId from \"../../../routes/allPageID\"\r\nimport * as url from \"../../../routes/route_url\"\r\nimport {\r\n    editInvoiceListSuccess,\r\n    GoButtonForinvoiceAdd,\r\n    GoButtonForinvoiceAddSuccess,\r\n    invoiceSaveAction,\r\n    invoiceSaveActionSuccess,\r\n    makeIB_InvoiceActionSuccess\r\n} from \"../../../store/Sales/Invoice/action\";\r\nimport { GetVenderSupplierCustomer } from \"../../../store/CommonAPI/SupplierRedux/actions\";\r\nimport { customAlert } from \"../../../CustomAlert/ConfirmDialog\";\r\nimport { discountCalculate, innerStockCaculation, orderQtyOnChange, orderQtyUnit_SelectOnchange, showAllStockOnclick, showStockOnclick, stockDistributeFunc, stockQtyOnChange } from \"./invoiceCaculations\";\r\nimport \"./invoice.scss\"\r\nimport * as _cfunc from \"../../../components/Common/CommonFunction\";\r\nimport { CInput, C_DatePicker, decimalRegx, onlyNumberRegx } from \"../../../CustomValidateForm\";\r\n\r\nconst Invoice = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const currentDate_ymd = _cfunc.date_ymd_func();\r\n    const subPageMode = history.location.pathname\r\n\r\n    const goBtnId = `ADDGoBtn${subPageMode}`\r\n    const saveBtnid = `saveBtn${subPageMode}`\r\n\r\n    const fileds = {\r\n        InvoiceDate: currentDate_ymd,\r\n        Customer: \"\",\r\n    }\r\n\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(mode.defaultsave);\r\n    const [userPageAccessState, setUserAccState] = useState('');\r\n    const [showAllStockState, setShowAllStockState] = useState(true);\r\n\r\n    const {\r\n        postMsg,\r\n        updateMsg,\r\n        pageField,\r\n        userAccess,\r\n        GoButton = '',\r\n        vendorSupplierCustomer,\r\n        makeIBInvoice,\r\n        goBtnloading,\r\n        saveBtnloading\r\n    } = useSelector((state) => ({\r\n        postMsg: state.InvoiceReducer.postMsg,\r\n        updateMsg: state.BOMReducer.updateMsg,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField,\r\n        customer: state.CommonAPI_Reducer.customer,\r\n        GoButton: state.InvoiceReducer.gobutton_Add,\r\n        vendorSupplierCustomer: state.CommonAPI_Reducer.vendorSupplierCustomer,\r\n        makeIBInvoice: state.InvoiceReducer.makeIBInvoice,\r\n        saveBtnloading: state.InvoiceReducer.saveBtnloading,\r\n        goBtnloading: state.InvoiceReducer.goBtnloading,\r\n    }));\r\n\r\n    const { OrderItemDetails = [], OrderIDs = [] } = GoButton;\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetVenderSupplierCustomer(subPageMode))\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(pageId.INVOICE_1))\r\n        dispatch(GoButtonForinvoiceAddSuccess([]))\r\n\r\n    }, []);\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserAccState(userAcc)\r\n            _cfunc.breadcrumbReturnFunc({ dispatch, userAcc });\r\n        };\r\n    }, [userAccess])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if ((hasShowloction || hasShowModal || (location.state))) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n            else if (location) {\r\n\r\n                setPageMode(mode.defaultsave)\r\n\r\n                let Customer = location.state.CustomerID\r\n                let CustomerName = location.state.Customer\r\n\r\n                hasEditVal = { Customer, CustomerName }\r\n\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                const { Customer, CustomerName, } = hasEditVal\r\n                const { values, hasValid, } = { ...state }\r\n                hasValid.Customer.valid = true;\r\n\r\n                values.Customer = { label: CustomerName, value: Customer };\r\n\r\n                //++++++++++++++++++++++++++**Dynamic go Button API Call method+++++++++++++++++\r\n                const jsonBody = JSON.stringify({\r\n                    FromDate: hasEditVal.InvoiceDate,\r\n                    Customer: hasEditVal.Customer,\r\n                    Party: _cfunc.loginPartyID(),\r\n                    OrderIDs: \"\"\r\n                });\r\n                dispatch(GoButtonForinvoiceAdd({ jsonBody, }));\r\n                dispatch(editInvoiceListSuccess({ Status: false }))\r\n\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(invoiceSaveActionSuccess({ Status: false }))\r\n            dispatch(GoButtonForinvoiceAddSuccess([]))\r\n\r\n            if (pageMode === mode.dropdownAdd) {\r\n                customAlert({\r\n                    Type: 1,\r\n                    Message: JSON.stringify(postMsg.Message),\r\n                })\r\n            }\r\n            else {\r\n                const promise = await customAlert({\r\n                    Type: 1,\r\n                    Message: JSON.stringify(postMsg.Message),\r\n                    RedirectPath: url.INVOICE_LIST_1,\r\n                })\r\n                if (promise) {\r\n                    if (subPageMode === url.INVOICE_1) {\r\n                        history.push({ pathname: url.INVOICE_LIST_1 })\r\n                    }\r\n                    else if (subPageMode === url.IB_INVOICE) {\r\n                        history.push({ pathname: url.IB_INVOICE_LIST })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            customAlert({\r\n                Type: 4,\r\n                Message: JSON.stringify(postMsg.Message),\r\n            })\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n\r\n        if ((updateMsg.Status === true) && (updateMsg.StatusCode === 200) && !(modalCss)) {\r\n            history.push({\r\n                pathname: url.MATERIAL_ISSUE_LIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            dispatch(updateBOMListSuccess({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    useEffect(() => {\r\n        showAllStockOnclick(OrderItemDetails, showAllStockState)\r\n    }, [showAllStockState]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (makeIBInvoice.Status === true && makeIBInvoice.StatusCode === 200) {\r\n            setState((i) => {\r\n                const obj = { ...i }\r\n                obj.values.Customer = makeIBInvoice.customer;\r\n                obj.hasValid.Customer.valid = true;\r\n                return obj\r\n            })\r\n            goButtonHandler(makeIBInvoice);\r\n            dispatch(makeIB_InvoiceActionSuccess({ Status: false }))\r\n        }\r\n    }, [makeIBInvoice]);\r\n\r\n\r\n    useEffect(() => _cfunc.tableInputArrowUpDounFunc(\"#table_Arrow\"), [OrderItemDetails]);\r\n\r\n\r\n    const CustomerDropdown_Options = vendorSupplierCustomer.map((index) => ({\r\n        value: index.id,\r\n        label: index.Name,\r\n\r\n    }));\r\n\r\n\r\n    const pagesListColumns = [\r\n        {//***************ItemName********************************************************************* */\r\n            text: \"Item Name\",\r\n            dataField: \"ItemName\",\r\n            classes: () => ('invoice-item-row'),\r\n            formatter: (cellContent, index1) => {\r\n                return (\r\n                    <>\r\n                        <div className=\"invoice-item-row-div-1\">\r\n                            <samp id={`ItemName${index1.id}`}>{index1.ItemName}</samp>\r\n                        </div>\r\n                        {\r\n                            (index1.StockInValid) ? <div><samp id={`StockInvalidMsg-${index1.id}`} style={{ color: \"red\" }}> {index1.StockInvalidMsg}</samp></div>\r\n                                : <></>\r\n                        }\r\n                    </>\r\n                )\r\n            },\r\n\r\n\r\n        },\r\n        {//***************Quantity********************************************************************* */\r\n            text: \"Quantity/Unit\",\r\n            dataField: \"\",\r\n            // classes: () => ('invoice-quantity-row1'),\r\n            formatter: (cellContent, index1) => (\r\n                <>\r\n                    <div className=\"div-1 mb-2\" style={{ minWidth: \"200px\" }}>\r\n                        <Input type=\"text\"\r\n                            disabled={pageMode === 'edit' ? true : false}\r\n                            id={`OrderQty-${index1.id}`}\r\n                            className=\"input\"\r\n                            style={{ textAlign: \"right\" }}\r\n                            key={index1.id}\r\n                            autoComplete=\"off\"\r\n                            defaultValue={index1.Quantity}\r\n                            onChange={(event) => orderQtyOnChange(event, index1)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"div-1 \">\r\n                        {/* <label className=\"label\">Unit</label> */}\r\n                        <div id=\"select\">\r\n                            <Select\r\n                                classNamePrefix=\"select2-selection\"\r\n                                id={\"ddlUnit\"}\r\n                                isDisabled={pageMode === 'edit' ? true : false}\r\n                                defaultValue={index1.default_UnitDropvalue}\r\n\r\n                                options={\r\n                                    index1.UnitDetails.map(i => ({\r\n                                        \"label\": i.UnitName,\r\n                                        \"value\": i.UnitID,\r\n                                        \"ConversionUnit\": i.ConversionUnit,\r\n                                        \"Unitlabel\": i.Unitlabel,\r\n                                        \"BaseUnitQuantity\": i.BaseUnitQuantity,\r\n                                        \"BaseUnitQuantityNoUnit\": i.BaseUnitQuantityNoUnit,\r\n                                    }))\r\n                                }\r\n                                onChange={(event) => orderQtyUnit_SelectOnchange(event, index1)}\r\n                            >\r\n                            </Select >\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"bottom-div\">\r\n                        <span>Order-Qty :</span>\r\n                        <samp >{index1.OrderQty}</samp>\r\n                        <samp >{index1.UnitName}</samp></div>\r\n                </>\r\n\r\n            )\r\n        },\r\n\r\n\r\n        {//***************StockDetails********************************************************************* */\r\n            text: \"Stock Details\",\r\n            dataField: \"StockDetails\",\r\n            headerFormatter: (cell, index1 = [], k) => {\r\n\r\n                return (\r\n                    <div className=\"d-flex flex-content-start\">\r\n                        {OrderItemDetails.length > 0 ? <div>\r\n                            <samp id=\"allplus-circle\">\r\n                                <i className=\" mdi mdi-plus-circle-outline text-primary font-size-16 \"\r\n                                    style={{\r\n                                        position: \"\",\r\n                                        display: showAllStockState ? \"none\" : \"block\"\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        setShowAllStockState(!showAllStockState)\r\n                                    }}\r\n                                >\r\n                                </i>\r\n                            </samp>\r\n                            <samp id=\"allminus-circle\"  >\r\n                                <i className=\"mdi mdi-minus-circle-outline text-primary font-size-16\"\r\n                                    style={{\r\n                                        position: \"\",\r\n                                        display: showAllStockState ? \"block\" : \"none\"\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        setShowAllStockState(!showAllStockState)\r\n                                    }}\r\n                                ></i>\r\n                            </samp>\r\n                        </div>\r\n                            : null\r\n                        }\r\n\r\n                        <div style={{ paddingLeft: \"1px\", paddingTop: \"1px\" }}>\r\n                            <samp > Stock Details</samp>\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n            },\r\n\r\n            formatter: (cellContent, index1) => (\r\n                <div>\r\n                    <div key={`plus-circle-icon${index1.id}`}>\r\n                        <samp style={{ fontWeight: \"bold\", textShadow: 1, }}>{'Total Stock'}</samp>\r\n\r\n                        <samp key={`minus-circle${index1.id}`} id={`minus-circle${index1.id}`}\r\n                            style={{ display: showAllStockState ? \"block\" : \"none\" }}\r\n                        >\r\n                            <i className=\"mdi mdi-minus-circle-outline text-primary font-size-16\"\r\n                                style={{ position: \"absolute\", }}\r\n                                onClick={(e) => { showStockOnclick(index1, false) }}\r\n                            ></i>\r\n                        </samp>\r\n\r\n                    </div >\r\n\r\n                    <div id={`view${index1.id}`}\r\n                        style={{\r\n                            backgroundColor: \"#b9be511a\",\r\n                            display: showAllStockState ? \"bolck\" : \"none\"\r\n                        }}\r\n\r\n                    >\r\n                        <Table className=\"table table-bordered table-responsive mb-1\" >\r\n\r\n                            <Thead  >\r\n\r\n                                <tr style={{ zIndex: -3 }}>\r\n                                    {/* <th >Batch Code </th> */}\r\n                                    <th>BatchCode</th>\r\n                                    {/* <th  >Batch Date</th> */}\r\n                                    <th >\r\n                                        <div>\r\n                                            <samp >Stock Quantity</samp>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th className=\"\" >\r\n                                        <div>\r\n                                            <samp >Quantity</samp>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th  >Rate</th>\r\n                                    <th  >MRP</th>\r\n                                </tr>\r\n                            </Thead>\r\n                            <Tbody  >\r\n                                {cellContent.map((index2) => {\r\n\r\n                                    return (\r\n                                        < tr key={index1.id} >\r\n                                            {/* <td>\r\n                                                <div style={{ width: \"120px\" }}>\r\n                                                    {index2.SystemBatchCode}\r\n                                                </div>\r\n                                            </td> */}\r\n                                            <td>\r\n                                                <div style={{ width: \"120px\" }}>\r\n                                                    {index2.BatchCode}\r\n                                                </div>\r\n                                            </td>\r\n                                            {/* <td>\r\n                                                <div style={{ width: \"90px\" }}>\r\n                                                    {_cfunc.date_dmy_func(index2.BatchDate)}\r\n                                                </div>\r\n                                            </td> */}\r\n                                            <td>\r\n                                                <div style={{ width: \"120px\", textAlign: \"right\" }}>\r\n                                                    <samp id={`ActualQuantity-${index1.id}-${index2.id}`}>{index2.ActualQuantity}</samp>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div style={{ width: \"150px\" }}>\r\n                                                    <Input type=\"text\"\r\n                                                        disabled={pageMode === 'edit' ? true : false}\r\n                                                        style={{ textAlign: \"right\" }}\r\n                                                        key={`batchQty${index1.id}-${index2.id}`}\r\n                                                        id={`batchQty${index1.id}-${index2.id}`}\r\n                                                        defaultValue={index2.Qty}\r\n                                                        onChange={(event) => stockQtyOnChange(event, index1, index2)}\r\n                                                    ></Input>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div style={{ width: \"50px\" }}>\r\n                                                    <span id={`stockItemRate-${index1.id}-${index2.id}`}> {index2.Rate}</span>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div style={{ width: \"50px\" }}>\r\n                                                    {index1.MRPValue}\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </Tbody>\r\n                        </Table></div>\r\n                </div >\r\n            ),\r\n\r\n        },\r\n        {//***************Discount********************************************************************* */\r\n            text: \"Discount/unit\",\r\n            dataField: \"\",\r\n            classes: () => ('invoice-discount-row'),\r\n            formatter: (Rate, index1, key) => {\r\n                if (!index1.DiscountType) index1.DiscountType = 2\r\n                if (!index1.Discount) index1.Discount = 0\r\n                return (\r\n                    <>\r\n                        <div className=\"mb-2\">\r\n                            <div className=\"parent\">\r\n                                <div className=\"child\">\r\n                                    <label className=\"label\" >Type&nbsp;&nbsp;&nbsp;</label>\r\n                                </div>\r\n\r\n                                <div className=\"child\">\r\n                                    <Select\r\n                                        classNamePrefix=\"select2-selection\"\r\n                                        defaultValue={{ value: 2, label: \" % \" }}\r\n                                        options={[{ value: 1, label: \"Rs\" },\r\n                                        { value: 2, label: \"%\" }]}\r\n                                        onChange={(e) => {\r\n                                            index1.DiscountType = e.value\r\n                                            innerStockCaculation(index1)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div >\r\n                            <div className=\"parent\">\r\n                                <div className=\"child\">\r\n                                    <label className=\"label\">Value&nbsp;</label>\r\n                                </div>\r\n                                <div className=\"child\">\r\n                                    <CInput\r\n                                        className=\"input\"\r\n                                        style={{ textAlign: \"right\" }}\r\n                                        type=\"text\" defaultValue={index1.Discount}\r\n                                        cpattern={decimalRegx}\r\n                                        onChange={(e) => {\r\n                                            let e_val = e.target.value;\r\n\r\n                                            if (e_val === '') {\r\n                                                e.target.value = 0\r\n                                            }\r\n                                            //******************  if discount type=2 == \"percentage\"  then only 100% iput enter*/\r\n                                            if ((index1.DiscountType === 2)) {//discount type=2 === \"percentage\"\r\n                                                if ((e_val > 100)) {\r\n                                                    e.target.value = 100\r\n                                                } else if (e_val < 0) {\r\n                                                    e.target.value = 0\r\n                                                }\r\n                                            }\r\n                                          \r\n                                            index1.Discount = e.target.value;\r\n                                            innerStockCaculation(index1)\r\n                                        }}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bottom-div\">\r\n                            <span>Amount:</span>\r\n                            <samp id={`tAmount-${index1.id}`}>{index1.tAmount}</samp>\r\n                        </div>\r\n\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n    function InvoiceDateOnchange(y, v, e) {\r\n        dispatch(GoButtonForinvoiceAddSuccess([]))\r\n        onChangeDate({ e, v, state, setState })\r\n    };\r\n\r\n    function CustomerOnchange(hasSelect,) {\r\n\r\n        setState((i) => {\r\n            const v1 = { ...i }\r\n            v1.values.Customer = hasSelect\r\n            v1.hasValid.Customer.valid = true\r\n            return v1\r\n        })\r\n    };\r\n\r\n    function goButtonHandler(makeIBInvoice) {\r\n        const btnId = goBtnId;\r\n        _cfunc.btnIsDissablefunc({ btnId, state: true })\r\n\r\n        try {\r\n            const jsonBody = JSON.stringify({\r\n                FromDate: values.InvoiceDate,\r\n                Customer: makeIBInvoice ? makeIBInvoice.customer.value : values.Customer.value,\r\n                Party: _cfunc.loginPartyID(),\r\n                OrderIDs: \"\"\r\n            });\r\n            dispatch(GoButtonForinvoiceAdd({ subPageMode, jsonBody, btnId }));\r\n\r\n        } catch (e) { _cfunc.btnIsDissablefunc({ btnId, state: false }) }\r\n    };\r\n\r\n    const SaveHandler = async (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const btnId = event.target.id\r\n        _cfunc.btnIsDissablefunc({ btnId, state: true })\r\n\r\n        function returnFunc() {\r\n            _cfunc.btnIsDissablefunc({ btnId, state: false })\r\n        }\r\n        try {\r\n\r\n            const validMsg = []\r\n            const invoiceItems = []\r\n            let grand_total = 0;\r\n\r\n            OrderItemDetails.forEach((index) => {\r\n                if (index.StockInValid) {\r\n                    validMsg.push(`${index.ItemName}:${index.StockInvalidMsg}`);\r\n                    return returnFunc()\r\n                };\r\n\r\n                index.StockDetails.forEach((ele) => {\r\n\r\n                    if (ele.Qty > 0) {\r\n\r\n                        const calculate = discountCalculate(ele, index)\r\n\r\n                        grand_total = grand_total + Number(calculate.tAmount)\r\n\r\n                        invoiceItems.push({\r\n                            Item: index.Item,\r\n                            Unit: index.default_UnitDropvalue.value,\r\n                            BatchCode: ele.BatchCode,\r\n                            Quantity: Number(ele.Qty).toFixed(3),\r\n                            BatchDate: ele.BatchDate,\r\n                            BatchID: ele.id,\r\n                            BaseUnitQuantity: Number(ele.BaseUnitQuantity).toFixed(3),\r\n                            LiveBatch: ele.LiveBatche,\r\n                            MRP: ele.LiveBatcheMRPID,\r\n                            MRPValue: ele.MRP,//changes\r\n                            Rate: Number(ele.Rate).toFixed(2),\r\n                            BasicAmount: Number(calculate.discountBaseAmt).toFixed(2),\r\n                            GSTAmount: Number(calculate.gstAmt).toFixed(2),\r\n                            GST: ele.LiveBatcheGSTID,\r\n                            GSTPercentage: ele.GST,// changes\r\n                            CGST: Number(calculate.CGST).toFixed(2),\r\n                            SGST: Number(calculate.SGST).toFixed(2),\r\n                            IGST: 0,\r\n                            GSTPercentage: ele.GST,\r\n                            CGSTPercentage: (ele.GST / 2),\r\n                            SGSTPercentage: (ele.GST / 2),\r\n                            IGSTPercentage: 0,\r\n                            Amount: Number(calculate.tAmount).toFixed(2),\r\n                            TaxType: 'GST',\r\n                            DiscountType: index.DiscountType,\r\n                            Discount: Number(index.Discount).toFixed(2),\r\n                            DiscountAmount: Number(calculate.disCountAmt).toFixed(2),\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n\r\n            if (validMsg.length > 0) {\r\n                customAlert({\r\n                    Type: 4,\r\n                    Message: JSON.stringify(validMsg),\r\n                })\r\n                return returnFunc()\r\n            }\r\n\r\n            if (!(invoiceItems.length > 0)) {\r\n                customAlert({\r\n                    Type: 4,\r\n                    Message: \"Please Enter One Item Quantity\",\r\n                })\r\n                return returnFunc()\r\n            }\r\n\r\n            const forInvoice_1_json = () => ({  // Json Body Generate For Invoice_1  Start+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n                InvoiceDate: values.InvoiceDate,\r\n                InvoiceItems: invoiceItems,\r\n                InvoicesReferences: OrderIDs.map(i => ({ Order: i }))\r\n            });\r\n\r\n            const forIB_Invoice_json = async () => ({    //   Json Body Generate For IB_Invoice  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n                IBChallanDate: values.InvoiceDate,\r\n                IBChallanItems: invoiceItems,\r\n                IBChallansReferences: await OrderIDs.map(i => ({ Demand: i }))\r\n            });\r\n\r\n            const for_common_json = () => ({     //   Json Body Generate Common for Both +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n                CustomerGSTTin: '41',\r\n                GrandTotal: Math.round(grand_total),\r\n                RoundOffAmount: (grand_total - Math.trunc(grand_total)).toFixed(2),\r\n                Customer: values.Customer.value,\r\n                Party: _cfunc.loginPartyID(),\r\n                CreatedBy: _cfunc.loginUserID(),\r\n                UpdatedBy: _cfunc.loginUserID(),\r\n            });\r\n\r\n\r\n            let jsonBody;  //json body decleration \r\n            if (subPageMode === url.INVOICE_1) {\r\n                jsonBody = JSON.stringify({ ...for_common_json(), ...forInvoice_1_json() });\r\n            } else if (subPageMode === url.IB_INVOICE) {\r\n                jsonBody = JSON.stringify({ ...for_common_json(), ...forIB_Invoice_json() });\r\n            }\r\n            // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n            if (pageMode === mode.edit) {\r\n                returnFunc()\r\n            }\r\n\r\n            else {\r\n                dispatch(invoiceSaveAction({ subPageMode, jsonBody, btnId }));\r\n            }\r\n\r\n        } catch (e) { returnFunc() }\r\n\r\n    }\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags>{_cfunc.metaTagLabel(userPageAccessState)}</MetaTags>\r\n\r\n                <div className=\"page-content\" >\r\n\r\n                    {/* <form noValidate> */}\r\n                    <Col className=\"px-2 mb-1 c_card_filter header text-black\" sm={12}>\r\n                        <Row>\r\n                            <Col className=\" mt-1 row  \" sm={11} >\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\"row mt-2 mb-3  \">\r\n                                        <Label className=\"mt-1\" style={{ width: \"150px\" }}>{fieldLabel.InvoiceDate} </Label>\r\n                                        <Col sm=\"7\">\r\n                                            <C_DatePicker\r\n                                                name=\"InvoiceDate\"\r\n                                                value={values.InvoiceDate}\r\n                                                id=\"myInput11\"\r\n                                                disabled={(OrderItemDetails.length > 0 || pageMode === \"edit\") ? true : false}\r\n                                                onChange={InvoiceDateOnchange}\r\n                                            />\r\n                                            {isError.InvoiceDate.length > 0 && (\r\n                                                <span className=\"invalid-feedback\">{isError.InvoiceDate}</span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col>\r\n\r\n                                <Col sm=\"6\">\r\n                                    <FormGroup className=\"row mt-2 mb-3 \">\r\n                                        <Label className=\"mt-2\" style={{ width: \"100px\" }}> {fieldLabel.Customer} </Label>\r\n                                        <Col sm={7}>\r\n                                            <Select\r\n\r\n                                                name=\"Customer\"\r\n                                                value={values.Customer}\r\n                                                isSearchable={true}\r\n                                                isDisabled={OrderItemDetails.length > 0 ? true : false}\r\n                                                id={'customerselect'}\r\n                                                className=\"react-dropdown\"\r\n                                                classNamePrefix=\"dropdown\"\r\n                                                options={CustomerDropdown_Options}\r\n                                                onChange={CustomerOnchange}\r\n                                                styles={{\r\n                                                    menu: provided => ({ ...provided, zIndex: 2 })\r\n                                                }}\r\n                                            />\r\n                                            {isError.Customer.length > 0 && (\r\n                                                <span className=\"text-danger f-8\"><small>{isError.Customer}</small></span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Col >\r\n                            </Col>\r\n\r\n                            <Col sm={1} className=\"mt-3\">\r\n                                {pageMode === mode.defaultsave ?\r\n                                    (OrderItemDetails.length === 0) ?\r\n                                        < Go_Button onClick={(e) => goButtonHandler()}\r\n                                            loading={goBtnloading} />\r\n                                        :\r\n                                        <Change_Button onClick={(e) => dispatch(GoButtonForinvoiceAddSuccess([]))} />\r\n                                    : null\r\n                                }\r\n                            </Col>\r\n                            <Col>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n\r\n                    <div className=\"table-responsive mb-4\">\r\n                        <ToolkitProvider\r\n                            keyField={\"id\"}\r\n                            data={OrderItemDetails}\r\n                            columns={pagesListColumns}\r\n\r\n                            search\r\n                        >\r\n                            {(toolkitProps) => (\r\n                                <React.Fragment>\r\n                                    <Row>\r\n                                        <Col xl=\"12\">\r\n                                            <BootstrapTable\r\n                                                id=\"table_Arrow\"\r\n                                                keyField={\"id\"}\r\n                                                responsive\r\n                                                bordered={false}\r\n                                                striped={false}\r\n                                                classes={\"table  table-bordered\"}\r\n                                                noDataIndication={\r\n                                                    <div className=\"text-danger text-center \">\r\n                                                        Items Not available\r\n                                                    </div>\r\n                                                }\r\n                                                {...toolkitProps.baseProps}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </React.Fragment>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    </div>\r\n\r\n                    {OrderItemDetails.length > 0 ? <FormGroup>\r\n                        <Col sm={2} style={{ marginLeft: \"-40px\" }} className={\"row save1\"}>\r\n                            <SaveButton\r\n                                pageMode={pageMode}\r\n                                onClick={SaveHandler}\r\n                                id={saveBtnid}\r\n                                loading={saveBtnloading}\r\n                                userAcc={userPageAccessState}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup > : null}\r\n                    {/* </form> */}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Invoice"],"mappings":"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"},"metadata":{},"sourceType":"module"}