{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\Reports\\\\ProductMarginReport\\\\ProductMarginReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Card, CardBody, CardHeader, Col, Container, Label, Row } from \"reactstrap\";\nimport { breadcrumbReturnFunc } from '../../components/Common/CommonFunction';\nimport * as url from \"../../routes/route_url\";\nimport * as pageId from \"../../routes/allPageID\";\nimport { commonPageField, commonPageFieldSuccess } from '../../store/actions';\nimport * as mode from \"../../routes/PageMode\";\nimport { getExcel_Button_API, getExcel_Button_API_Success } from '../../store/Report/SapLedger Redux/action';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductMarginReport = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [pageMode, setPageMode] = useState(mode.defaultsave); //changes\n\n  const [modalCss, setModalCss] = useState(false);\n  const [userPageAccessState, setUserAccState] = useState(123); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    userAccess,\n    ProductMarginData\n  } = useSelector(state => ({\n    userAccess: state.Login.RoleAccessUpdateData,\n    ProductMarginData: state.SapLedgerReducer.ProductMargin,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    const page_Id = pageId.PRODUCT_MARGIN_REPORT; //changes\n\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(page_Id));\n  }, []);\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(mode.editValue); //changes\n\n  const hasShowModal = props.hasOwnProperty(mode.editValue); //changes\n  // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserAccState(userAcc);\n      breadcrumbReturnFunc({\n        dispatch,\n        userAcc\n      });\n    }\n\n    ;\n  }, [userAccess]);\n  useEffect(() => {\n    if (ProductMarginData.length > 1) {\n      let newArray = [];\n      ProductMarginData.forEach(i => {\n        let obj = i;\n        i.ItemMargins.forEach(ele => {\n          const keys = Object.keys(ele);\n          keys.forEach(key => {\n            obj[key] = ele[key];\n          });\n        });\n        delete obj.ItemMargins;\n        newArray.push(obj);\n      });\n      const worksheet = XLSX.utils.json_to_sheet(newArray);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"ProductMargin1\");\n      XLSX.writeFile(workbook, \"Product Margin Report.xlsx\");\n      dispatch(getExcel_Button_API_Success([]));\n    }\n  }, [ProductMarginData]);\n\n  function excelhandler(event) {\n    event.preventDefault();\n    const btnId = \"excelbtn-id\";\n    const ProductMargin = [];\n    dispatch(getExcel_Button_API());\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"ProductMarginReport | FoodERP 2.0 - React Admin & Dashboard Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: 4,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  lg: 6,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    className: \"btn btn-success\",\n                    id: \"excelbtn-id\",\n                    onClick: excelhandler,\n                    children: \"ProductMarginReport\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductMarginReport, \"qj3vtnJHUb2txXZQpG2fXSla/IM=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = ProductMarginReport;\nexport default ProductMarginReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductMarginReport\");","map":{"version":3,"names":["React","useEffect","useState","MetaTags","useDispatch","useSelector","useHistory","Button","Card","CardBody","CardHeader","Col","Container","Label","Row","breadcrumbReturnFunc","url","pageId","commonPageField","commonPageFieldSuccess","mode","getExcel_Button_API","getExcel_Button_API_Success","XLSX","ProductMarginReport","props","history","dispatch","pageMode","setPageMode","defaultsave","modalCss","setModalCss","userPageAccessState","setUserAccState","userAccess","ProductMarginData","state","Login","RoleAccessUpdateData","SapLedgerReducer","ProductMargin","pageField","CommonPageFieldReducer","page_Id","PRODUCT_MARGIN_REPORT","location","hasShowloction","hasOwnProperty","editValue","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","length","newArray","forEach","i","obj","ItemMargins","ele","keys","Object","key","push","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","excelhandler","event","preventDefault","btnId"],"sources":["D:/Rohit/Git projects/Manthan/src/Reports/ProductMarginReport/ProductMarginReport.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container, Label, Row,\r\n} from \"reactstrap\";\r\nimport { breadcrumbReturnFunc } from '../../components/Common/CommonFunction';\r\nimport * as url from \"../../routes/route_url\";\r\nimport * as pageId from \"../../routes/allPageID\"\r\nimport { commonPageField, commonPageFieldSuccess } from '../../store/actions';\r\nimport * as mode from \"../../routes/PageMode\"\r\nimport { getExcel_Button_API, getExcel_Button_API_Success } from '../../store/Report/SapLedger Redux/action';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ProductMarginReport = (props) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const [pageMode, setPageMode] = useState(mode.defaultsave);//changes\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [userPageAccessState, setUserAccState] = useState(123);\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        userAccess,\r\n        ProductMarginData,\r\n       } = useSelector((state) => ({\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            ProductMarginData: state.SapLedgerReducer.ProductMargin,\r\n            pageField: state.CommonPageFieldReducer.pageField,\r\n           \r\n        }));\r\n\r\n\r\n    useEffect(() => {\r\n        const page_Id = pageId.PRODUCT_MARGIN_REPORT//changes\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(page_Id))\r\n    }, []);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(mode.editValue)//changes\r\n    const hasShowModal = props.hasOwnProperty(mode.editValue)//changes\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserAccState(userAcc)\r\n            breadcrumbReturnFunc({ dispatch, userAcc });\r\n        };\r\n    }, [userAccess])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (ProductMarginData.length > 1) {\r\n\r\n            let newArray = []\r\n            ProductMarginData.forEach(i => {\r\n                let obj = i\r\n                i.ItemMargins.forEach(ele => {\r\n                    const keys = Object.keys(ele);\r\n                    keys.forEach(key => {\r\n                        obj[key] = ele[key]\r\n                    })\r\n                })\r\n                delete obj.ItemMargins\r\n                newArray.push(obj)\r\n            })\r\n\r\n            const worksheet = XLSX.utils.json_to_sheet(newArray);\r\n            const workbook = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(workbook, worksheet, \"ProductMargin1\");\r\n            XLSX.writeFile(workbook, \"Product Margin Report.xlsx\");\r\n\r\n            dispatch(getExcel_Button_API_Success([]));\r\n        }\r\n    }, [ProductMarginData]);\r\n\r\n    function excelhandler(event) {\r\n        event.preventDefault();\r\n        const btnId = \"excelbtn-id\"\r\n        const ProductMargin = []\r\n        dispatch(getExcel_Button_API())\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page-content\">\r\n                <MetaTags>\r\n                    <title>ProductMarginReport | FoodERP 2.0 - React Admin & Dashboard Template</title>\r\n                </MetaTags>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xl={4} md={4} >\r\n                                <CardBody>\r\n                                    <Row>\r\n                                        <Col lg={6}>\r\n                                            <Button type='button'\r\n                                                className='btn btn-success'\r\n                                                id=\"excelbtn-id\"\r\n                                                onClick={excelhandler}>ProductMarginReport\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProductMarginReport;"],"mappings":"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"},"metadata":{},"sourceType":"module"}