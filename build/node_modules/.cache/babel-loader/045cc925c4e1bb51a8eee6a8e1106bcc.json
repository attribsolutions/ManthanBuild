{"ast":null,"code":"import _defineProperty from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{invoice}from\"../ReportIndex\";import{numberWithCommas}from\"../Report_common_function\";export var columnsWithCGST_SGST=[\"SN\",\"HSN Item Name\",\"Quantity (UOM)\",\"MRP\",\"Rate\",\"Discount\",\"Discount Amount \",\"Taxable Amount\",\"          CGST           %        Amount\",\"CGST Amount\",\"          SGST           %        Amount\",\"SGST Amount\",\"Amount\"];export var columnsWithIGST=[\"SN\",\"HSN Item Name\",\"Quantity (UOM)\",\"MRP\",\"Rate\",\"Discount\",\"Discount Amount \",\"Taxable Amount\",\"          IGST           %         Amount\",\"IGST Amount\",\"Amount\"];export var Bankcolumn=[\"\",\"\",\"\"];export var BilledBy=[\"Billed by\"];export var BilledTo=[\"Billed by\"];export var DetailsOfTransport=[\"Billed by\"];export var RowsWithCGST_SGST=function RowsWithCGST_SGST(data){var _data$CRDRNoteItems=data.CRDRNoteItems,CRDRNoteItems=_data$CRDRNoteItems===void 0?[]:_data$CRDRNoteItems;CRDRNoteItems.sort(function(firstItem,secondItem){return firstItem.GSTPercentage-secondItem.GSTPercentage;});var returnArr=[];var Gst=0;var totalBasicAmount=0;var totalCGst=0;var totalSGst=0;var totalAmount=0;var totalQuantity=0;var SrNO=1;var TotalGst=0;var GSTPercentage=0;var groupedItems=CRDRNoteItems.reduce(function(accumulator,currentItem){var HSNCode=currentItem.HSNCode,ItemName=currentItem.ItemName,MRP=currentItem.MRP,Rate=currentItem.Rate,Discount=currentItem.Discount,CGST=currentItem.CGST,SGST=currentItem.SGST,Amount=currentItem.Amount,DiscountAmount=currentItem.DiscountAmount,BasicAmount=currentItem.BasicAmount,Quantity=currentItem.Quantity,UnitName=currentItem.UnitName,MRPValue=currentItem.MRPValue,CGSTPercentage=currentItem.CGSTPercentage,SGSTPercentage=currentItem.SGSTPercentage,GSTPercentage=currentItem.GSTPercentage,BatchCode=currentItem.BatchCode,BatchDate=currentItem.BatchDate,DiscountType=currentItem.DiscountType,PrimaryUnitName=currentItem.PrimaryUnitName;var PcsinNumber=\"\";var PcsinNumberUnit=\"\";var pattern=/\\((.*?)\\)/;// if (currentItem.UnitName !== \"\") {\n//     const matchFound = currentItem.UnitName.match(pattern);\n//     const extractedText = matchFound[1];\n//     console.log(extractedText); // Output: \"19.0 No\"\n//     const match = extractedText.split(\" \")\n//     PcsinNumber = match[0];\n//     PcsinNumberUnit = match[1];\n// }\nvar key=ItemName+'_'+MRP;if(accumulator[key]){accumulator[key].PcsinNumber+=Number(PcsinNumber);// accumulator[key].UnitName += Number(UnitName);\naccumulator[key].DiscountAmount+=Number(DiscountAmount);accumulator[key].Quantity+=Number(Quantity);accumulator[key].BasicAmount+=Number(BasicAmount);accumulator[key].CGST+=Number(CGST);accumulator[key].SGST+=Number(SGST);accumulator[key].Amount+=Number(Amount);accumulator[key].BatchCode+=BatchCode;accumulator[key].BatchDate+=BatchDate;accumulator[key].quantityString+=\" ,  \".concat(BatchCode,\" \").concat(BatchDate,\" \");}else{var _accumulator$key;accumulator[key]=(_accumulator$key={ItemName:ItemName,HSNCode:HSNCode,MRPValue:MRPValue,DiscountType:DiscountType,Rate:Rate,Discount:Discount,PcsinNumberUnit:PcsinNumberUnit,PcsinNumber:Number(PcsinNumber),CGST:Number(CGST),SGST:Number(SGST),Amount:Number(Amount),DiscountAmount:Number(DiscountAmount),BasicAmount:Number(BasicAmount),Quantity:Number(Quantity),UnitName:UnitName,CGSTPercentage:CGSTPercentage,SGSTPercentage:SGSTPercentage,GSTPercentage:GSTPercentage,BatchDate:BatchDate,BatchCode:BatchCode},_defineProperty(_accumulator$key,\"BatchDate\",BatchDate),_defineProperty(_accumulator$key,\"quantityString\",\"  \".concat(BatchCode,\"  \").concat(BatchDate)),_defineProperty(_accumulator$key,\"PrimaryUnitName\",PrimaryUnitName),_accumulator$key);}return accumulator;},{});var TotalItemlength=Object.values(groupedItems).length;data[\"TotalItemlength\"]=TotalItemlength;CRDRNoteItems.forEach(function(element,key){var HSNcodes=\"\";if(element.HSNCode){if(data.SettingData.HSNCodeDigit===\"1\"){HSNcodes=element.HSNCode.slice(0,4);}if(data.SettingData.HSNCodeDigit===\"2\"){HSNcodes=element.HSNCode.slice(0,6);}if(data.SettingData.HSNCodeDigit===\"3\"){HSNcodes=element.HSNCode.slice(0,8);}}var tableitemRow=[SrNO++,\"\".concat(HSNcodes,\" \").concat(element.ItemName),\"\".concat(parseFloat(element.Quantity),\"   \").concat(element.UnitName),\"\".concat(Number(element.MRPValue).toFixed(2)),\"\".concat(numberWithCommas(Number(element.Rate).toFixed(2))),\"\".concat(element.Discount,\" \").concat(element.DiscountType===\"1\"?\"Rs\":\"%\"),\"\".concat(numberWithCommas(Number(element.DiscountAmount).toFixed(2))),\"\".concat(numberWithCommas(Number(element.BasicAmount).toFixed(2))),\"\".concat(Number(element.CGSTPercentage).toFixed(1),\"%\"),\"\".concat(numberWithCommas(Number(element.CGST).toFixed(2))),\"\".concat(Number(element.SGSTPercentage).toFixed(1),\"%\"),\"\".concat(numberWithCommas(Number(element.SGST).toFixed(2))),\"\".concat(numberWithCommas(Number(element.Amount).toFixed(2)))];function totalLots(){totalQuantity=Number(totalQuantity)+Number(element.Quantity);totalCGst=Number(totalCGst)+Number(element.CGST);totalSGst=Number(totalSGst)+Number(element.SGST);totalAmount=Number(totalAmount)+Number(element.Amount);totalBasicAmount=Number(totalBasicAmount)+Number(element.BasicAmount);TotalGst=totalCGst+totalSGst;GSTPercentage=Number(element.CGSTPercentage)+Number(element.SGSTPercentage);var cgst=data[\"tableTot\"].TotalCGst;return{TotalCGst:Number(totalCGst)+Number(cgst)};};function totalrow(){return[\"\",\" GST \".concat(parseFloat(GSTPercentage),\"%  Total:\").concat(numberWithCommas(Number(TotalGst).toFixed(2)),\" \"),\" \",\"\",\"\",\"\",\"\",\"\".concat(numberWithCommas(Number(totalBasicAmount).toFixed(2))),\"\".concat(numberWithCommas(Number(totalCGst).toFixed(2))),\"isaddition\",\"\".concat(numberWithCommas(Number(totalSGst).toFixed(2))),\"\",\"\".concat(numberWithCommas(Number(totalAmount).toFixed(2)))];};var BatchRow=[\"Batch:  \".concat(element.quantityString,\" \"),\"Batch\",\" \",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];if(Gst===0){Gst=element.GSTPercentage;};var aa={TotalCGst:0,totalSGst:0};if(data[\"tableTot\"]===undefined){data[\"tableTot\"]=aa;}if(Gst===element.GSTPercentage){data[\"tableTot\"]=totalLots();returnArr.push(tableitemRow);}else{returnArr.push(totalrow());returnArr.push(tableitemRow);totalBasicAmount=0;totalCGst=0;totalSGst=0;totalAmount=0;totalQuantity=0;data[\"tableTot\"]=totalLots();Gst=element.GSTPercentage;}// if (data.SettingData.ShowBatchNoOnInvoicePrint === \"1\") {\n//     returnArr.push((BatchRow))\n// }\nif(key===Object.keys(groupedItems).length-1){returnArr.push(totalrow());}});return returnArr;};export var RowsWithIGST=function RowsWithIGST(data){var _data$CRDRNoteItems2=data.CRDRNoteItems,CRDRNoteItems=_data$CRDRNoteItems2===void 0?[]:_data$CRDRNoteItems2;CRDRNoteItems.sort(function(firstItem,secondItem){return firstItem.GSTPercentage-secondItem.GSTPercentage;});var returnArr=[];var Gst=0;var totalBasicAmount=0;var totalIGst=0;var totalAmount=0;var totalQuantity=0;var SrNO=1;var TotalGst=0;var GSTPercentage=0;var groupedItems=CRDRNoteItems.reduce(function(accumulator,currentItem){var HSNCode=currentItem.HSNCode,ItemName=currentItem.ItemName,IGSTPercentage=currentItem.IGSTPercentage,MRP=currentItem.MRP,Rate=currentItem.Rate,Discount=currentItem.Discount,CGST=currentItem.CGST,SGST=currentItem.SGST,Amount=currentItem.Amount,DiscountAmount=currentItem.DiscountAmount,BasicAmount=currentItem.BasicAmount,Quantity=currentItem.Quantity,UnitName=currentItem.UnitName,MRPValue=currentItem.MRPValue,CGSTPercentage=currentItem.CGSTPercentage,SGSTPercentage=currentItem.SGSTPercentage,GSTPercentage=currentItem.GSTPercentage,BatchCode=currentItem.BatchCode,BatchDate=currentItem.BatchDate,DiscountType=currentItem.DiscountType,PrimaryUnitName=currentItem.PrimaryUnitName,IGST=currentItem.IGST;var PcsinNumber=\"\";var PcsinNumberUnit=\"\";var pattern=/\\((.*?)\\)/;if(currentItem.UnitName!==\"\"){var matchFound=currentItem.UnitName.match(pattern);var extractedText=matchFound[1];console.log(extractedText);// Output: \"19.0 No\"\nvar match=extractedText.split(\" \");PcsinNumber=match[0];PcsinNumberUnit=match[1];}var key=ItemName+'_'+MRP;if(accumulator[key]){accumulator[key].PcsinNumber+=Number(PcsinNumber);accumulator[key].DiscountAmount+=Number(DiscountAmount);accumulator[key].Quantity+=Number(Quantity);accumulator[key].BasicAmount+=Number(BasicAmount);accumulator[key].CGST+=Number(CGST);accumulator[key].IGST+=Number(IGST);accumulator[key].SGST+=Number(SGST);accumulator[key].Amount+=Number(Amount);accumulator[key].BatchCode+=BatchCode;accumulator[key].BatchDate+=BatchDate;accumulator[key].quantityString+=\" ,  \".concat(BatchCode,\" \").concat(BatchDate,\" \");}else{var _accumulator$key2;accumulator[key]=(_accumulator$key2={ItemName:ItemName,HSNCode:HSNCode,MRPValue:MRPValue,IGSTPercentage:IGSTPercentage,DiscountType:DiscountType,PcsinNumber:Number(PcsinNumber),Rate:Rate,Discount:Discount,CGST:Number(CGST),SGST:Number(SGST),Amount:Number(Amount),DiscountAmount:Number(DiscountAmount),BasicAmount:Number(BasicAmount),Quantity:Number(Quantity),UnitName:UnitName,CGSTPercentage:CGSTPercentage,SGSTPercentage:SGSTPercentage,GSTPercentage:GSTPercentage,BatchDate:BatchDate,BatchCode:BatchCode},_defineProperty(_accumulator$key2,\"BatchDate\",BatchDate),_defineProperty(_accumulator$key2,\"quantityString\",\"  \".concat(BatchCode,\"  \").concat(BatchDate)),_defineProperty(_accumulator$key2,\"PrimaryUnitName\",PrimaryUnitName),_defineProperty(_accumulator$key2,\"IGST\",IGST),_accumulator$key2);}return accumulator;},{});var TotalItemlength=Object.values(groupedItems).length;data[\"TotalItemlength\"]=TotalItemlength;CRDRNoteItems.forEach(function(element,key){var HSNcodes=\"\";if(element.HSNCode){if(data.SettingData.HSNCodeDigit===\"1\"){HSNcodes=element.HSNCode.slice(0,4);}if(data.SettingData.HSNCodeDigit===\"2\"){HSNcodes=element.HSNCode.slice(0,6);}if(data.SettingData.HSNCodeDigit===\"3\"){HSNcodes=element.HSNCode.slice(0,8);}}var tableitemRow=[SrNO++,\"\".concat(HSNcodes,\" \").concat(element.ItemName),element.UnitName===\"\"?\"\".concat(parseFloat(element.Quantity),\" \").concat(element.PrimaryUnitName,\"   \").concat(element.UnitName):\"\".concat(parseFloat(element.Quantity),\" \").concat(element.PrimaryUnitName,\"      (\").concat(element.PcsinNumber,\" \").concat(element.PcsinNumberUnit,\")\"),\"\".concat(numberWithCommas(Number(element.MRPValue).toFixed(2))),\"\".concat(numberWithCommas(Number(element.Rate).toFixed(2))),\"\".concat(element.Discount,\" \").concat(element.DiscountType===\"1\"?\"Rs\":\"%\"),\"\".concat(numberWithCommas(Number(element.DiscountAmount).toFixed(2))),\"\".concat(numberWithCommas(Number(element.BasicAmount).toFixed(2))),\"\".concat(Number(element.IGSTPercentage).toFixed(1),\"%\"),\"\".concat(numberWithCommas(Number(element.IGST).toFixed(2))),\"\".concat(numberWithCommas(Number(element.Amount).toFixed(2)))];function totalLots(){totalQuantity=Number(totalQuantity)+Number(element.Quantity);totalIGst=Number(totalIGst)+Number(element.IGST);totalAmount=Number(totalAmount)+Number(element.Amount);totalBasicAmount=Number(totalBasicAmount)+Number(element.BasicAmount);GSTPercentage=Number(element.IGSTPercentage);};function totalrow(){return[\"\",\" GST \".concat(parseFloat(GSTPercentage),\"%  Total:\").concat(numberWithCommas(Number(totalIGst).toFixed(2)),\" \"),\" \",\"\",\"\",\"\",\"\",\"\".concat(numberWithCommas(Number(totalBasicAmount).toFixed(2))),\"\".concat(numberWithCommas(Number(totalIGst).toFixed(2))),\"isaddition\",\"\".concat(numberWithCommas(Number(totalAmount).toFixed(2)))];};var BatchRow=[\"Batch:  \".concat(element.quantityString,\" \"),\"Batch\",\" \",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];if(Gst===0){Gst=element.GSTPercentage;};var aa={TotalCGst:0,totalSGst:0};if(data[\"tableTot\"]===undefined){data[\"tableTot\"]=aa;}if(Gst===element.GSTPercentage){data[\"tableTot\"]=totalLots();returnArr.push(tableitemRow);}else{returnArr.push(totalrow());returnArr.push(tableitemRow);totalBasicAmount=0;totalAmount=0;totalQuantity=0;data[\"tableTot\"]=totalLots();Gst=element.GSTPercentage;}if(data.SettingData.ShowBatchNoOnInvoicePrint===\"1\"){returnArr.push(BatchRow);}if(key===Object.keys(groupedItems).length-1){returnArr.push(totalrow());}});return returnArr;};export var BilledByRow=function BilledByRow(data){var PartyAddress=\"\";if(Array.isArray(data.PartyAddress)){var filteredArray=data.PartyAddress.filter(function(obj){return obj.IsDefault===true;});PartyAddress=filteredArray[0]===undefined?\"\":filteredArray[0].Address;}else{PartyAddress=data.PartyAddress;}var BilledByArray=[[\"            \".concat(data.Party)],[\"                 \".concat(PartyAddress)],[\"            \".concat(data.PartyState)],[\"              \".concat(data.PartyGSTIN)],[\"                   \".concat(data.PartyFSSAINo)]// [`                   ${data.PartyMobileNo}`],\n];return BilledByArray;};export var BilledToRow=function BilledToRow(data){var CustomerAddress=\"\";if(Array.isArray(data.CustomerAddress)){var filteredArray=data.CustomerAddress.filter(function(obj){return obj.IsDefault===true;});CustomerAddress=filteredArray[0]===undefined?\"\":filteredArray[0].Address;}else{CustomerAddress=data.CustomerAddress;}var BilledToArray=[[\"                   \".concat(data.Customer)],[\"                 \".concat(CustomerAddress)],[\"           \".concat(data.CustomerState)],[\"             \".concat(data.CustomerGSTIN)],[\"                   \".concat(data.CustomerFSSAINo)]// [`                   ${data.CustomerMobileNo}`],\n];return BilledToArray;};export var DetailsOfTransportRow=function DetailsOfTransportRow(data){var OrderNumber=\" \";if(data.InvoicesReferences>0){var PoNumber=data.InvoicesReferences.map(function(index){return{SystemGenerate:index.FullOrderNumber,Description:index.Description};});if(PoNumber[0].Description===null){OrderNumber=PoNumber[0].SystemGenerate;}else{OrderNumber=PoNumber[0].Description;}}var EwayData=\"\";// if (data.InvoiceUploads.length > 0) {\n//     EwayData = data.InvoiceUploads[0]\n// }\nvar DetailsOfTransportArray=[[\"                      \".concat(data.NoteType)],[\"                      \".concat(data.Narration===null?\"\":data.Narration)],[\"                         \".concat(data.NoteReason===null?\"\":data.NoteReason)]// [`                          ${(EwayData.EwayBillNo === undefined) || (EwayData.EwayBillNo === null) ? \"\" : EwayData.EwayBillNo}`],\n// [`                          ${(EwayData.AckNo === undefined) || (EwayData.AckNo === null) ? \"\" : EwayData.AckNo}`]\n];return DetailsOfTransportArray;};export var BankRow=function BankRow(data){// if (data.BankData.length > 0) {\n//     let BankData = data.BankData[0]\n//     var reportArray = [\n//         [`A/C No: ${BankData.AccountNo}`, `IFSC Code: ${BankData.IFSC}`, `Branch: ${BankData.BranchName}`],\n//         [`Bank Name :${BankData.BankName}`]\n//     ]\n// } else {\nvar reportArray=[[]// [, `Bank details not provided. Please update Bank details`]\n];// }\nreturn reportArray;};","map":{"version":3,"names":["invoice","numberWithCommas","columnsWithCGST_SGST","columnsWithIGST","Bankcolumn","BilledBy","BilledTo","DetailsOfTransport","RowsWithCGST_SGST","data","CRDRNoteItems","sort","firstItem","secondItem","GSTPercentage","returnArr","Gst","totalBasicAmount","totalCGst","totalSGst","totalAmount","totalQuantity","SrNO","TotalGst","groupedItems","reduce","accumulator","currentItem","HSNCode","ItemName","MRP","Rate","Discount","CGST","SGST","Amount","DiscountAmount","BasicAmount","Quantity","UnitName","MRPValue","CGSTPercentage","SGSTPercentage","BatchCode","BatchDate","DiscountType","PrimaryUnitName","PcsinNumber","PcsinNumberUnit","pattern","key","Number","quantityString","TotalItemlength","Object","values","length","forEach","element","HSNcodes","SettingData","HSNCodeDigit","slice","tableitemRow","parseFloat","toFixed","totalLots","cgst","TotalCGst","totalrow","BatchRow","aa","undefined","push","keys","RowsWithIGST","totalIGst","IGSTPercentage","IGST","matchFound","match","extractedText","console","log","split","ShowBatchNoOnInvoicePrint","BilledByRow","PartyAddress","Array","isArray","filteredArray","filter","obj","IsDefault","Address","BilledByArray","Party","PartyState","PartyGSTIN","PartyFSSAINo","BilledToRow","CustomerAddress","BilledToArray","Customer","CustomerState","CustomerGSTIN","CustomerFSSAINo","DetailsOfTransportRow","OrderNumber","InvoicesReferences","PoNumber","map","index","SystemGenerate","FullOrderNumber","Description","EwayData","DetailsOfTransportArray","NoteType","Narration","NoteReason","BankRow","reportArray"],"sources":["D:/Rohit/Git projects/Manthan/src/Reports/CRDRNote Report/TableData.js"],"sourcesContent":["\r\nimport { invoice } from \"../ReportIndex\";\r\nimport { numberWithCommas } from \"../Report_common_function\";\r\n\r\nexport const columnsWithCGST_SGST = [\r\n    \"SN\",\r\n    \"HSN Item Name\",\r\n    \"Quantity (UOM)\",\r\n    \"MRP\",\r\n    \"Rate\",\r\n    \"Discount\",\r\n    \"Discount Amount \",\r\n    \"Taxable Amount\",\r\n    \"          CGST           %        Amount\",\r\n    \"CGST Amount\",\r\n    \"          SGST           %        Amount\",\r\n    \"SGST Amount\",\r\n    \"Amount\",\r\n];\r\nexport const columnsWithIGST = [\r\n    \"SN\",\r\n    \"HSN Item Name\",\r\n    \"Quantity (UOM)\",\r\n    \"MRP\",\r\n    \"Rate\",\r\n    \"Discount\",\r\n    \"Discount Amount \",\r\n    \"Taxable Amount\",\r\n    \"          IGST           %         Amount\",\r\n    \"IGST Amount\",\r\n    \"Amount\",\r\n];\r\n\r\n\r\n\r\nexport const Bankcolumn = [\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n]\r\n\r\n\r\nexport const BilledBy = [\r\n    \"Billed by\",\r\n]\r\nexport const BilledTo = [\r\n    \"Billed by\",\r\n]\r\nexport const DetailsOfTransport = [\r\n    \"Billed by\",\r\n]\r\n\r\nexport const RowsWithCGST_SGST = (data) => {\r\n    const { CRDRNoteItems = [] } = data\r\n    CRDRNoteItems.sort((firstItem, secondItem) => firstItem.GSTPercentage - secondItem.GSTPercentage);\r\n    const returnArr = [];\r\n    let Gst = 0\r\n    let totalBasicAmount = 0\r\n    let totalCGst = 0\r\n    let totalSGst = 0\r\n    let totalAmount = 0\r\n    let totalQuantity = 0\r\n    let SrNO = 1\r\n    let TotalGst = 0\r\n    let GSTPercentage = 0\r\n\r\n    const groupedItems = CRDRNoteItems.reduce((accumulator, currentItem) => {\r\n\r\n        const { HSNCode,\r\n            ItemName, MRP, Rate,\r\n            Discount, CGST, SGST,\r\n            Amount, DiscountAmount,\r\n            BasicAmount, Quantity,\r\n            UnitName, MRPValue, CGSTPercentage,\r\n            SGSTPercentage, GSTPercentage,\r\n            BatchCode, BatchDate, DiscountType,\r\n            PrimaryUnitName } = currentItem;\r\n        let PcsinNumber = \"\"\r\n        let PcsinNumberUnit = \"\"\r\n        const pattern = /\\((.*?)\\)/;\r\n\r\n        // if (currentItem.UnitName !== \"\") {\r\n        //     const matchFound = currentItem.UnitName.match(pattern);\r\n        //     const extractedText = matchFound[1];\r\n        //     console.log(extractedText); // Output: \"19.0 No\"\r\n        //     const match = extractedText.split(\" \")\r\n        //     PcsinNumber = match[0];\r\n        //     PcsinNumberUnit = match[1];\r\n\r\n        // }\r\n\r\n        const key = ItemName + '_' + MRP;\r\n        if (accumulator[key]) {\r\n\r\n            accumulator[key].PcsinNumber += Number(PcsinNumber);\r\n            // accumulator[key].UnitName += Number(UnitName);\r\n            accumulator[key].DiscountAmount += Number(DiscountAmount);\r\n            accumulator[key].Quantity += Number(Quantity);\r\n            accumulator[key].BasicAmount += Number(BasicAmount);\r\n            accumulator[key].CGST += Number(CGST);\r\n            accumulator[key].SGST += Number(SGST);\r\n            accumulator[key].Amount += Number(Amount);\r\n            accumulator[key].BatchCode += BatchCode;\r\n            accumulator[key].BatchDate += BatchDate;\r\n            accumulator[key].quantityString += ` ,  ${BatchCode} ${BatchDate} `;\r\n\r\n        } else {\r\n            accumulator[key] = {\r\n                ItemName, HSNCode,\r\n                MRPValue, DiscountType, Rate,\r\n                Discount, PcsinNumberUnit: PcsinNumberUnit,\r\n                PcsinNumber: Number(PcsinNumber),\r\n                CGST: Number(CGST), SGST: Number(SGST),\r\n                Amount: Number(Amount), DiscountAmount: Number(DiscountAmount),\r\n                BasicAmount: Number(BasicAmount), Quantity: Number(Quantity),\r\n                UnitName, CGSTPercentage, SGSTPercentage, GSTPercentage,\r\n                BatchDate, BatchCode: BatchCode, BatchDate: BatchDate,\r\n                quantityString: `  ${BatchCode}  ${BatchDate}`, PrimaryUnitName\r\n            };\r\n        }\r\n        return accumulator;\r\n    }, {});\r\n\r\n    const TotalItemlength = Object.values(groupedItems).length;\r\n    data[\"TotalItemlength\"] = TotalItemlength;\r\n    CRDRNoteItems.forEach((element, key) => {\r\n\r\n        let HSNcodes = \"\"\r\n        if (element.HSNCode) {\r\n            if (data.SettingData.HSNCodeDigit === \"1\") {\r\n                HSNcodes = element.HSNCode.slice(0, 4);\r\n            }\r\n            if (data.SettingData.HSNCodeDigit === \"2\") {\r\n                HSNcodes = element.HSNCode.slice(0, 6);\r\n            }\r\n            if (data.SettingData.HSNCodeDigit === \"3\") {\r\n                HSNcodes = element.HSNCode.slice(0, 8);\r\n            }\r\n        }\r\n        \r\n        const tableitemRow = [\r\n            SrNO++,\r\n            `${HSNcodes} ${element.ItemName}`,\r\n            `${parseFloat(element.Quantity)}   ${element.UnitName}`,\r\n            `${Number(element.MRPValue).toFixed(2)}`,\r\n            `${numberWithCommas(Number(element.Rate).toFixed(2))}`,\r\n            `${element.Discount} ${element.DiscountType === \"1\" ? \"Rs\" : \"%\"}`,\r\n            `${numberWithCommas(Number(element.DiscountAmount).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.BasicAmount).toFixed(2))}`,\r\n            `${Number(element.CGSTPercentage).toFixed(1)}%`,\r\n            `${numberWithCommas(Number(element.CGST).toFixed(2))}`,\r\n            `${Number(element.SGSTPercentage).toFixed(1)}%`,\r\n            `${numberWithCommas(Number(element.SGST).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.Amount).toFixed(2))}`,\r\n        ];\r\n\r\n        function totalLots() {\r\n            totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n            totalCGst = Number(totalCGst) + Number(element.CGST)\r\n            totalSGst = Number(totalSGst) + Number(element.SGST)\r\n            totalAmount = Number(totalAmount) + Number(element.Amount)\r\n            totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount)\r\n            TotalGst = totalCGst + totalSGst;\r\n            GSTPercentage = Number(element.CGSTPercentage) + Number(element.SGSTPercentage)\r\n            let cgst = data[\"tableTot\"].TotalCGst\r\n            return ({ TotalCGst: Number(totalCGst) + Number(cgst) })\r\n\r\n        };\r\n\r\n\r\n        function totalrow() {\r\n\r\n            return [\r\n                \"\",\r\n                ` GST ${(parseFloat(GSTPercentage))}%  Total:${numberWithCommas(Number(TotalGst).toFixed(2))} `,\r\n                \" \",\r\n                ``,\r\n                \"\",\r\n                \"\",\r\n                ``,\r\n                `${numberWithCommas(Number(totalBasicAmount).toFixed(2))}`,\r\n                `${numberWithCommas(Number(totalCGst).toFixed(2))}`,\r\n                \"isaddition\",\r\n                `${numberWithCommas(Number(totalSGst).toFixed(2))}`,\r\n                \"\",\r\n                `${numberWithCommas(Number(totalAmount).toFixed(2))}`,\r\n            ];\r\n        };\r\n        const BatchRow = [\r\n            `Batch:  ${element.quantityString} `,\r\n            `Batch`,\r\n            \" \",\r\n            ``,\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            ``,\r\n            \"\",\r\n            ``,\r\n            \"\",\r\n            ``,\r\n        ]\r\n\r\n        if (Gst === 0) { Gst = element.GSTPercentage };\r\n        let aa = { TotalCGst: 0, totalSGst: 0 }\r\n        if (data[\"tableTot\"] === undefined) { data[\"tableTot\"] = aa }\r\n\r\n        if ((Gst === element.GSTPercentage)) {\r\n            data[\"tableTot\"] = totalLots()\r\n            returnArr.push(tableitemRow)\r\n        }\r\n\r\n        else {\r\n            returnArr.push(totalrow());\r\n            returnArr.push(tableitemRow);\r\n            totalBasicAmount = 0\r\n            totalCGst = 0\r\n            totalSGst = 0\r\n            totalAmount = 0\r\n            totalQuantity = 0\r\n\r\n            data[\"tableTot\"] = totalLots()\r\n            Gst = element.GSTPercentage;\r\n        }\r\n        // if (data.SettingData.ShowBatchNoOnInvoicePrint === \"1\") {\r\n        //     returnArr.push((BatchRow))\r\n        // }\r\n\r\n        if (key === Object.keys(groupedItems).length - 1) {\r\n\r\n            returnArr.push(totalrow());\r\n        }\r\n    })\r\n    return returnArr;\r\n}\r\n\r\nexport const RowsWithIGST = (data) => {\r\n    const { CRDRNoteItems = [] } = data\r\n    CRDRNoteItems.sort((firstItem, secondItem) => firstItem.GSTPercentage - secondItem.GSTPercentage);\r\n    const returnArr = [];\r\n    let Gst = 0\r\n    let totalBasicAmount = 0\r\n    let totalIGst = 0\r\n    let totalAmount = 0\r\n    let totalQuantity = 0\r\n    let SrNO = 1\r\n    let TotalGst = 0\r\n    let GSTPercentage = 0\r\n\r\n    const groupedItems = CRDRNoteItems.reduce((accumulator, currentItem) => {\r\n        const { HSNCode, ItemName, IGSTPercentage,\r\n            MRP, Rate, Discount, CGST, SGST,\r\n            Amount, DiscountAmount, BasicAmount,\r\n            Quantity, UnitName, MRPValue, CGSTPercentage,\r\n            SGSTPercentage, GSTPercentage, BatchCode,\r\n            BatchDate, DiscountType, PrimaryUnitName, IGST } = currentItem;\r\n\r\n        let PcsinNumber = \"\"\r\n        let PcsinNumberUnit = \"\"\r\n        const pattern = /\\((.*?)\\)/;\r\n\r\n        if (currentItem.UnitName !== \"\") {\r\n            const matchFound = currentItem.UnitName.match(pattern);\r\n            const extractedText = matchFound[1];\r\n            console.log(extractedText); // Output: \"19.0 No\"\r\n            const match = extractedText.split(\" \")\r\n            PcsinNumber = match[0];\r\n            PcsinNumberUnit = match[1];\r\n\r\n        }\r\n\r\n        const key = ItemName + '_' + MRP;\r\n        if (accumulator[key]) {\r\n            accumulator[key].PcsinNumber += Number(PcsinNumber);\r\n            accumulator[key].DiscountAmount += Number(DiscountAmount);\r\n            accumulator[key].Quantity += Number(Quantity);\r\n            accumulator[key].BasicAmount += Number(BasicAmount);\r\n            accumulator[key].CGST += Number(CGST);\r\n            accumulator[key].IGST += Number(IGST);\r\n            accumulator[key].SGST += Number(SGST);\r\n            accumulator[key].Amount += Number(Amount);\r\n            accumulator[key].BatchCode += BatchCode;\r\n            accumulator[key].BatchDate += BatchDate;\r\n            accumulator[key].quantityString += ` ,  ${BatchCode} ${BatchDate} `;\r\n\r\n        } else {\r\n            accumulator[key] = {\r\n                ItemName, HSNCode,\r\n                MRPValue, IGSTPercentage, DiscountType,\r\n                PcsinNumber: Number(PcsinNumber), Rate,\r\n                Discount, CGST: Number(CGST), SGST: Number(SGST),\r\n                Amount: Number(Amount), DiscountAmount: Number(DiscountAmount),\r\n                BasicAmount: Number(BasicAmount), Quantity: Number(Quantity),\r\n                UnitName, CGSTPercentage, SGSTPercentage, GSTPercentage,\r\n                BatchDate, BatchCode: BatchCode, BatchDate: BatchDate,\r\n                quantityString: `  ${BatchCode}  ${BatchDate}`, PrimaryUnitName, IGST\r\n            };\r\n        }\r\n        return accumulator;\r\n    }, {});\r\n    const TotalItemlength = Object.values(groupedItems).length;\r\n    data[\"TotalItemlength\"] = TotalItemlength;\r\n    CRDRNoteItems.forEach((element, key) => {\r\n\r\n        let HSNcodes = \"\"\r\n        if (element.HSNCode) {\r\n\r\n            if (data.SettingData.HSNCodeDigit === \"1\") {\r\n                HSNcodes = element.HSNCode.slice(0, 4);\r\n            }\r\n            if (data.SettingData.HSNCodeDigit === \"2\") {\r\n                HSNcodes = element.HSNCode.slice(0, 6);\r\n            }\r\n            if (data.SettingData.HSNCodeDigit === \"3\") {\r\n                HSNcodes = element.HSNCode.slice(0, 8);\r\n            }\r\n        }\r\n\r\n        const tableitemRow = [\r\n\r\n            SrNO++,\r\n            `${HSNcodes} ${element.ItemName}`,\r\n            element.UnitName === \"\" ? `${parseFloat(element.Quantity)} ${element.PrimaryUnitName}   ${element.UnitName}` : `${parseFloat(element.Quantity)} ${element.PrimaryUnitName}      (${element.PcsinNumber} ${element.PcsinNumberUnit})`,\r\n            `${numberWithCommas(Number(element.MRPValue).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.Rate).toFixed(2))}`,\r\n            `${element.Discount} ${element.DiscountType === \"1\" ? \"Rs\" : \"%\"}`,\r\n            `${numberWithCommas(Number(element.DiscountAmount).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.BasicAmount).toFixed(2))}`,\r\n            `${Number(element.IGSTPercentage).toFixed(1)}%`,\r\n            `${numberWithCommas(Number(element.IGST).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.Amount).toFixed(2))}`,\r\n        ];\r\n\r\n        function totalLots() {\r\n            totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n            totalIGst = Number(totalIGst) + Number(element.IGST)\r\n            totalAmount = Number(totalAmount) + Number(element.Amount)\r\n            totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount)\r\n\r\n            GSTPercentage = Number(element.IGSTPercentage)\r\n\r\n        };\r\n\r\n\r\n        function totalrow() {\r\n\r\n            return [\r\n                \"\",\r\n                ` GST ${(parseFloat(GSTPercentage))}%  Total:${numberWithCommas(Number(totalIGst).toFixed(2))} `,\r\n                \" \",\r\n                ``,\r\n                \"\",\r\n                \"\",\r\n                ``,\r\n                `${numberWithCommas(Number(totalBasicAmount).toFixed(2))}`,\r\n                `${numberWithCommas(Number(totalIGst).toFixed(2))}`,\r\n                \"isaddition\",\r\n                `${numberWithCommas(Number(totalAmount).toFixed(2))}`,\r\n\r\n            ];\r\n        };\r\n        const BatchRow = [\r\n            `Batch:  ${element.quantityString} `,\r\n            `Batch`,\r\n            \" \",\r\n            ``,\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            ``,\r\n            \"\",\r\n            ``,\r\n        ]\r\n\r\n        if (Gst === 0) { Gst = element.GSTPercentage };\r\n        let aa = { TotalCGst: 0, totalSGst: 0 }\r\n        if (data[\"tableTot\"] === undefined) { data[\"tableTot\"] = aa }\r\n\r\n        if ((Gst === element.GSTPercentage)) {\r\n            data[\"tableTot\"] = totalLots()\r\n            returnArr.push(tableitemRow)\r\n\r\n        }\r\n\r\n\r\n        else {\r\n            returnArr.push(totalrow());\r\n            returnArr.push(tableitemRow);\r\n            totalBasicAmount = 0\r\n            totalAmount = 0\r\n            totalQuantity = 0\r\n\r\n            data[\"tableTot\"] = totalLots()\r\n            Gst = element.GSTPercentage;\r\n        }\r\n        if (data.SettingData.ShowBatchNoOnInvoicePrint === \"1\") {\r\n            returnArr.push((BatchRow))\r\n        }\r\n\r\n        if (key === Object.keys(groupedItems).length - 1) {\r\n\r\n            returnArr.push(totalrow());\r\n        }\r\n    })\r\n    return returnArr;\r\n}\r\n\r\n\r\nexport const BilledByRow = (data) => {\r\n\r\n    let PartyAddress = \"\"\r\n    if (Array.isArray(data.PartyAddress)) {\r\n        const filteredArray = data.PartyAddress.filter(obj => obj.IsDefault === true);\r\n        PartyAddress = filteredArray[0] === undefined ? \"\" : filteredArray[0].Address\r\n    } else {\r\n        PartyAddress = data.PartyAddress\r\n    }\r\n\r\n    var BilledByArray = [\r\n        [`            ${data.Party}`],\r\n        [`                 ${PartyAddress}`],\r\n        [`            ${data.PartyState}`],\r\n        [`              ${data.PartyGSTIN}`],\r\n        [`                   ${data.PartyFSSAINo}`],\r\n        // [`                   ${data.PartyMobileNo}`],\r\n\r\n    ]\r\n    return BilledByArray;\r\n}\r\nexport const BilledToRow = (data) => {\r\n\r\n    let CustomerAddress = \"\"\r\n    if (Array.isArray(data.CustomerAddress)) {\r\n        const filteredArray = data.CustomerAddress.filter(obj => obj.IsDefault === true);\r\n        CustomerAddress = filteredArray[0] === undefined ? \"\" : filteredArray[0].Address\r\n    } else {\r\n        CustomerAddress = data.CustomerAddress\r\n    }\r\n    var BilledToArray = [\r\n        [`                   ${data.Customer}`],\r\n        [`                 ${CustomerAddress}`],\r\n        [`           ${data.CustomerState}`],\r\n        [`             ${data.CustomerGSTIN}`,],\r\n        [`                   ${data.CustomerFSSAINo}`],\r\n        // [`                   ${data.CustomerMobileNo}`],\r\n    ]\r\n\r\n    return BilledToArray;\r\n}\r\nexport const DetailsOfTransportRow = (data) => {\r\n    let OrderNumber = \" \"\r\n\r\n    if (data.InvoicesReferences > 0) {\r\n        const PoNumber = data.InvoicesReferences.map(index => ({\r\n            SystemGenerate: index.FullOrderNumber,\r\n            Description: index.Description,\r\n        }));\r\n\r\n        if (PoNumber[0].Description === null) {\r\n            OrderNumber = PoNumber[0].SystemGenerate\r\n        } else {\r\n            OrderNumber = PoNumber[0].Description\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let EwayData = \"\"\r\n    // if (data.InvoiceUploads.length > 0) {\r\n    //     EwayData = data.InvoiceUploads[0]\r\n    // }\r\n    \r\n    var DetailsOfTransportArray = [\r\n        [`                      ${data.NoteType}`],\r\n        [`                      ${data.Narration === null ? \"\" : data.Narration}`],\r\n        [`                         ${data.NoteReason === null ? \"\" : data.NoteReason}`],\r\n        // [`                          ${(EwayData.EwayBillNo === undefined) || (EwayData.EwayBillNo === null) ? \"\" : EwayData.EwayBillNo}`],\r\n        // [`                          ${(EwayData.AckNo === undefined) || (EwayData.AckNo === null) ? \"\" : EwayData.AckNo}`]\r\n    ]\r\n\r\n    return DetailsOfTransportArray;\r\n}\r\n\r\n\r\n\r\nexport const BankRow = (data) => {\r\n    // if (data.BankData.length > 0) {\r\n    //     let BankData = data.BankData[0]\r\n    //     var reportArray = [\r\n    //         [`A/C No: ${BankData.AccountNo}`, `IFSC Code: ${BankData.IFSC}`, `Branch: ${BankData.BranchName}`],\r\n    //         [`Bank Name :${BankData.BankName}`]\r\n    //     ]\r\n    // } else {\r\n\r\n    var reportArray = [\r\n        [],\r\n        // [, `Bank details not provided. Please update Bank details`]\r\n    ]\r\n    // }\r\n    return reportArray;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}