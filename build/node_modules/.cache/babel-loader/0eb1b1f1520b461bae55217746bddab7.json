{"ast":null,"code":"import { CommonConsole } from \"./CommonFunction\";\nexport const formValid = (_ref, setState) => {\n  let {\n    isError,\n    required,\n    hasValid,\n    fieldLabel,\n    values\n  } = _ref;\n  let isValid = true;\n  Object.keys(required).forEach(lab => {\n    if (!hasValid[lab].valid) {\n      isError[lab] = hasValid[lab].inValidMsg;\n      isValid = false;\n      setState({\n        isError,\n        hasValid,\n        required,\n        fieldLabel,\n        values\n      });\n    }\n  });\n  return isValid;\n};\nexport const formValChange = _ref2 => {\n  let {\n    event,\n    state,\n    setState\n  } = _ref2;\n  let isError = { ...state.isError\n  };\n  let hasValid = { ...state.hasValid\n  };\n  let required = { ...state.required\n  };\n  let fieldLabel = { ...state.fieldLabel\n  };\n  let values = { ...state.values\n  };\n\n  if (!(event.target === undefined)) {\n    event.preventDefault();\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n\n    switch (type) {\n      case \"text\":\n        {\n          const regExp = RegExp(hasValid[name].regExp);\n\n          if (regExp.test(value)) {\n            isError[name] = \"\";\n            hasValid[name].valid = true;\n          } else {\n            isError[name] = hasValid[name].inValidMsg;\n            hasValid[name].valid = false;\n          }\n\n          values[name] = value;\n        }\n        break;\n\n      case \"checkbox\":\n        if (!(required[name] === undefined)) {\n          if (checked) {\n            isError[name] = \"\";\n            hasValid[name].valid = true;\n            values[name] = checked;\n          } else {\n            isError[name] = hasValid[name].inValidMsg;\n            hasValid[name].valid = true;\n            values[name] = checked;\n          }\n        } else {\n          isError[name] = \"\";\n          hasValid[name].valid = true;\n          values[name] = checked;\n        }\n\n        break;\n\n      case \"password\":\n        {\n          const regExp = RegExp(hasValid[name].regExp);\n\n          if (regExp.test(value)) {\n            isError[name] = \"\";\n            hasValid[name].valid = true;\n          } else {\n            isError[name] = hasValid[name].inValidMsg;\n            hasValid[name].valid = false;\n          }\n\n          values[name] = value;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    setState({\n      isError,\n      hasValid,\n      required,\n      fieldLabel,\n      values\n    });\n  } else {\n    const {\n      name,\n      value\n    } = event.change;\n    const {\n      type\n    } = event;\n\n    switch (type) {\n      case \"select\":\n        debugger;\n        const result = Array.isArray(value);\n\n        if (!result) {\n          if (!(value.value === undefined)) {\n            if (!(required[name] === undefined && value.value > 0)) {\n              isError[name] = \"\";\n              hasValid[name].valid = true;\n            } else if (required[name] === undefined) {\n              isError[name] = \"\";\n              hasValid[name].valid = true;\n            } else {\n              isError[name] = hasValid[name].inValidMsg;\n              hasValid[name].valid = false;\n            }\n          } else {\n            isError[name] = hasValid[name].inValidMsg;\n            hasValid[name].valid = false;\n          }\n        } else {\n          if (!(required[name] === undefined) && value.length > 0) {\n            isError[name] = \"\";\n            hasValid[name].valid = true;\n          } else {\n            isError[name] = hasValid[name].inValidMsg;\n            hasValid[name].valid = false;\n          }\n        }\n\n        values[name] = value;\n        break;\n\n      case \"date\":\n        isError[name] = \"\";\n        hasValid[name].valid = true;\n        values[name] = value;\n        break;\n\n      default:\n        break;\n    }\n\n    setState({\n      isError,\n      hasValid,\n      required,\n      fieldLabel,\n      values\n    });\n  }\n};\nexport function comAddPageFieldFunc(_ref3) {\n  let {\n    state,\n    setState,\n    fieldArr\n  } = _ref3;\n  var isState = { ...state\n  };\n  const values = { ...state.values\n  };\n\n  try {\n    fieldArr.forEach(ele => {\n      Object.keys(values).some(lab => {\n        if (lab === ele.ControlID) {\n          isState.fieldLabel[lab] = ele.FieldLabel;\n          isState.hasValid[lab].regExp = ele.RegularExpression;\n          isState.hasValid[lab].inValidMsg = ele.InValidMsg;\n\n          if (ele.IsCompulsory) {\n            isState.required[lab] = true;\n          }\n\n          return true;\n        }\n\n        ;\n      });\n    });\n    setState(isState);\n  } catch (e) {\n    CommonConsole(e);\n  }\n}\nexport function defaultSetValidAll(_ref4) {\n  let {\n    state,\n    setState,\n    fieldArr\n  } = _ref4;\n  Object.keys(state.values).some(lab => {\n    state.hasValid[lab] = true;\n  });\n  return;\n}\nexport const onChangeSelect = _ref5 => {\n  let {\n    hasSelect,\n    evn,\n    state,\n    setState\n  } = _ref5;\n  const event = {\n    change: {\n      name: evn.name,\n      value: hasSelect\n    },\n    type: \"select\"\n  };\n  formValChange({\n    event,\n    state,\n    setState\n  });\n};\nexport const onChangeDate = _ref6 => {\n  let {\n    v,\n    e,\n    state,\n    setState\n  } = _ref6;\n  const event = {\n    change: {\n      name: e.input.name,\n      value: v\n    },\n    type: \"date\"\n  };\n  formValChange({\n    event,\n    state,\n    setState\n  });\n};\nexport const onChangeText = _ref7 => {\n  let {\n    event,\n    state,\n    setState\n  } = _ref7;\n  formValChange({\n    event,\n    state,\n    setState\n  });\n};\nexport const initialFiledFunc = field => {\n  const obj = {};\n  obj[\"values\"] = field;\n  obj[\"fieldLabel\"] = {};\n  obj[\"isError\"] = {};\n  obj[\"hasValid\"] = {};\n  obj[\"required\"] = {};\n  Object.keys(field).forEach(label => {\n    obj.fieldLabel[label] = '';\n    obj.isError[label] = '';\n    obj.hasValid[label] = {};\n    obj.hasValid[label][\"regExp\"] = \"\";\n    obj.hasValid[label][\"inValidMsg\"] = \"\";\n    obj.hasValid[label][\"valid\"] = false;\n  });\n  return obj;\n};\nexport const resetFunction = (field, state) => {\n  var preState = { ...state\n  };\n  preState.values = field;\n  Object.keys(field).forEach(label => {\n    preState.hasValid[label][\"valid\"] = false;\n  });\n  return preState;\n};","map":{"version":3,"names":["CommonConsole","formValid","setState","isError","required","hasValid","fieldLabel","values","isValid","Object","keys","forEach","lab","valid","inValidMsg","formValChange","event","state","target","undefined","preventDefault","name","value","type","checked","regExp","RegExp","test","change","result","Array","isArray","length","comAddPageFieldFunc","fieldArr","isState","ele","some","ControlID","FieldLabel","RegularExpression","InValidMsg","IsCompulsory","e","defaultSetValidAll","onChangeSelect","hasSelect","evn","onChangeDate","v","input","onChangeText","initialFiledFunc","field","obj","label","resetFunction","preState"],"sources":["D:/Rohit/Git projects/Manthan/src/components/Common/validationFunction.js"],"sourcesContent":["import { CommonConsole } from \"./CommonFunction\";\r\n\r\nexport const formValid = ({ isError, required, hasValid, fieldLabel, values }, setState) => {\r\n    let isValid = true;\r\n\r\n    Object.keys(required).forEach((lab) => {\r\n\r\n        if (!(hasValid[lab].valid)) {\r\n            isError[lab] = hasValid[lab].inValidMsg\r\n            isValid = false\r\n            setState({ isError, hasValid, required, fieldLabel, values })\r\n        }\r\n    });\r\n    return isValid\r\n};\r\n\r\nexport const formValChange = ({ event, state, setState }) => {\r\n\r\n    let isError = { ...state.isError };\r\n    let hasValid = { ...state.hasValid };\r\n    let required = { ...state.required };\r\n    let fieldLabel = { ...state.fieldLabel };\r\n    let values = { ...state.values };\r\n\r\n    if (!(event.target === undefined)) {\r\n        event.preventDefault();\r\n        const { name, value, type, checked } = event.target;\r\n        switch (type) {\r\n            case \"text\": {\r\n                const regExp = RegExp(hasValid[name].regExp)\r\n                if (regExp.test(value)) {\r\n                    isError[name] = \"\";\r\n                    hasValid[name].valid = true\r\n                }\r\n                else {\r\n                    isError[name] = hasValid[name].inValidMsg;\r\n                    hasValid[name].valid = false\r\n                }\r\n                values[name] = value;\r\n            }\r\n                break;\r\n            case \"checkbox\":\r\n\r\n                if (!(required[name] === undefined)) {\r\n                    if (checked) {\r\n                        isError[name] = \"\";\r\n                        hasValid[name].valid = true\r\n                        values[name] = checked\r\n                    }\r\n                    else {\r\n                        isError[name] = hasValid[name].inValidMsg;\r\n                        hasValid[name].valid = true\r\n                        values[name] = checked\r\n                    }\r\n                }\r\n                else {\r\n                    isError[name] = \"\";\r\n                    hasValid[name].valid = true\r\n                    values[name] = checked\r\n                }\r\n                break;\r\n\r\n            case \"password\": {\r\n                const regExp = RegExp(hasValid[name].regExp)\r\n                if (regExp.test(value)) {\r\n                    isError[name] = \"\";\r\n                    hasValid[name].valid = true\r\n                }\r\n                else {\r\n                    isError[name] = hasValid[name].inValidMsg;\r\n                    hasValid[name].valid = false\r\n                }\r\n                values[name] = value;\r\n            }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        setState({ isError, hasValid, required, fieldLabel, values })\r\n    }\r\n    else {\r\n        const { name, value, } = event.change\r\n        const { type } = event\r\n\r\n\r\n        switch (type) {\r\n            case \"select\":\r\n                debugger\r\n                const result = Array.isArray(value);\r\n                if (!result) {\r\n                    if (!(value.value === undefined)) {\r\n                        if (!(required[name] === undefined && value.value > 0)) {\r\n                            isError[name] = \"\";\r\n                            hasValid[name].valid = true\r\n                        }\r\n                        else if ((required[name] === undefined)) {\r\n                            isError[name] = \"\";\r\n                            hasValid[name].valid = true\r\n                        }\r\n                        else {\r\n                            isError[name] = hasValid[name].inValidMsg;\r\n                            hasValid[name].valid = false\r\n                        }\r\n                    }\r\n                    else {\r\n                        isError[name] = hasValid[name].inValidMsg;\r\n                        hasValid[name].valid = false\r\n                    }\r\n                }\r\n                else {\r\n                    if (!(required[name] === undefined) && (value.length > 0)) {\r\n                        isError[name] = \"\";\r\n                        hasValid[name].valid = true\r\n                    }\r\n                    else {\r\n                        isError[name] = hasValid[name].inValidMsg;\r\n                        hasValid[name].valid = false\r\n                    }\r\n                }\r\n                values[name] = value\r\n                break;\r\n\r\n            case \"date\":\r\n                isError[name] = \"\";\r\n                hasValid[name].valid = true\r\n                values[name] = value\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n        setState({\r\n            isError, hasValid, required, fieldLabel, values\r\n        })\r\n    }\r\n};\r\n\r\nexport function comAddPageFieldFunc({ state, setState, fieldArr }) {\r\n    var isState = { ...state }\r\n    const values = { ...state.values }\r\n    try {\r\n        fieldArr.forEach(ele => {\r\n            Object.keys(values).some(lab => {\r\n                if (lab === ele.ControlID) {\r\n                    isState.fieldLabel[lab] = ele.FieldLabel;\r\n                    isState.hasValid[lab].regExp = ele.RegularExpression;\r\n                    isState.hasValid[lab].inValidMsg = ele.InValidMsg;\r\n                    if (ele.IsCompulsory) {\r\n                        isState.required[lab] = true\r\n                    }\r\n                    return true\r\n                };\r\n\r\n            });\r\n        });\r\n\r\n        setState(isState)\r\n    } catch (e) { CommonConsole(e) }\r\n}\r\n\r\nexport function defaultSetValidAll({ state, setState, fieldArr }) {\r\n    Object.keys(state.values).some(lab => {\r\n        state.hasValid[lab] = true\r\n    });\r\n    return\r\n}\r\n\r\nexport const onChangeSelect = ({ hasSelect, evn, state, setState }) => {\r\n\r\n    const event = { change: { name: evn.name, value: hasSelect }, type: \"select\" }\r\n    formValChange({ event, state, setState })\r\n}\r\n\r\nexport const onChangeDate = ({ v, e, state, setState }) => {\r\n    const event = { change: { name: e.input.name, value: v }, type: \"date\" }\r\n    formValChange({ event, state, setState })\r\n}\r\n\r\nexport const onChangeText = ({ event, state, setState }) => {\r\n    formValChange({ event, state, setState })\r\n}\r\n\r\nexport const initialFiledFunc = (field) => {\r\n\r\n    const obj = {}\r\n    obj[\"values\"] = field;\r\n    obj[\"fieldLabel\"] = {}\r\n    obj[\"isError\"] = {}\r\n    obj[\"hasValid\"] = {}\r\n    obj[\"required\"] = {}\r\n\r\n    Object.keys(field).forEach(label => {\r\n\r\n        obj.fieldLabel[label] = ''\r\n        obj.isError[label] = ''\r\n        obj.hasValid[label] = {}\r\n        obj.hasValid[label][\"regExp\"] = \"\"\r\n        obj.hasValid[label][\"inValidMsg\"] = \"\"\r\n        obj.hasValid[label][\"valid\"] = false;\r\n\r\n    })\r\n    return obj\r\n}\r\n\r\n\r\nexport const resetFunction = (field, state) => {\r\n\r\n    var preState = { ...state }\r\n    preState.values = field\r\n    Object.keys(field).forEach(label => {\r\n        preState.hasValid[label][\"valid\"] = false\r\n    })\r\n    return preState\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}