{"ast":null,"code":"import { date_dmy_func } from \"../../components/Common/CommonFunction\";\nimport { invoice } from \"../ReportIndex\";\nexport const columns = [\"HSN Item Name\", \"MRP\", \"Quantity\", \"Rate\", \"Basic Amt\", \"CGST %\", \"CGST Amt\", \"SGST %\", \"SGST Amt\", \"Total Amt\"];\nexport const columns1 = [\"HSN Item Name\", \"Quantity\", \"Rate\", \"Basic Amount\", \"CGST %\", \"CGST Amount\", \"SGST %\", \"SGST Amount\", \"Debit note\", \"Credit note\", \"Total Amt\"];\nexport const BilledBy = [\"Billed by\"];\nexport const BilledTo = [\"Billed by\"];\nexport const DetailsOfTransport = [\"Billed by\"];\nexport const Rows = data => {\n  const {\n    InvoiceItems = []\n  } = data;\n  InvoiceItems.sort((firstItem, secondItem) => firstItem.GSTPercentage - secondItem.GSTPercentage);\n  const returnArr = [];\n  let Gst = 0;\n  let totalBasicAmount = 0;\n  let totalCGst = 0;\n  let totalSGst = 0;\n  let totalAmount = 0;\n  let totalQuantity = 0;\n  InvoiceItems.forEach((element, key) => {\n    const tableitemRow = [element.ItemName, element.MRP, `${Number(element.Quantity).toFixed(2)} ${element.UnitName}`, element.Rate, element.BasicAmount, ` ${element.CGSTPercentage}%`, element.CGST, ` ${element.SGSTPercentage}%`, element.SGST, element.Amount];\n\n    function totalLots() {\n      totalQuantity = Number(totalQuantity) + Number(element.Quantity);\n      totalCGst = Number(totalCGst) + Number(element.CGST);\n      totalSGst = Number(totalSGst) + Number(element.SGST);\n      totalAmount = Number(totalAmount) + Number(element.Amount);\n      totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount);\n      let cgst = data[\"tableTot\"].TotalCGst;\n      return {\n        TotalCGst: parseInt(totalCGst) + parseInt(cgst)\n      };\n    }\n\n    ;\n\n    function totalrow() {\n      return [`Total Quantity:${parseFloat(totalQuantity).toFixed(2)} ${element.UnitName}`, `BasicAmt:${parseFloat(totalBasicAmount).toFixed(2)}`, ``, \"\", `isaddition`, `CGSTAmt:${parseFloat(totalCGst).toFixed(2)}`, ``, `SGSTAmt:${parseFloat(totalSGst).toFixed(2)}`, \"\", `Amt:${parseFloat(totalAmount).toFixed(2)}`];\n    }\n\n    ;\n\n    if (Gst === 0) {\n      Gst = element.GSTPercentage;\n    }\n\n    ;\n    let aa = {\n      TotalCGst: 0,\n      totalSGst: 0\n    };\n\n    if (data[\"tableTot\"] === undefined) {\n      data[\"tableTot\"] = aa;\n    }\n\n    if (Gst === element.GSTPercentage) {\n      data[\"tableTot\"] = totalLots();\n      returnArr.push(tableitemRow);\n    } else {\n      returnArr.push(totalrow());\n      returnArr.push(tableitemRow);\n      totalBasicAmount = 0;\n      totalCGst = 0;\n      totalSGst = 0;\n      totalAmount = 0;\n      totalQuantity = 0;\n      data[\"tableTot\"] = totalLots();\n      Gst = element.GSTPercentage;\n    }\n\n    if (key === InvoiceItems.length - 1) {\n      returnArr.push(totalrow());\n    }\n  });\n  return returnArr;\n};\n_c = Rows;\nexport const BilledByRow = data => {\n  let DefaultAddress = data.PartyAddress.filter(IsDefaultAddress => IsDefaultAddress['IsDefault'] === true);\n  var date = date_dmy_func(DefaultAddress[0].FSSAIExipry);\n  var BilledByArray = [[`${data.PartyName}`], [`${data.PartyState}`], [`${DefaultAddress[0].Address}`], [`GSTIN:${data.PartyGSTIN}`], [`FSSAI NO${DefaultAddress[0].FSSAINo} (Exp:${date})`]];\n  return BilledByArray;\n};\n_c2 = BilledByRow;\nexport const BilledToRow = data => {\n  let DefaultAddress = data.CustomerAddress.filter(IsDefaultAddress => IsDefaultAddress['IsDefault'] === true);\n  var date = date_dmy_func(DefaultAddress[0].FSSAIExipry);\n  var BilledToArray = [[`${data.CustomerName}`], [`${data.CustomerState}`], [`${DefaultAddress[0].Address}`], [`GSTIN:${data.CustomerGSTIN}`], [`FSSAI NO:${DefaultAddress[0].FSSAINo} (Exp:${date})`]];\n  return BilledToArray;\n};\n_c3 = BilledToRow;\nexport const DetailsOfTransportRow = data => {\n  var DetailsOfTransportArray = [['Driver Name : Sameer'], [`vehical No :MH34566`], [`State:Maharashtra `], [`E-way Bill :24654364633`], [`INR NO :${data.FullInvoiceNumber}`]];\n  return DetailsOfTransportArray;\n};\n_c4 = DetailsOfTransportRow;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Rows\");\n$RefreshReg$(_c2, \"BilledByRow\");\n$RefreshReg$(_c3, \"BilledToRow\");\n$RefreshReg$(_c4, \"DetailsOfTransportRow\");","map":{"version":3,"names":["date_dmy_func","invoice","columns","columns1","BilledBy","BilledTo","DetailsOfTransport","Rows","data","InvoiceItems","sort","firstItem","secondItem","GSTPercentage","returnArr","Gst","totalBasicAmount","totalCGst","totalSGst","totalAmount","totalQuantity","forEach","element","key","tableitemRow","ItemName","MRP","Number","Quantity","toFixed","UnitName","Rate","BasicAmount","CGSTPercentage","CGST","SGSTPercentage","SGST","Amount","totalLots","cgst","TotalCGst","parseInt","totalrow","parseFloat","aa","undefined","push","length","BilledByRow","DefaultAddress","PartyAddress","filter","IsDefaultAddress","date","FSSAIExipry","BilledByArray","PartyName","PartyState","Address","PartyGSTIN","FSSAINo","BilledToRow","CustomerAddress","BilledToArray","CustomerName","CustomerState","CustomerGSTIN","DetailsOfTransportRow","DetailsOfTransportArray","FullInvoiceNumber"],"sources":["D:/Rohit/Git projects/Manthan/src/Reports/Invoice report a5/TableData.js"],"sourcesContent":["import { date_dmy_func } from \"../../components/Common/CommonFunction\";\r\nimport { invoice } from \"../ReportIndex\";\r\n\r\nexport const columns = [\r\n    \"HSN Item Name\",\r\n    \"MRP\",\r\n    \"Quantity\",\r\n    \"Rate\",\r\n    \"Basic Amt\",\r\n    \"CGST %\",\r\n    \"CGST Amt\",\r\n    \"SGST %\",\r\n    \"SGST Amt\",\r\n    \"Total Amt\"\r\n];\r\n\r\nexport const columns1 = [\r\n    \"HSN Item Name\",\r\n    \"Quantity\",\r\n    \"Rate\",\r\n    \"Basic Amount\",\r\n    \"CGST %\",\r\n    \"CGST Amount\",\r\n    \"SGST %\",\r\n    \"SGST Amount\",\r\n    \"Debit note\",\r\n    \"Credit note\",\r\n    \"Total Amt\"\r\n];\r\n\r\n\r\nexport const BilledBy = [\r\n    \"Billed by\",\r\n]\r\nexport const BilledTo = [\r\n    \"Billed by\",\r\n]\r\nexport const DetailsOfTransport = [\r\n    \"Billed by\",\r\n]\r\n\r\nexport const Rows = (data) => {\r\n    const { InvoiceItems = [] } = data\r\n    InvoiceItems.sort((firstItem, secondItem) => firstItem.GSTPercentage - secondItem.GSTPercentage);\r\n    const returnArr = [];\r\n    let Gst = 0\r\n    let totalBasicAmount = 0\r\n    let totalCGst = 0\r\n    let totalSGst = 0\r\n    let totalAmount = 0\r\n    let totalQuantity = 0\r\n\r\n    InvoiceItems.forEach((element, key) => {\r\n        const tableitemRow = [\r\n            element.ItemName,\r\n            element.MRP,\r\n            `${Number(element.Quantity).toFixed(2)} ${element.UnitName}`,\r\n            element.Rate,\r\n            element.BasicAmount,\r\n            ` ${element.CGSTPercentage}%`,\r\n            element.CGST,\r\n            ` ${element.SGSTPercentage}%`,\r\n            element.SGST,\r\n            element.Amount,\r\n\r\n        ];\r\n\r\n        function totalLots() {\r\n            totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n            totalCGst = Number(totalCGst) + Number(element.CGST)\r\n            totalSGst = Number(totalSGst) + Number(element.SGST)\r\n            totalAmount = Number(totalAmount) + Number(element.Amount)\r\n            totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount)\r\n            let cgst = data[\"tableTot\"].TotalCGst\r\n            return ({ TotalCGst: parseInt(totalCGst) + parseInt(cgst) })\r\n        };\r\n\r\n        function totalrow() {\r\n            return [\r\n                `Total Quantity:${parseFloat(totalQuantity).toFixed(2)} ${element.UnitName}`,\r\n                `BasicAmt:${parseFloat(totalBasicAmount).toFixed(2)}`,\r\n                ``,\r\n                \"\",\r\n                `isaddition`,\r\n                `CGSTAmt:${parseFloat(totalCGst).toFixed(2)}`,\r\n                ``,\r\n                `SGSTAmt:${parseFloat(totalSGst).toFixed(2)}`,\r\n                \"\",\r\n                `Amt:${parseFloat(totalAmount).toFixed(2)}`,\r\n            ];\r\n        };\r\n\r\n        if (Gst === 0) { Gst = element.GSTPercentage };\r\n        let aa = { TotalCGst: 0, totalSGst: 0 }\r\n        if (data[\"tableTot\"] === undefined) { data[\"tableTot\"] = aa }\r\n        if ((Gst === element.GSTPercentage)) {\r\n            data[\"tableTot\"] = totalLots()\r\n            returnArr.push(tableitemRow);\r\n        }\r\n        else {\r\n            returnArr.push(totalrow());\r\n            returnArr.push(tableitemRow);\r\n            totalBasicAmount = 0\r\n            totalCGst = 0\r\n            totalSGst = 0\r\n            totalAmount = 0\r\n            totalQuantity = 0\r\n\r\n            data[\"tableTot\"] = totalLots()\r\n            Gst = element.GSTPercentage;\r\n        }\r\n        if (key === InvoiceItems.length - 1) {\r\n            returnArr.push(totalrow());\r\n        }\r\n    })\r\n    return returnArr;\r\n}\r\n\r\nexport const BilledByRow = (data) => {\r\n    let DefaultAddress = data.PartyAddress.filter( IsDefaultAddress => IsDefaultAddress['IsDefault'] === true )\r\n    var date = date_dmy_func(DefaultAddress[0].FSSAIExipry)\r\n    var BilledByArray = [\r\n        [`${data.PartyName}`],\r\n        [`${data.PartyState}`],\r\n        [`${DefaultAddress[0].Address}`],\r\n        [`GSTIN:${data.PartyGSTIN}`],\r\n        [`FSSAI NO${DefaultAddress[0].FSSAINo} (Exp:${date})`],\r\n    ]\r\n    return BilledByArray;\r\n}\r\nexport const BilledToRow = (data) => {\r\n    let DefaultAddress = data.CustomerAddress.filter(IsDefaultAddress => IsDefaultAddress['IsDefault'] === true )\r\n    var date = date_dmy_func(DefaultAddress[0].FSSAIExipry)\r\n    var BilledToArray = [\r\n        [`${data.CustomerName}`],\r\n        [`${data.CustomerState}`],\r\n        [`${DefaultAddress[0].Address}`],\r\n        [`GSTIN:${data.CustomerGSTIN}`,],\r\n        [`FSSAI NO:${DefaultAddress[0].FSSAINo} (Exp:${date})`],\r\n    ]\r\n\r\n    return BilledToArray;\r\n}\r\nexport const DetailsOfTransportRow = (data) => {\r\n\r\n    var DetailsOfTransportArray = [\r\n        ['Driver Name : Sameer'],\r\n        [`vehical No :MH34566`],\r\n        [`State:Maharashtra `],\r\n        [`E-way Bill :24654364633`],\r\n        [`INR NO :${data.FullInvoiceNumber}`]\r\n    ]\r\n\r\n    return DetailsOfTransportArray;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}