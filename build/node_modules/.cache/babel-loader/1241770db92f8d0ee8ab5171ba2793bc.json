{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\ItemPages\\\\ItemMaster\\\\itemIndex.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Nav, NavItem, NavLink, Row, TabContent, Table, TabPane } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classnames from \"classnames\";\nimport Breadcrumb from \"../../../../components/Common/Breadcrumb\";\nimport { AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { fetchCompanyList } from \"../../../../store/Administrator/CompanyRedux/actions\";\nimport { editItemSuccess, getBaseUnit_ForDropDown, get_CategoryTypes_ForDropDown, get_Category_By_CategoryType_ForDropDown, get_Category_By_CategoryType_ForDropDownAPI, get_Category_By_CategoryType_ForDropDown_Success, get_Division_ForDropDown, get_ImageType_ForDropDown, get_Party_ForDropDown, get_PriceList_ForDropDown, get_Sub_Category_By_CategoryType_ForDropDown, get_Sub_Category_By_CategoryType_ForDropDown_Success, postItemData, PostItemDataSuccess, updateItemID } from \"../../../../store/Administrator/ItemsRedux/action\";\nimport { AlertState, Breadcrumb_inputName, getCategoryTypelist } from \"../../../../store/actions\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport { getPartyListAPI } from \"../../../../store/Administrator/PartyRedux/action\";\nimport GSTTab from \"./GST_Tab\";\nimport MRPTab from \"./MRP_Tab\";\nimport Margin_Tab from \"./MarginTab/index\";\nimport GroupTab from \"./Group_Tab\";\nimport CategoryTab from \"./Category_Tab\";\nimport DivisionTab from \"./Division_Tab\";\nimport UnitConverstion from \"./UnitConversion_Tab/Index\";\nimport Image from \"./Image_Tab/Index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemsMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [EditData, setEditData] = useState({});\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(\"save\");\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [activeTab1, setactiveTab1] = useState(\"1\");\n  let initial = {\n    Name: \"\",\n    Sequence: \"\",\n    ShortName: \"\",\n    BarCode: '',\n    Company: [],\n    BaseUnit: [],\n    Category: [],\n    CategoryType: [],\n    Division: [],\n    MRP: '',\n    GST: '',\n    HSN: '',\n    isActive: true\n  };\n  const initialInValid = [\"txtName0\", \"txtShortName0\"];\n  const [inValidDrop, setInValidDrop] = useState({\n    BaseUnit: false,\n    Company: false,\n    CategoryType: false,\n    Category: false,\n    Division: false\n  });\n  let [isValidate, setIsValidate] = useState(initialInValid);\n  const [formValue, setFormValue] = useState(initial);\n  const [pageRefresh, setpageRefresh] = useState(false);\n  const [marginMaster, setMarginMaster] = useState([]);\n  const [imageTabTable, setImageTabTable] = useState([{\n    ImageType: '',\n    ImageUpload: ''\n  }]);\n  const [baseUnitTableData, setBaseUnitTableData] = useState([{\n    Conversion: '',\n    Unit: '',\n    IsBase: false\n  }]);\n  const [MRP_Tab_TableData, setMRP_Tab_TableData] = useState([]);\n  const [Group_Tab_TableData, setGroup_Tab_TableData] = useState([]);\n  const [GStDetailsMaster, setGStDetailsMaster] = useState([]);\n  const {\n    companyList,\n    BaseUnit,\n    PostAPIResponse,\n    userAccess,\n    Division,\n    CategoryTypeList,\n    CategoryList\n  } = useSelector(state => ({\n    companyList: state.Company.companyList,\n    BaseUnit: state.ItemMastersReducer.BaseUnit,\n    userAccess: state.Login.RoleAccessUpdateData,\n    PostAPIResponse: state.ItemMastersReducer.postMessage,\n    Division: state.ItemMastersReducer.Division,\n    CategoryTypeList: state.categoryTypeReducer.categoryTypeListData,\n    CategoryList: state.ItemMastersReducer.Category\n  }));\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]);\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        setEditData(hasEditVal);\n        dispatch(Breadcrumb_inputName(hasEditVal.Name));\n        const editDivision = hasEditVal.ItemDivisionDetails.map(index => ({\n          value: index.Division,\n          label: index.DivisionName\n        }));\n        const editCategoryType = {\n          value: hasEditVal.ItemCategoryDetails[0].CategoryType,\n          label: hasEditVal.ItemCategoryDetails[0].CategoryTypeName\n        };\n        const editCategory = hasEditVal.ItemCategoryDetails.map(index => ({\n          value: index.Category,\n          label: index.CategoryName\n        }));\n        let initialFormValue = {\n          // ====================== Base detail tab ======================\n          Name: hasEditVal.Name,\n          Sequence: hasEditVal.Sequence,\n          ShortName: hasEditVal.ShortName,\n          BarCode: hasEditVal.BarCode,\n          Company: {\n            label: hasEditVal.CompanyName,\n            value: hasEditVal.Company\n          },\n          CategoryType: editCategoryType,\n          Category: editCategory,\n          Division: editDivision,\n          BaseUnit: {\n            label: hasEditVal.BaseUnitName,\n            value: hasEditVal.BaseUnitID\n          },\n          isActive: hasEditVal.isActive\n        }; // ====================== Images tab ======================\n\n        let ItemImagesDetails = hasEditVal.ItemImagesDetails.map(index => {\n          return {\n            ImageType: {\n              label: index.ImageTypeName,\n              value: index.ImageType\n            },\n            ImageUpload: index.Item_pic\n          };\n        }); // ====================== Unit Conversion tab  start ======================\n\n        const UnitDetails = [];\n        hasEditVal.ItemUnitDetails.forEach(index => {\n          if (!index.IsBase) {\n            UnitDetails.push({\n              Unit: {\n                label: index.UnitName,\n                value: index.UnitID\n              },\n              Conversion: index.BaseUnitQuantity,\n              IsBase: false\n            });\n          }\n        });\n        debugger;\n\n        if (UnitDetails.length === 0) {\n          UnitDetails.push({\n            Unit: '',\n            Conversion: '',\n            IsBase: false\n          });\n        }\n\n        ;\n        setBaseUnitTableData(UnitDetails); // ====================== Unit Conversion tab  end ======================\n\n        setFormValue(initialFormValue);\n        setImageTabTable(ItemImagesDetails);\n        setMRP_Tab_TableData(hasEditVal.ItemMRPDetails);\n        setMarginMaster(hasEditVal.ItemMarginDetails);\n        setGStDetailsMaster(hasEditVal.ItemGSTHSNDetails);\n        setGroup_Tab_TableData(hasEditVal.ItemGroupDetails);\n        dispatch(editItemSuccess({\n          Status: false\n        }));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200 && !(pageMode === \"dropdownAdd\")) {\n      dispatch(PostItemDataSuccess({\n        Status: false\n      }));\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/ItemList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(PostItemDataSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostAPIResponse.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    dispatch(fetchCompanyList());\n    dispatch(getBaseUnit_ForDropDown());\n    dispatch(get_CategoryTypes_ForDropDown());\n    dispatch(getPartyListAPI());\n    dispatch(get_ImageType_ForDropDown());\n    dispatch(get_Division_ForDropDown());\n    dispatch(get_Party_ForDropDown());\n    dispatch(get_PriceList_ForDropDown());\n    dispatch(getCategoryTypelist());\n    dispatch(get_Category_By_CategoryType_ForDropDownAPI());\n  }, [dispatch]);\n\n  const toggle1 = tab => {\n    if (activeTab1 !== tab) {\n      setactiveTab1(tab);\n    }\n  };\n\n  const Company_DropdownOptions = companyList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const BaseUnit_DropdownOptions = BaseUnit.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const CategoryTypeList_DropdownOptions = CategoryTypeList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const CategoryList_DropdownOptions = CategoryList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const Division_DropdownOptions = Division.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function dropDownValidation(event, type) {\n    let returnVal = event.value === '';\n\n    if (returnVal) {\n      inValidDrop[type] = true;\n      return;\n    } else {\n      formValue[type] = event;\n      inValidDrop[type] = false;\n    }\n\n    setpageRefresh(!pageRefresh);\n  }\n\n  function Common_Text_INPUT_Validation(value, type, key) {\n    let OnchangeControl = document.getElementById(`txt${type}${key}`);\n\n    if (value === '') {\n      OnchangeControl.className = 'form-control is-invalid';\n      return false;\n    } else {\n      OnchangeControl.className = 'form-control';\n      return true;\n    }\n  }\n\n  function CommonTab_SimpleText_INPUT_handller_ForAll(event, type, key) {\n    let validateReturn = Common_Text_INPUT_Validation(event, type, 0);\n\n    if (validateReturn === false) {\n      isValidate.push(`txt${type}0`);\n      return;\n    } else {\n      formValue[type] = event;\n      isValidate = isValidate.filter(indF => {\n        return !(indF === `txt${type}0`);\n      });\n      setIsValidate(isValidate);\n    }\n  }\n\n  const CategoryType_Handler = event => {\n    dropDownValidation(event, \"CategoryType\"); // setCategoryTypeDropdownSelect(event);\n\n    dispatch(get_Category_By_CategoryType_ForDropDownAPI(event.value));\n  };\n\n  const Category_Handler = event => {\n    dropDownValidation(event, \"Category\");\n  };\n\n  const Division_Handler = event => {\n    dropDownValidation(event, \"Division\");\n  };\n\n  const handleValidSubmit = (event, values) => {\n    let isvalid = true;\n    let inValidMsg = [];\n\n    if (formValue.Name === '') {\n      document.getElementById(\"txtName0\").className = \"form-control is-invalid\";\n      inValidMsg.push(\"Name: Is Requried\");\n      isvalid = false;\n    }\n\n    if (formValue.ShortName === '') {\n      document.getElementById(\"txtShortName0\").className = \"form-control is-invalid\";\n      isvalid = false;\n      inValidMsg.push(\"ShortName: Is Requried\");\n    }\n\n    if (formValue.Company.length < 1) {\n      inValidDrop.Company = true;\n      isvalid = false;\n      inValidMsg.push(\"Company: Is Requried\");\n    }\n\n    if (formValue.BaseUnit.length < 1) {\n      inValidDrop.BaseUnit = true;\n      isvalid = false;\n      inValidMsg.push(\"BaseUnit: Is Requried\");\n    }\n\n    if (formValue.CategoryType.length < 1) {\n      inValidDrop.CategoryType = true;\n      isvalid = false;\n      inValidMsg.push(\"CategoryType: Is Requried\");\n    }\n\n    if (formValue.Category.length < 1) {\n      inValidDrop.Category = true;\n      isvalid = false;\n      inValidMsg.push(\"Category: Is Requried\");\n    }\n\n    if (formValue.Division.length < 1) {\n      inValidDrop.Division = true;\n      isvalid = false;\n      inValidMsg.push(\"Division:Is Requried\");\n    }\n\n    if (!Group_Tab_TableData.length > 0) {\n      isvalid = false;\n      inValidMsg.push(\" GroupType Primary:Is Requried\");\n    } else {\n      const found = Group_Tab_TableData.find(element => {\n        return element.GroupTypeName === \"Primary\";\n      });\n\n      if (found === undefined) {\n        isvalid = false;\n        inValidMsg.push(\" GroupType Primary:Is Requried\");\n      }\n    }\n\n    if (isvalid) {\n      /// ************* is valid if start \n      // ====================== Unit conversion *****start ======================\n      const itemUnitDetails = [];\n      baseUnitTableData.forEach((index, key) => {\n        const found = baseUnitTableData.find((i, k) => {\n          return index.Conversion === i.Conversion && index.Unit.value === i.Unit.value && !(key === k);\n        });\n        const found2 = itemUnitDetails.find((i, k) => {\n          return index.Conversion === i.BaseUnitQuantity && index.Unit.value === i.UnitID && !(key === k);\n        });\n        debugger;\n\n        if ((found === undefined || found2 === undefined) && !(index.Conversion === '') && !(index.Unit === '')) {\n          debugger;\n          itemUnitDetails.push({\n            BaseUnitQuantity: index.Conversion,\n            UnitID: index.Unit.value,\n            IsBase: index.IsBase\n          });\n        }\n      });\n      debugger;\n      if (pageMode === 'save') itemUnitDetails.push({\n        BaseUnitQuantity: 1,\n        UnitID: formValue.BaseUnit.value,\n        IsBase: true\n      }); //  ======================   ItemCategoryDetails *****start   ====================== \n\n      const ItemCategoryDetails = formValue.Category.map(index => ({\n        CategoryType: formValue.CategoryType.value,\n        Category: index.value\n      })); //  ======================   MRP_Tab_TableData *****start   ====================== \n\n      let hasAdd_MRP = [];\n      MRP_Tab_TableData.forEach(index => {\n        if (index.IsAdd === true) {\n          hasAdd_MRP.push(index);\n        }\n      }); // ======================  marginMaster *****start   ====================== \n\n      let hasAdd_Margin = [];\n      marginMaster.forEach(index => {\n        if (index.IsAdd === true) {\n          hasAdd_Margin.push(index);\n        }\n      }); // ======================  GStDetailsMaster *****start   ====================== \n\n      let hasAdd_GST = [];\n      GStDetailsMaster.forEach(index => {\n        if (index.IsAdd === true) {\n          hasAdd_GST.push(index);\n        }\n      });\n      const jsonBody = JSON.stringify({\n        Name: formValue.Name,\n        ShortName: formValue.ShortName,\n        Sequence: formValue.Sequence,\n        BarCode: formValue.BarCode,\n        isActive: formValue.isActive,\n        Company: formValue.Company.value,\n        BaseUnitID: formValue.BaseUnit.value,\n        CreatedBy: 1,\n        UpdatedBy: 1,\n        ItemCategoryDetails: ItemCategoryDetails,\n        ItemUnitDetails: itemUnitDetails,\n        ItemDivisionDetails: formValue.Division.map(i => {\n          return {\n            Division: i.value\n          };\n        }),\n        ItemImagesDetails: imageTabTable.map(i => ({\n          ImageType: i.ImageType.value,\n          Item_pic: i.ImageUpload\n        })),\n        ItemMRPDetails: hasAdd_MRP,\n        ItemMarginDetails: hasAdd_Margin,\n        ItemGSTHSNDetails: hasAdd_GST,\n        ItemGroupDetails: Group_Tab_TableData\n      });\n\n      if (pageMode === 'edit') {\n        dispatch(updateItemID(jsonBody, EditData.id));\n        console.log(\"edit json\", jsonBody);\n      } else {\n        dispatch(postItemData(jsonBody));\n        console.log(\"post json\", jsonBody);\n      }\n    } /// ************* is valid if start \n    else {\n      /// ************* is valid esle start \n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(inValidMsg),\n        // Message: (inValidMsg),\n        RedirectPath: false,\n        PermissionAction: false\n      }));\n    }\n  };\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Item Master| FoodERP-React FrontEnd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            onValidSubmit: (e, v) => {\n              handleValidSubmit(e, v);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n              breadcrumbItem: userPageAccessState.PageHeading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                    className: \"card-header   text-black\",\n                    style: {\n                      backgroundColor: \"#dddddd\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"card-title text-black\",\n                      children: userPageAccessState.PageDescription\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-title-desc text-black\",\n                      children: userPageAccessState.PageDescriptionDetails\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                    children: [/*#__PURE__*/_jsxDEV(Nav, {\n                      tabs: true,\n                      className: \"nav-tabs-custom nav-justified\",\n                      children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-1\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"1\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"1\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 620,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 619,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Basic Info\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 622,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 609,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 608,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-2\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"2\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"2\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 638,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 637,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Item Group\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 640,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 627,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 626,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-3\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"3\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"3\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 656,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 655,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Unit Conversions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 658,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 645,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-5\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"4\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"4\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 673,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 672,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 675,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 662,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 661,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-5\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"5\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"5\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 691,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 690,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"MRP\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 693,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 680,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 679,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-6\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"6\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"6\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 709,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 708,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Margin\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 711,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 698,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 697,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-7\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"7\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"7\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 727,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 726,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"GST Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 729,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 716,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 715,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n                      activeTab: activeTab1,\n                      className: \"p-3 text-muted\",\n                      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"1\",\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          md: 12,\n                          children: /*#__PURE__*/_jsxDEV(Card, {\n                            className: \"text-black\",\n                            children: /*#__PURE__*/_jsxDEV(CardBody, {\n                              style: {\n                                backgroundColor: \"whitesmoke\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    children: \"Name\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 743,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    type: \"text\",\n                                    id: \"txtName0\",\n                                    placeholder: \" Please Enter Name \",\n                                    defaultValue: EditData.Name,\n                                    autoComplete: \"off\" // onChange={(e) => { dispatch(Breadcrumb_inputName(e.target.value)) }}\n                                    ,\n                                    onChange: e => {\n                                      dispatch(Breadcrumb_inputName(e.target.value));\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Name\");\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 744,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 742,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    children: \"ShortName\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 758,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    type: \"text\",\n                                    id: \"txtShortName0\",\n                                    className: \"\",\n                                    defaultValue: EditData.ShortName,\n                                    placeholder: \" Please Enter ShortName \",\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"ShortName\");\n                                    } // onChange={(e) => { formValue.ShortName = e.target.value }}\n\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 759,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 757,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \" col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom21\",\n                                    children: \"Company\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 771,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    id: \"dropCompany-0\",\n                                    value: formValue.Company,\n                                    options: Company_DropdownOptions,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.Company ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: event => dropDownValidation(event, \"Company\")\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 772,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 770,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 740,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \" col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom21\",\n                                    children: \"Base Unit\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 791,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    id: \"dropBaseUnit-0\",\n                                    value: formValue.BaseUnit,\n                                    options: BaseUnit_DropdownOptions,\n                                    isDisabled: pageMode === \"edit\" ? true : false,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.BaseUnit ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: event => dropDownValidation(event, \"BaseUnit\")\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 792,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 790,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"BarCode\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 809,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    id: \"txtBarCode0\",\n                                    placeholder: \" Please Enter BarCode \",\n                                    defaultValue: EditData.BarCode,\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"BarCode\");\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 810,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 808,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"Sequence\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 820,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    id: \"txtSequence0\",\n                                    defaultValue: EditData.Sequence,\n                                    placeholder: \" Please Enter Sequence \",\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Sequence\");\n                                    } // onChange={(e) => { formValue.Sequence = e.target.value }}\n\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 821,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 819,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 789,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    children: \"Category Type\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 835,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    id: `dropCategoryType-${0}`,\n                                    value: formValue.CategoryType,\n                                    options: CategoryTypeList_DropdownOptions,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.CategoryType ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: e => {\n                                      CategoryType_Handler(e);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 836,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 834,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    className: \"form-label font-size-13 \",\n                                    children: \"Category\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 854,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    defaultValue: formValue.Category,\n                                    isMulti: true,\n                                    className: \"basic-multi-select\",\n                                    options: CategoryList_DropdownOptions,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.Category ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: e => {\n                                      Category_Handler(e);\n                                    },\n                                    classNamePrefix: \"select2-selection\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 855,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 852,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 833,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"mb-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                                      className: \"form-label font-size-13 \",\n                                      children: \"Division\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 877,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                      defaultValue: formValue.Division,\n                                      isMulti: true,\n                                      className: \"basic-multi-select\",\n                                      options: Division_DropdownOptions,\n                                      styles: {\n                                        control: base => ({ ...base,\n                                          border: inValidDrop.Division ? '1px solid red' : ''\n                                        })\n                                      },\n                                      onChange: e => {\n                                        Division_Handler(e);\n                                      },\n                                      classNamePrefix: \"select2-selection\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 878,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 876,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 875,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mt-4 col col-md-5\",\n                                  children: /*#__PURE__*/_jsxDEV(Row, {\n                                    className: \"justify-content-ml-left \",\n                                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                                      htmlFor: \"horizontal-firstname-input\",\n                                      className: \"col-md-2 col-form-label\",\n                                      children: \"Active \"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 897,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                      md: 6,\n                                      style: {\n                                        marginTop: '9px'\n                                      },\n                                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                        className: \"form-check form-switch form-switch-md mb-3\",\n                                        dir: \"ltr\",\n                                        children: /*#__PURE__*/_jsxDEV(Input, {\n                                          type: \"checkbox\",\n                                          className: \"form-check-input\",\n                                          id: \"customSwitchsizemd\",\n                                          defaultChecked: formValue.isActive,\n                                          onChange: e => {\n                                            formValue.isActive = e.target.checked;\n                                          }\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 902,\n                                          columnNumber: 85\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 901,\n                                        columnNumber: 81\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 899,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 896,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 895,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 874,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 739,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 738,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 737,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 736,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"2\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(GroupTab, {\n                                  tableData: Group_Tab_TableData,\n                                  func: setGroup_Tab_TableData\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 925,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 924,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 923,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 922,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 921,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 920,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(UnitConverstion, {\n                          state: {\n                            pageMode: pageMode,\n                            formValue: formValue,\n                            TableData: baseUnitTableData,\n                            BaseUnit: BaseUnit\n                          },\n                          settable: setBaseUnitTableData,\n                          setFormValue: setFormValue\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 933,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 931,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"4\",\n                        children: /*#__PURE__*/_jsxDEV(Image, {\n                          state: {\n                            imageTable: imageTabTable,\n                            setImageTable: setImageTabTable\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1052,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1051,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"5\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(MRPTab, {\n                                  tableData: MRP_Tab_TableData,\n                                  func: setMRP_Tab_TableData\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1065,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1064,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1063,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1062,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1061,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1060,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"6\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(Margin_Tab, {\n                                  tableData: marginMaster,\n                                  func: setMarginMaster\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1078,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1077,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1076,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1075,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1074,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1072,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"7\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(GSTTab, {\n                                  tableData: GStDetailsMaster,\n                                  func: setGStDetailsMaster\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1091,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1090,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1089,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1088,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1087,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1086,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 735,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        sm: 2,\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"submit\",\n                            \"data-mdb-toggle\": \"tooltip\",\n                            \"data-mdb-placement\": \"top\",\n                            title: \"Update Role\",\n                            className: \"btn btn-success w-md\",\n                            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-edit me-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1109,\n                              columnNumber: 73\n                            }, this), \"Update\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1104,\n                            columnNumber: 69\n                          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"submit\",\n                            \"data-mdb-toggle\": \"tooltip\",\n                            \"data-mdb-placement\": \"top\",\n                            title: \"Save Role\",\n                            className: \"btn btn-primary w-md\",\n                            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-save me-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1119,\n                              columnNumber: 75\n                            }, this), \" Save\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1115,\n                            columnNumber: 73\n                          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1100,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1099,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1098,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1141,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(ItemsMaster, \"p0X3sYoOrPlsDkMhgJkkP8J6chk=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ItemsMaster;\nexport default ItemsMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsMaster\");","map":{"version":3,"names":["React","useEffect","useState","MetaTags","Button","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Nav","NavItem","NavLink","Row","TabContent","Table","TabPane","Link","useHistory","useDispatch","useSelector","classnames","Breadcrumb","AvForm","Select","fetchCompanyList","editItemSuccess","getBaseUnit_ForDropDown","get_CategoryTypes_ForDropDown","get_Category_By_CategoryType_ForDropDown","get_Category_By_CategoryType_ForDropDownAPI","get_Category_By_CategoryType_ForDropDown_Success","get_Division_ForDropDown","get_ImageType_ForDropDown","get_Party_ForDropDown","get_PriceList_ForDropDown","get_Sub_Category_By_CategoryType_ForDropDown","get_Sub_Category_By_CategoryType_ForDropDown_Success","postItemData","PostItemDataSuccess","updateItemID","AlertState","Breadcrumb_inputName","getCategoryTypelist","Tbody","Thead","getPartyListAPI","GSTTab","MRPTab","Margin_Tab","GroupTab","CategoryTab","DivisionTab","UnitConverstion","Image","ItemsMaster","props","dispatch","history","EditData","setEditData","modalCss","setModalCss","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","activeTab1","setactiveTab1","initial","Name","Sequence","ShortName","BarCode","Company","BaseUnit","Category","CategoryType","Division","MRP","GST","HSN","isActive","initialInValid","inValidDrop","setInValidDrop","isValidate","setIsValidate","formValue","setFormValue","pageRefresh","setpageRefresh","marginMaster","setMarginMaster","imageTabTable","setImageTabTable","ImageType","ImageUpload","baseUnitTableData","setBaseUnitTableData","Conversion","Unit","IsBase","MRP_Tab_TableData","setMRP_Tab_TableData","Group_Tab_TableData","setGroup_Tab_TableData","GStDetailsMaster","setGStDetailsMaster","companyList","PostAPIResponse","userAccess","CategoryTypeList","CategoryList","state","ItemMastersReducer","Login","RoleAccessUpdateData","postMessage","categoryTypeReducer","categoryTypeListData","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","editDivision","ItemDivisionDetails","map","index","value","label","DivisionName","editCategoryType","ItemCategoryDetails","CategoryTypeName","editCategory","CategoryName","initialFormValue","CompanyName","BaseUnitName","BaseUnitID","ItemImagesDetails","ImageTypeName","Item_pic","UnitDetails","ItemUnitDetails","forEach","push","UnitName","UnitID","BaseUnitQuantity","length","ItemMRPDetails","ItemMarginDetails","ItemGSTHSNDetails","ItemGroupDetails","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","toggle1","tab","Company_DropdownOptions","data","id","BaseUnit_DropdownOptions","CategoryTypeList_DropdownOptions","CategoryList_DropdownOptions","Division_DropdownOptions","dropDownValidation","event","type","returnVal","Common_Text_INPUT_Validation","key","OnchangeControl","document","getElementById","className","CommonTab_SimpleText_INPUT_handller_ForAll","validateReturn","filter","indF","CategoryType_Handler","Category_Handler","Division_Handler","handleValidSubmit","values","isvalid","inValidMsg","found","element","GroupTypeName","undefined","itemUnitDetails","i","k","found2","hasAdd_MRP","IsAdd","hasAdd_Margin","hasAdd_GST","jsonBody","CreatedBy","UpdatedBy","console","log","PermissionAction","IsEditMode_Css","marginTop","e","v","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","cursor","active","target","control","base","border","checked","TableData","imageTable","setImageTable","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/ItemPages/ItemMaster/itemIndex.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport MetaTags from \"react-meta-tags\"\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    TabContent,\r\n    Table,\r\n    TabPane,\r\n} from \"reactstrap\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classnames from \"classnames\"\r\nimport Breadcrumb from \"../../../../components/Common/Breadcrumb\";\r\nimport { AvForm } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport { fetchCompanyList } from \"../../../../store/Administrator/CompanyRedux/actions\"\r\nimport {\r\n    editItemSuccess,\r\n    getBaseUnit_ForDropDown,\r\n    get_CategoryTypes_ForDropDown,\r\n    get_Category_By_CategoryType_ForDropDown,\r\n    get_Category_By_CategoryType_ForDropDownAPI,\r\n    get_Category_By_CategoryType_ForDropDown_Success,\r\n    get_Division_ForDropDown,\r\n    get_ImageType_ForDropDown,\r\n    get_Party_ForDropDown,\r\n    get_PriceList_ForDropDown,\r\n    get_Sub_Category_By_CategoryType_ForDropDown,\r\n    get_Sub_Category_By_CategoryType_ForDropDown_Success,\r\n    postItemData,\r\n    PostItemDataSuccess,\r\n    updateItemID\r\n} from \"../../../../store/Administrator/ItemsRedux/action\";\r\nimport { AlertState, Breadcrumb_inputName, getCategoryTypelist } from \"../../../../store/actions\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\nimport { getPartyListAPI } from \"../../../../store/Administrator/PartyRedux/action\";\r\nimport GSTTab from \"./GST_Tab\";\r\nimport MRPTab from \"./MRP_Tab\";\r\nimport Margin_Tab from \"./MarginTab/index\";\r\nimport GroupTab from \"./Group_Tab\";\r\nimport CategoryTab from \"./Category_Tab\";\r\nimport DivisionTab from \"./Division_Tab\";\r\nimport UnitConverstion from \"./UnitConversion_Tab/Index\";\r\nimport Image from \"./Image_Tab/Index\";\r\n\r\nconst ItemsMaster = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n\r\n    const [EditData, setEditData] = useState({});\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(\"save\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n    const [activeTab1, setactiveTab1] = useState(\"1\")\r\n\r\n\r\n    let initial = {\r\n        Name: \"\",\r\n        Sequence: \"\",\r\n        ShortName: \"\",\r\n        BarCode: '',\r\n        Company: [],\r\n        BaseUnit: [],\r\n        Category: [],\r\n        CategoryType: [],\r\n        Division: [],\r\n        MRP: '',\r\n        GST: '',\r\n        HSN: '',\r\n        isActive: true,\r\n    }\r\n\r\n    const initialInValid = [\"txtName0\", \"txtShortName0\",]\r\n    const [inValidDrop, setInValidDrop] = useState({\r\n        BaseUnit: false,\r\n        Company: false,\r\n        CategoryType: false,\r\n        Category: false,\r\n        Division: false\r\n    })\r\n    let [isValidate, setIsValidate] = useState(initialInValid);\r\n\r\n    const [formValue, setFormValue] = useState(initial);\r\n    const [pageRefresh, setpageRefresh] = useState(false);\r\n\r\n\r\n\r\n    const [marginMaster, setMarginMaster] = useState([]);\r\n\r\n    const [imageTabTable, setImageTabTable] = useState([{\r\n        ImageType: '',\r\n        ImageUpload: ''\r\n    }]);\r\n    const [baseUnitTableData, setBaseUnitTableData] = useState([{\r\n        Conversion: '',\r\n        Unit: '',\r\n        IsBase: false\r\n    }]);\r\n\r\n\r\n    const [MRP_Tab_TableData, setMRP_Tab_TableData] = useState([]);\r\n\r\n    const [Group_Tab_TableData, setGroup_Tab_TableData] = useState([]);\r\n\r\n\r\n    const [GStDetailsMaster, setGStDetailsMaster] = useState([]);\r\n\r\n    const {\r\n        companyList,\r\n        BaseUnit,\r\n        PostAPIResponse,\r\n        userAccess,\r\n        Division,\r\n        CategoryTypeList,\r\n        CategoryList\r\n    } = useSelector((state) => ({\r\n        companyList: state.Company.companyList,\r\n        BaseUnit: state.ItemMastersReducer.BaseUnit,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        PostAPIResponse: state.ItemMastersReducer.postMessage,\r\n        Division: state.ItemMastersReducer.Division,\r\n        CategoryTypeList: state.categoryTypeReducer.categoryTypeListData,\r\n        CategoryList: state.ItemMastersReducer.Category,\r\n    }));\r\n\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                setEditData(hasEditVal);\r\n                dispatch(Breadcrumb_inputName(hasEditVal.Name))\r\n\r\n                const editDivision = hasEditVal.ItemDivisionDetails.map(index => ({\r\n                    value: index.Division,\r\n                    label: index.DivisionName\r\n                }))\r\n\r\n                const editCategoryType = {\r\n                    value: hasEditVal.ItemCategoryDetails[0].CategoryType,\r\n                    label: hasEditVal.ItemCategoryDetails[0].CategoryTypeName\r\n                }\r\n\r\n                const editCategory = hasEditVal.ItemCategoryDetails.map(index => ({\r\n                    value: index.Category,\r\n                    label: index.CategoryName\r\n                }))\r\n\r\n                let initialFormValue = {\r\n                    // ====================== Base detail tab ======================\r\n\r\n                    Name: hasEditVal.Name,\r\n                    Sequence: hasEditVal.Sequence,\r\n                    ShortName: hasEditVal.ShortName,\r\n                    BarCode: hasEditVal.BarCode,\r\n                    Company: { label: hasEditVal.CompanyName, value: hasEditVal.Company },\r\n                    CategoryType: editCategoryType,\r\n                    Category: editCategory,\r\n                    Division: editDivision,\r\n                    BaseUnit: { label: hasEditVal.BaseUnitName, value: hasEditVal.BaseUnitID },\r\n                    isActive: hasEditVal.isActive,\r\n                }\r\n                // ====================== Images tab ======================\r\n\r\n                let ItemImagesDetails = hasEditVal.ItemImagesDetails.map((index) => {\r\n                    return {\r\n                        ImageType: {\r\n                            label: index.ImageTypeName,\r\n                            value: index.ImageType\r\n                        },\r\n                        ImageUpload: index.Item_pic\r\n                    }\r\n                })\r\n\r\n                // ====================== Unit Conversion tab  start ======================\r\n\r\n                const UnitDetails = []\r\n                hasEditVal.ItemUnitDetails.forEach((index) => {\r\n                    if (!index.IsBase) {\r\n                        UnitDetails.push({\r\n                            Unit: { label: index.UnitName, value: index.UnitID },\r\n                            Conversion: index.BaseUnitQuantity,\r\n                            IsBase: false\r\n                        })\r\n                    }\r\n                })\r\n                debugger\r\n                if ((UnitDetails.length === 0)) {\r\n                    UnitDetails.push({\r\n                        Unit: '',\r\n                        Conversion: '',\r\n                        IsBase: false,\r\n                    })\r\n                };\r\n\r\n                setBaseUnitTableData(UnitDetails)\r\n                // ====================== Unit Conversion tab  end ======================\r\n\r\n                setFormValue(initialFormValue);\r\n                setImageTabTable(ItemImagesDetails)\r\n\r\n                setMRP_Tab_TableData(hasEditVal.ItemMRPDetails)\r\n                setMarginMaster(hasEditVal.ItemMarginDetails)\r\n                setGStDetailsMaster(hasEditVal.ItemGSTHSNDetails)\r\n                setGroup_Tab_TableData(hasEditVal.ItemGroupDetails)\r\n\r\n                dispatch(editItemSuccess({ Status: false }))\r\n\r\n            }\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200) && !(pageMode === \"dropdownAdd\")) {\r\n            dispatch(PostItemDataSuccess({ Status: false }))\r\n\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/ItemList',\r\n                }))\r\n            }\r\n        }\r\n\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(PostItemDataSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostAPIResponse.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCompanyList());\r\n        dispatch(getBaseUnit_ForDropDown());\r\n        dispatch(get_CategoryTypes_ForDropDown());\r\n        dispatch(getPartyListAPI());\r\n        dispatch(get_ImageType_ForDropDown());\r\n        dispatch(get_Division_ForDropDown());\r\n        dispatch(get_Party_ForDropDown());\r\n        dispatch(get_PriceList_ForDropDown());\r\n        dispatch(getCategoryTypelist());\r\n        dispatch(get_Category_By_CategoryType_ForDropDownAPI());\r\n    }, [dispatch]);\r\n\r\n\r\n    const toggle1 = tab => {\r\n        if (activeTab1 !== tab) {\r\n            setactiveTab1(tab)\r\n        }\r\n    }\r\n\r\n    const Company_DropdownOptions = companyList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    const BaseUnit_DropdownOptions = BaseUnit.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n\r\n    const CategoryTypeList_DropdownOptions = CategoryTypeList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name,\r\n    }));\r\n\r\n    const CategoryList_DropdownOptions = CategoryList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name,\r\n    }));\r\n\r\n\r\n\r\n\r\n    const Division_DropdownOptions = Division.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n    function dropDownValidation(event, type,) {\r\n\r\n        let returnVal = event.value === ''\r\n        if (returnVal) {\r\n            inValidDrop[type] = true\r\n            return\r\n        } else {\r\n            formValue[type] = event\r\n            inValidDrop[type] = false\r\n\r\n        }\r\n        setpageRefresh(!pageRefresh)\r\n    }\r\n\r\n    function Common_Text_INPUT_Validation(value, type, key) {\r\n\r\n        let OnchangeControl = document.getElementById(`txt${type}${key}`)\r\n\r\n        if (value === '') {\r\n            OnchangeControl.className = 'form-control is-invalid'\r\n            return false\r\n        } else {\r\n            OnchangeControl.className = 'form-control';\r\n            return true\r\n        }\r\n    }\r\n    function CommonTab_SimpleText_INPUT_handller_ForAll(event, type, key) {\r\n\r\n        let validateReturn = Common_Text_INPUT_Validation(event, type, 0);\r\n\r\n        if (validateReturn === false) {\r\n            isValidate.push(`txt${type}0`)\r\n            return\r\n        } else {\r\n\r\n            formValue[type] = event\r\n            isValidate = isValidate.filter((indF) => {\r\n                return !(indF === `txt${type}0`)\r\n            })\r\n            setIsValidate(isValidate)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const CategoryType_Handler = (event) => {\r\n        dropDownValidation(event, \"CategoryType\")\r\n        // setCategoryTypeDropdownSelect(event);\r\n        dispatch(get_Category_By_CategoryType_ForDropDownAPI(event.value))\r\n    };\r\n\r\n    const Category_Handler = (event) => {\r\n        dropDownValidation(event, \"Category\")\r\n    };\r\n\r\n    const Division_Handler = (event) => {\r\n        dropDownValidation(event, \"Division\")\r\n\r\n    };\r\n\r\n    const handleValidSubmit = (event, values) => {\r\n\r\n        let isvalid = true\r\n        let inValidMsg = []\r\n\r\n        if (formValue.Name === '') {\r\n            document.getElementById(\"txtName0\").className = \"form-control is-invalid\"\r\n            inValidMsg.push(\"Name: Is Requried\")\r\n            isvalid = false\r\n        }\r\n        if (formValue.ShortName === '') {\r\n            document.getElementById(\"txtShortName0\").className = \"form-control is-invalid\"\r\n            isvalid = false\r\n            inValidMsg.push(\"ShortName: Is Requried\")\r\n        }\r\n        if (formValue.Company.length < 1) {\r\n            inValidDrop.Company = true\r\n            isvalid = false\r\n            inValidMsg.push(\"Company: Is Requried\")\r\n        }\r\n        if (formValue.BaseUnit.length < 1) {\r\n            inValidDrop.BaseUnit = true\r\n            isvalid = false\r\n            inValidMsg.push(\"BaseUnit: Is Requried\")\r\n\r\n        }\r\n        if (formValue.CategoryType.length < 1) {\r\n            inValidDrop.CategoryType = true\r\n            isvalid = false\r\n            inValidMsg.push(\"CategoryType: Is Requried\")\r\n        }\r\n        if (formValue.Category.length < 1) {\r\n            inValidDrop.Category = true\r\n            isvalid = false\r\n            inValidMsg.push(\"Category: Is Requried\")\r\n\r\n        }\r\n\r\n        if (formValue.Division.length < 1) {\r\n            inValidDrop.Division = true\r\n            isvalid = false\r\n            inValidMsg.push(\"Division:Is Requried\")\r\n        }\r\n        if (!Group_Tab_TableData.length > 0) {\r\n            isvalid = false\r\n            inValidMsg.push(\" GroupType Primary:Is Requried\")\r\n        }\r\n        else {\r\n            const found = Group_Tab_TableData.find(element => {\r\n                return element.GroupTypeName === \"Primary\"\r\n            });\r\n            if (found === undefined) {\r\n                isvalid = false;\r\n                inValidMsg.push(\" GroupType Primary:Is Requried\")\r\n            }\r\n        }\r\n        if (isvalid) {/// ************* is valid if start \r\n\r\n            // ====================== Unit conversion *****start ======================\r\n\r\n            const itemUnitDetails = []\r\n\r\n            baseUnitTableData.forEach((index, key) => {\r\n\r\n                const found = baseUnitTableData.find((i, k) => {\r\n                    return ((index.Conversion === i.Conversion) && (index.Unit.value === i.Unit.value) && !(key === k))\r\n                });\r\n                const found2 = itemUnitDetails.find((i, k) => {\r\n                    return ((index.Conversion === i.BaseUnitQuantity) && (index.Unit.value === i.UnitID) && !(key === k))\r\n                });\r\n                debugger\r\n                if (\r\n                    ((found === undefined) || (found2 === undefined))\r\n                    && !(index.Conversion === '')\r\n                    && !(index.Unit === '')) {\r\n                    debugger\r\n                    itemUnitDetails.push({\r\n                        BaseUnitQuantity: index.Conversion,\r\n                        UnitID: index.Unit.value,\r\n                        IsBase: index.IsBase\r\n                    })\r\n                }\r\n\r\n            });\r\n            debugger\r\n            if (pageMode === 'save')\r\n                itemUnitDetails.push({\r\n                    BaseUnitQuantity: 1,\r\n                    UnitID: formValue.BaseUnit.value,\r\n                    IsBase: true\r\n                })\r\n\r\n            //  ======================   ItemCategoryDetails *****start   ====================== \r\n\r\n            const ItemCategoryDetails = formValue.Category.map((index) => ({\r\n                CategoryType: formValue.CategoryType.value,\r\n                Category: index.value\r\n            }))\r\n            //  ======================   MRP_Tab_TableData *****start   ====================== \r\n\r\n            let hasAdd_MRP = []\r\n            MRP_Tab_TableData.forEach((index) => {\r\n                if (index.IsAdd === true) { hasAdd_MRP.push(index) }\r\n            })\r\n\r\n            // ======================  marginMaster *****start   ====================== \r\n\r\n            let hasAdd_Margin = []\r\n            marginMaster.forEach((index) => {\r\n                if (index.IsAdd === true) { hasAdd_Margin.push(index) }\r\n            })\r\n\r\n            // ======================  GStDetailsMaster *****start   ====================== \r\n\r\n            let hasAdd_GST = []\r\n            GStDetailsMaster.forEach((index) => {\r\n                if (index.IsAdd === true) { hasAdd_GST.push(index) }\r\n            })\r\n\r\n\r\n            const jsonBody = JSON.stringify({\r\n                Name: formValue.Name,\r\n                ShortName: formValue.ShortName,\r\n                Sequence: formValue.Sequence,\r\n                BarCode: formValue.BarCode,\r\n                isActive: formValue.isActive,\r\n                Company: formValue.Company.value,\r\n                BaseUnitID: formValue.BaseUnit.value,\r\n                CreatedBy: 1,\r\n                UpdatedBy: 1,\r\n                ItemCategoryDetails: ItemCategoryDetails,\r\n\r\n                ItemUnitDetails: itemUnitDetails,\r\n\r\n                ItemDivisionDetails: formValue.Division.map((i) => {\r\n                    return ({ Division: i.value })\r\n                }),\r\n\r\n                ItemImagesDetails: imageTabTable.map(i => ({\r\n                    ImageType: i.ImageType.value,\r\n                    Item_pic: i.ImageUpload\r\n                })),\r\n                ItemMRPDetails: hasAdd_MRP,\r\n                ItemMarginDetails: hasAdd_Margin,\r\n                ItemGSTHSNDetails: hasAdd_GST,\r\n                ItemGroupDetails: Group_Tab_TableData,\r\n\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateItemID(jsonBody, EditData.id));\r\n                console.log(\"edit json\", jsonBody)\r\n            }\r\n\r\n            else {\r\n                dispatch(postItemData(jsonBody));\r\n                console.log(\"post json\", jsonBody)\r\n            }\r\n\r\n        } /// ************* is valid if start \r\n        else { /// ************* is valid esle start \r\n            dispatch(AlertState({\r\n                Type: 4, Status: true,\r\n                Message: JSON.stringify(inValidMsg),\r\n                // Message: (inValidMsg),\r\n                RedirectPath: false,\r\n                PermissionAction: false,\r\n            }));\r\n        }\r\n\r\n    };\r\n\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <MetaTags>\r\n                        <title>Item Master| FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <Container fluid>\r\n                        <AvForm onValidSubmit={(e, v) => { handleValidSubmit(e, v); }}>\r\n\r\n                            <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                            <Row>\r\n\r\n                                <Col lg={12}>\r\n                                    <Card className=\"text-black\" >\r\n                                        <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                            <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                            <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <Nav tabs className=\"nav-tabs-custom nav-justified\">\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-1\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"1\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"1\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Basic Info</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-2\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"2\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"2\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Item Group</span>\r\n\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-3\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"3\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"3\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Unit Conversions</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-5\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"4\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"4\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Image</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-5\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"5\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"5\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">MRP</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-6\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"6\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"6\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Margin</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-7\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"7\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"7\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">GST Details</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                            </Nav>\r\n\r\n                                            <TabContent activeTab={activeTab1} className=\"p-3 text-muted\">\r\n                                                <TabPane tabId=\"1\">\r\n                                                    <Col md={12}  >\r\n                                                        <Card className=\"text-black\">\r\n                                                            <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                                <Row>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label >Name</Label>\r\n                                                                        <Input type=\"text\" id='txtName0'\r\n                                                                            placeholder=\" Please Enter Name \"\r\n                                                                            defaultValue={EditData.Name}\r\n                                                                            autoComplete=\"off\"\r\n                                                                            // onChange={(e) => { dispatch(Breadcrumb_inputName(e.target.value)) }}\r\n                                                                            onChange={(e) => {\r\n                                                                                dispatch(Breadcrumb_inputName(e.target.value));\r\n                                                                                CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Name\")\r\n                                                                            }}\r\n\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label >ShortName</Label>\r\n                                                                        <Input type=\"text\"\r\n                                                                            id='txtShortName0'\r\n                                                                            className=\"\"\r\n                                                                            defaultValue={EditData.ShortName}\r\n                                                                            placeholder=\" Please Enter ShortName \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"ShortName\") }}\r\n                                                                        // onChange={(e) => { formValue.ShortName = e.target.value }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\" col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom21\">Company</Label>\r\n                                                                        <Select\r\n                                                                            id='dropCompany-0'\r\n                                                                            value={formValue.Company}\r\n                                                                            options={Company_DropdownOptions}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.Company ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(event) => dropDownValidation(event, \"Company\")}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\" col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom21\">Base Unit</Label>\r\n                                                                        <Select\r\n                                                                            id='dropBaseUnit-0'\r\n                                                                            value={formValue.BaseUnit}\r\n                                                                            options={BaseUnit_DropdownOptions}\r\n                                                                            isDisabled={pageMode === \"edit\" ? true : false}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.BaseUnit ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(event) => dropDownValidation(event, \"BaseUnit\")}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">BarCode</Label>\r\n                                                                        <Input\r\n                                                                            id='txtBarCode0'\r\n                                                                            placeholder=\" Please Enter BarCode \"\r\n                                                                            defaultValue={EditData.BarCode}\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"BarCode\") }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">Sequence</Label>\r\n                                                                        <Input\r\n                                                                            id='txtSequence0'\r\n                                                                            defaultValue={EditData.Sequence}\r\n                                                                            placeholder=\" Please Enter Sequence \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Sequence\") }}\r\n                                                                        // onChange={(e) => { formValue.Sequence = e.target.value }}\r\n                                                                        />\r\n\r\n                                                                    </FormGroup>\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \">\r\n                                                                        <Label>Category Type</Label>\r\n                                                                        <Select\r\n                                                                            id={`dropCategoryType-${0}`}\r\n                                                                            value={formValue.CategoryType}\r\n                                                                            options={CategoryTypeList_DropdownOptions}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.CategoryType ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(e) => { CategoryType_Handler(e) }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \">\r\n\r\n                                                                        <Label className=\"form-label font-size-13 \">Category</Label>\r\n                                                                        <Select\r\n                                                                            defaultValue={formValue.Category}\r\n                                                                            isMulti={true}\r\n                                                                            className=\"basic-multi-select\"\r\n                                                                            options={CategoryList_DropdownOptions}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.Category ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(e) => { Category_Handler(e) }}\r\n                                                                            classNamePrefix=\"select2-selection\"\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \">\r\n                                                                        <div className=\"mb-3\">\r\n                                                                            <Label className=\"form-label font-size-13 \">Division</Label>\r\n                                                                            <Select\r\n                                                                                defaultValue={formValue.Division}\r\n                                                                                isMulti={true}\r\n                                                                                className=\"basic-multi-select\"\r\n                                                                                options={Division_DropdownOptions}\r\n                                                                                styles={{\r\n                                                                                    control: base => ({\r\n                                                                                        ...base,\r\n                                                                                        border: (inValidDrop.Division) ? '1px solid red' : '',\r\n\r\n                                                                                    })\r\n                                                                                }}\r\n                                                                                onChange={(e) => { Division_Handler(e) }}\r\n                                                                                classNamePrefix=\"select2-selection\"\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup className=\"mt-4 col col-md-5\">\r\n                                                                        <Row className=\"justify-content-ml-left \">\r\n                                                                            <Label htmlFor=\"horizontal-firstname-input\"\r\n                                                                                className=\"col-md-2 col-form-label\" >Active </Label>\r\n                                                                            <Col md={6} style={{ marginTop: '9px' }} >\r\n\r\n                                                                                <div className=\"form-check form-switch form-switch-md mb-3\" dir=\"ltr\">\r\n                                                                                    <Input type=\"checkbox\" className=\"form-check-input\" id=\"customSwitchsizemd\"\r\n                                                                                        defaultChecked={formValue.isActive}\r\n                                                                                        onChange={(e) => { formValue.isActive = e.target.checked }}\r\n\r\n                                                                                    />\r\n                                                                                </div>\r\n                                                                            </Col>\r\n                                                                        </Row>\r\n                                                                    </FormGroup>\r\n                                                                </Row>\r\n\r\n\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                    </Col>\r\n\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"2\">\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <GroupTab tableData={Group_Tab_TableData} func={setGroup_Tab_TableData} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </TabPane>\r\n                                                <TabPane tabId=\"3\">\r\n\r\n                                                    <UnitConverstion\r\n                                                        state={{\r\n                                                            pageMode: pageMode,\r\n                                                            formValue: formValue,\r\n                                                            TableData: baseUnitTableData,\r\n                                                            BaseUnit: BaseUnit\r\n                                                        }}\r\n                                                        settable={setBaseUnitTableData}\r\n                                                        setFormValue={setFormValue}\r\n                                                    />\r\n                                                    {/* <Card className=\"text-black\">\r\n                                                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n                                                            <Row>\r\n                                                                <FormGroup className=\" col col-sm-4 \" >\r\n                                                                    <Label >Base Unit</Label>\r\n                                                                    <Select\r\n                                                                        id={`dropBaseUnit-0`}\r\n                                                                        placeholder=\"Select...\"\r\n                                                                        value={formValue.BaseUnit}\r\n                                                                        isDisabled={pageMode === \"edit\" ? true : false}\r\n                                                                        options={BaseUnit_DropdownOptions}\r\n                                                                        onChange={(e) => Common_DropDown_handller_ForAll(e, \"BaseUnit\", 0)}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Row>\r\n\r\n                                                            {!(formValue.BaseUnit.value === 0)\r\n                                                                ? <Row className=\"mt-3\">\r\n                                                                    <Col md={8}><Table className=\"table table-bordered  \">\r\n                                                                        <Thead >\r\n                                                                            <tr>\r\n                                                                                <th className=\"col-sm-3\">Unit Name</th>\r\n                                                                                <th className=\"col-sm-3 text-center\">Conversion To Base Unit </th>\r\n                                                                                <th className=\"col-sm-2\">Action</th>\r\n                                                                            </tr>\r\n                                                                        </Thead>\r\n                                                                        <Tbody  >\r\n                                                                            {baseUnitTableData.map((TableValue, key) => (\r\n\r\n                                                                                <tr >\r\n                                                                                    <td>\r\n                                                                                        <Row>\r\n                                                                                            <Label className=\" col-sm-2 col-form-label\">1</Label>\r\n                                                                                            <Col md={7}>\r\n                                                                                                <Select\r\n                                                                                                    id={`dropUnit-${key}`}\r\n                                                                                                    placeholder=\"Select...\"\r\n                                                                                                    value={baseUnitTableData[key].Unit}\r\n                                                                                                    options={BaseUnit_DropdownOptions2}\r\n                                                                                                    onChange={(e) => UnitConversionsTab_BaseUnit2_onChange_Handller(e, \"Unit\", key)}\r\n                                                                                                />\r\n                                                                                            </Col>\r\n                                                                                            < Label className=\" col-sm-3 col-form-label\">=</Label>\r\n                                                                                        </Row>\r\n                                                                                    </td>\r\n                                                                                    <td>\r\n                                                                                        <Row>\r\n                                                                                            <Col>\r\n                                                                                                <Input\r\n                                                                                                    type=\"text\"\r\n                                                                                                    id={`txtConversion${key}`}\r\n                                                                                                    placeholder=\"Select...\"\r\n                                                                                                    autoComplete=\"off\"\r\n                                                                                                    value={baseUnitTableData[key].Conversion}\r\n                                                                                                    onChange={(e) => UnitConversionsTab_BaseUnit2_onChange_Handller(e, \"Conversion\", key,)}>\r\n\r\n                                                                                                </Input>\r\n                                                                                            </Col>\r\n                                                                                            <Label className=\" col-sm-4 col-form-label\"> {formValue.BaseUnit.label}</Label>\r\n                                                                                        </Row>\r\n                                                                                    </td>\r\n\r\n                                                                                    <td>\r\n                                                                                        {(baseUnitTableData.length === key + 1) ?\r\n                                                                                            <Row className=\"\">\r\n                                                                                                <Col md={6} className=\" mt-3\">\r\n                                                                                                    {(baseUnitTableData.length > 1) ? <>\r\n                                                                                                        < i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                            UnitConversionsTab_DeleteRow_Handler(key)\r\n                                                                                                        }} >\r\n                                                                                                        </i>\r\n                                                                                                    </> : <Col md={6} ></Col>}\r\n\r\n                                                                                                </Col>\r\n\r\n                                                                                                <Col md={6} >\r\n                                                                                                    <Button className=\"btn btn-sm btn-light mt-3   align-items-sm-end\"\r\n                                                                                                        type=\"button\"\r\n                                                                                                        onClick={() => { UnitConversionsTab_AddRow_Handle(key) }} >\r\n                                                                                                        <i className=\"dripicons-plus\"></i>\r\n                                                                                                    </Button>\r\n                                                                                                </Col>\r\n                                                                                            </Row>\r\n                                                                                            :\r\n\r\n                                                                                            < i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                UnitConversionsTab_DeleteRow_Handler(key)\r\n                                                                                            }} >\r\n                                                                                            </i>\r\n                                                                                        }\r\n                                                                                    </td>\r\n\r\n                                                                                </tr>\r\n                                                                            ))}\r\n                                                                        </Tbody>\r\n                                                                    </Table>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                                :\r\n                                                                <Row className=\"mt-3\">\r\n                                                                    <br></br>\r\n                                                                    <Label className=\"text-danger\">Please select BaseUnit</Label></Row>}\r\n                                                        </CardBody>\r\n                                                    </Card> */}\r\n\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"4\">\r\n                                                    <Image state={{\r\n                                                        imageTable: imageTabTable,\r\n                                                        setImageTable: setImageTabTable,\r\n\r\n                                                    }} />\r\n\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"5\">\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <MRPTab tableData={MRP_Tab_TableData} func={setMRP_Tab_TableData} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"6\">\r\n\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <Margin_Tab tableData={marginMaster} func={setMarginMaster} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"7\">\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <GSTTab tableData={GStDetailsMaster} func={setGStDetailsMaster} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </TabPane>\r\n                                            </TabContent>\r\n                                            <Row >\r\n                                                <Col sm={2}>\r\n                                                    <div className=\"\">\r\n                                                        {\r\n                                                            pageMode === \"edit\" ?\r\n                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                    <button\r\n                                                                        type=\"submit\"\r\n                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Role\"\r\n                                                                        className=\"btn btn-success w-md\"\r\n                                                                    >\r\n                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                    </button>\r\n                                                                    :\r\n                                                                    <></>\r\n                                                                : (\r\n                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                        <button\r\n                                                                            type=\"submit\"\r\n                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Role\"\r\n                                                                            className=\"btn btn-primary w-md\"\r\n                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                        </button>\r\n                                                                        :\r\n                                                                        <></>\r\n                                                                )\r\n                                                        }\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </AvForm>\r\n                    </Container>\r\n                </div >\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\nexport default ItemsMaster;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}