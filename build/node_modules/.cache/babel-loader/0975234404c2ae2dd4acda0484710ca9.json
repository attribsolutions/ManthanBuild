{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\ImportMaster\\\\ImportFieldMap\\\\ImportFieldMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShowCountlabel, commonPageField, commonPageFieldSuccess } from \"../../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { mySearchProps } from \"../../../../components/Common/SearchBox/MySearch\";\nimport * as pageId from \"../../../../routes/allPageID\";\nimport * as mode from \"../../../../routes/PageMode\";\nimport { Change_Button, Go_Button, SaveButton } from \"../../../../components/Common/CommonButton\";\nimport { breadcrumbReturnFunc, loginCompanyID, loginUserID } from \"../../../../components/Common/CommonFunction\";\nimport { comAddPageFieldFunc, initialFiledFunc } from \"../../../../components/Common/validationFunction\";\nimport { getPartyListAPI } from \"../../../../store/Administrator/PartyRedux/action\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { GoButton_ImportFiledMap_Add, GoButton_ImportFiledMap_AddSuccess, save_ImportFiledMap, save_ImportFiledMap_Success } from \"../../../../store/Administrator/ImportFieldMapRedux/action\";\nimport { CustomAlert } from \"../../../../CustomAlert/ConfirmDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImportFieldMap = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [pageMode, setPageMode] = useState(mode.defaultsave);\n  const [userPageAccessState, setUserAccState] = useState('');\n  const [partySelect, SetPartySelect] = useState(\"\");\n  const fileds = {\n    id: \"\",\n    Party: \"\",\n    ImportType: \"\",\n    PatternType: \"\"\n  };\n  const [state, setState] = useState(initialFiledFunc(fileds)); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    updateMsg,\n    pageField,\n    userAccess,\n    goButtonItem,\n    partyList\n  } = useSelector(state => ({\n    postMsg: state.ImportFieldMap_Reducer.postMsg,\n    updateMsg: state.BOMReducer.updateMsg,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField,\n    goButtonItem: state.ImportFieldMap_Reducer.addGoButton,\n    partyList: state.PartyMasterReducer.partyList\n  }));\n  useEffect(() => {\n    const page_Id = pageId.IMPORT_FIELD_MAP;\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(page_Id));\n    dispatch(getPartyListAPI());\n    dispatch(GoButton_ImportFiledMap_AddSuccess([]));\n  }, []);\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(mode.editValue);\n  const hasShowModal = props.hasOwnProperty(mode.editValue);\n  const {\n    fieldLabel\n  } = state; // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserAccState(userAcc);\n      breadcrumbReturnFunc({\n        dispatch,\n        userAcc\n      });\n    }\n\n    ;\n  }, [userAccess]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n  useEffect(async () => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      dispatch(save_ImportFiledMap_Success({\n        Status: false\n      }));\n      CustomAlert({\n        Type: 1,\n        Message: postMsg.Message\n      });\n    } else if (postMsg.Status === true) {\n      dispatch(save_ImportFiledMap_Success({\n        Status: false\n      }));\n      CustomAlert({\n        Type: 4,\n        Message: JSON.stringify(postMessage.Message)\n      });\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    dispatch(BreadcrumbShowCountlabel(`${\" Field Count\"} :${goButtonItem.length}`));\n  }, [goButtonItem]);\n  const partyDropdown_Options = partyList.map(index => ({\n    value: index.id,\n    label: index.Name\n  }));\n  const pagesListColumns = [{\n    text: \"Field Name\",\n    dataField: \"FieldName\"\n  }, {\n    text: \"Data Type\",\n    dataField: \"ControlTypeName\"\n  }, {\n    text: \"Field Validation\",\n    dataField: \"FieldValidationName\"\n  }, {\n    text: \"Related Key Field\",\n    dataField: \"Value\",\n    formatter: (cellContent, row) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \" col col-sm-4 \",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              defaultValue: cellContent,\n              onChange: e => row.Value = e.target.value\n            }, `Value-${row.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }];\n\n  async function goButtonHandler() {\n    const jsonBody = JSON.stringify({\n      PartyID: partySelect.value,\n      CompanyID: loginCompanyID()\n    });\n    dispatch(GoButton_ImportFiledMap_Add({\n      jsonBody\n    }));\n  }\n\n  ;\n\n  function change_ButtonHandler(e) {\n    dispatch(GoButton_ImportFiledMap_AddSuccess([]));\n  }\n\n  function SaveHandler(event) {\n    event.preventDefault();\n    let jsonArr = [];\n    const invalid = [];\n    goButtonItem.forEach(i => {\n      if ((i.Value === '' || i.Value === null) && i.IsCompulsory === true) {\n        invalid.push({\n          [i.FieldName]: \"this filed Requird.\"\n        });\n      }\n\n      if (!(i.Value === '') && !(i.Value === null)) {\n        const obj = {\n          Value: i.Value,\n          ImportField: i.id,\n          Party: partySelect.value,\n          Company: loginCompanyID(),\n          CreatedBy: loginUserID(),\n          UpdatedBy: loginUserID()\n        };\n        jsonArr.push(obj);\n      }\n    });\n\n    if (invalid.length > 0) {\n      CustomAlert({\n        Type: 3,\n        Message: invalid\n      });\n      return;\n    } else {\n      const jsonBody = JSON.stringify(jsonArr);\n      dispatch(save_ImportFiledMap({\n        jsonBody\n      }));\n    }\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userAccess.PageHeading, \"| FoodERP-React FrontEnd\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => SaveHandler(event),\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2 c_card_header text-black\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-2   c_card_filter text-black\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"10\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-2 row mt-3 \",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \" p-2\",\n                      style: {\n                        maxWidth: \"115px\"\n                      },\n                      children: fieldLabel.Party\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      style: {\n                        maxWidth: \"300px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Select, {\n                        classNamePrefix: \"select2-Customer\",\n                        isDisabled: !(goButtonItem.length === 0) && true,\n                        value: partySelect,\n                        options: partyDropdown_Options,\n                        onChange: e => {\n                          SetPartySelect(e);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"2\",\n                  className: \"mt-3 \",\n                  children: goButtonItem.length === 0 ? /*#__PURE__*/_jsxDEV(Go_Button, {\n                    onClick: goButtonHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(Change_Button, {\n                    onClick: change_ButtonHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1\",\n            children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"id\",\n              data: goButtonItem,\n              columns: pagesListColumns,\n              search: true,\n              children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table\",\n                  children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n                    bordered: true,\n                    striped: false,\n                    noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-danger text-center \",\n                      children: \"Items Not available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 67\n                    }, this),\n                    classes: \"table align-middle  table-hover\",\n                    headerWrapperClasses: \"thead-light\",\n                    ...toolkitProps.baseProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 45\n                  }, this), mySearchProps(toolkitProps.searchProps)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 2,\n            style: {\n              marginLeft: \"-40px\"\n            },\n            className: \"row save1\",\n            children: goButtonItem.length > 0 && /*#__PURE__*/_jsxDEV(SaveButton, {\n              pageMode: pageMode,\n              userAcc: userPageAccessState,\n              module: \"LoadingSheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(ImportFieldMap, \"Z4MM7RxAxcm5vSAeQX/G8TXAIOA=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ImportFieldMap;\nexport default ImportFieldMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportFieldMap\");","map":{"version":3,"names":["React","useEffect","useState","Col","FormGroup","Input","Label","Select","MetaTags","BreadcrumbShowCountlabel","commonPageField","commonPageFieldSuccess","useDispatch","useSelector","useHistory","mySearchProps","pageId","mode","Change_Button","Go_Button","SaveButton","breadcrumbReturnFunc","loginCompanyID","loginUserID","comAddPageFieldFunc","initialFiledFunc","getPartyListAPI","ToolkitProvider","BootstrapTable","GoButton_ImportFiledMap_Add","GoButton_ImportFiledMap_AddSuccess","save_ImportFiledMap","save_ImportFiledMap_Success","CustomAlert","ImportFieldMap","props","dispatch","history","pageMode","setPageMode","defaultsave","userPageAccessState","setUserAccState","partySelect","SetPartySelect","fileds","id","Party","ImportType","PatternType","state","setState","postMsg","updateMsg","pageField","userAccess","goButtonItem","partyList","ImportFieldMap_Reducer","BOMReducer","Login","RoleAccessUpdateData","CommonPageFieldReducer","addGoButton","PartyMasterReducer","page_Id","IMPORT_FIELD_MAP","location","hasShowloction","hasOwnProperty","editValue","hasShowModal","fieldLabel","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","fieldArr","PageFieldMaster","Status","StatusCode","Type","Message","JSON","stringify","postMessage","length","partyDropdown_Options","map","index","value","label","Name","pagesListColumns","text","dataField","formatter","cellContent","row","justifyContent","e","Value","target","goButtonHandler","jsonBody","PartyID","CompanyID","change_ButtonHandler","SaveHandler","event","preventDefault","jsonArr","invalid","forEach","i","IsCompulsory","push","FieldName","obj","ImportField","Company","CreatedBy","UpdatedBy","PageHeading","maxWidth","toolkitProps","baseProps","searchProps","marginLeft"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/ImportMaster/ImportFieldMap/ImportFieldMap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShowCountlabel, commonPageField, commonPageFieldSuccess, } from \"../../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { mySearchProps } from \"../../../../components/Common/SearchBox/MySearch\";\r\nimport * as pageId from \"../../../../routes/allPageID\";\r\nimport * as mode from \"../../../../routes/PageMode\";\r\nimport { Change_Button, Go_Button, SaveButton } from \"../../../../components/Common/CommonButton\";\r\nimport { breadcrumbReturnFunc, loginCompanyID, loginUserID } from \"../../../../components/Common/CommonFunction\";\r\nimport { comAddPageFieldFunc, initialFiledFunc, } from \"../../../../components/Common/validationFunction\";\r\nimport { getPartyListAPI } from \"../../../../store/Administrator/PartyRedux/action\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { GoButton_ImportFiledMap_Add, GoButton_ImportFiledMap_AddSuccess, save_ImportFiledMap, save_ImportFiledMap_Success } from \"../../../../store/Administrator/ImportFieldMapRedux/action\";\r\nimport { CustomAlert } from \"../../../../CustomAlert/ConfirmDialog\";\r\n\r\n\r\nconst ImportFieldMap = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const [pageMode, setPageMode] = useState(mode.defaultsave);\r\n    const [userPageAccessState, setUserAccState] = useState('');\r\n    const [partySelect, SetPartySelect] = useState(\"\")\r\n\r\n    const fileds = {\r\n        id: \"\",\r\n        Party: \"\",\r\n        ImportType: \"\",\r\n        PatternType: \"\"\r\n    }\r\n\r\n    const [state, setState] = useState(initialFiledFunc(fileds))\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        postMsg,\r\n        updateMsg,\r\n        pageField,\r\n        userAccess,\r\n        goButtonItem,\r\n        partyList\r\n    } = useSelector((state) => ({\r\n        postMsg: state.ImportFieldMap_Reducer.postMsg,\r\n        updateMsg: state.BOMReducer.updateMsg,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField,\r\n        goButtonItem: state.ImportFieldMap_Reducer.addGoButton,\r\n        partyList: state.PartyMasterReducer.partyList,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const page_Id = pageId.IMPORT_FIELD_MAP\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(page_Id))\r\n        dispatch(getPartyListAPI());\r\n        dispatch(GoButton_ImportFiledMap_AddSuccess([]));\r\n\r\n    }, []);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(mode.editValue)\r\n    const hasShowModal = props.hasOwnProperty(mode.editValue)\r\n\r\n    const { fieldLabel } = state;\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (userAcc) {\r\n            setUserAccState(userAcc)\r\n            breadcrumbReturnFunc({ dispatch, userAcc });\r\n        };\r\n    }, [userAccess])\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    useEffect(async () => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(save_ImportFiledMap_Success({ Status: false }))\r\n            CustomAlert({\r\n                Type: 1,\r\n                Message: postMsg.Message,\r\n            })\r\n\r\n\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(save_ImportFiledMap_Success({ Status: false }))\r\n            CustomAlert({\r\n                Type: 4,\r\n                Message: JSON.stringify(postMessage.Message),\r\n            })\r\n        }\r\n    }, [postMsg])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(BreadcrumbShowCountlabel(`${\" Field Count\"} :${goButtonItem.length}`))\r\n    }, [goButtonItem])\r\n\r\n\r\n    const partyDropdown_Options = partyList.map((index) => ({\r\n        value: index.id,\r\n        label: index.Name,\r\n    }));\r\n\r\n\r\n\r\n    const pagesListColumns = [\r\n        {\r\n            text: \"Field Name\",\r\n            dataField: \"FieldName\",\r\n        },\r\n        {\r\n            text: \"Data Type\",\r\n            dataField: \"ControlTypeName\",\r\n        },\r\n        {\r\n            text: \"Field Validation\",\r\n            dataField: \"FieldValidationName\",\r\n        },\r\n        {\r\n            text: \"Related Key Field\",\r\n            dataField: \"Value\",\r\n            formatter: (cellContent, row) => (\r\n                <>\r\n                    <div style={{ justifyContent: 'center' }} >\r\n                        <Col>\r\n                            <FormGroup className=\" col col-sm-4 \">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    key={`Value-${row.id}`}\r\n                                    defaultValue={cellContent}\r\n                                    onChange={(e) => row.Value = e.target.value}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </div>\r\n\r\n                </>\r\n            ),\r\n        },\r\n\r\n    ];\r\n\r\n    async function goButtonHandler() {\r\n        const jsonBody = JSON.stringify({\r\n            PartyID: partySelect.value,\r\n            CompanyID: loginCompanyID()\r\n        })\r\n        dispatch(GoButton_ImportFiledMap_Add({ jsonBody }))\r\n    };\r\n\r\n    function change_ButtonHandler(e) {\r\n        dispatch(GoButton_ImportFiledMap_AddSuccess([]))\r\n    }\r\n\r\n    function SaveHandler(event) {\r\n        event.preventDefault();\r\n\r\n        let jsonArr = []\r\n        const invalid = []\r\n\r\n        goButtonItem.forEach(i => {\r\n            \r\n            if ((((i.Value === '') || (i.Value === null)) && (i.IsCompulsory === true))) {\r\n                invalid.push({ [i.FieldName]: \"this filed Requird.\" })\r\n            }\r\n            if ((!(i.Value === '') && !(i.Value === null))) {\r\n                const obj = {\r\n                    Value: i.Value,\r\n                    ImportField: i.id,\r\n                    Party: partySelect.value,\r\n                    Company: loginCompanyID(),\r\n                    CreatedBy: loginUserID(),\r\n                    UpdatedBy: loginUserID(),\r\n                }\r\n                jsonArr.push(obj)\r\n            }\r\n        })\r\n\r\n        if (invalid.length > 0) {\r\n            CustomAlert({ Type: 3, Message: invalid })\r\n            return\r\n        } else {\r\n            const jsonBody = JSON.stringify(jsonArr);\r\n            dispatch(save_ImportFiledMap({ jsonBody }));\r\n        }\r\n    };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags> <title>{userAccess.PageHeading}| FoodERP-React FrontEnd</title></MetaTags>\r\n\r\n                <form onSubmit={(event) => SaveHandler(event)} noValidate>\r\n                    <div className=\"page-content\">\r\n\r\n                        <div className=\"px-2 c_card_header text-black\" >\r\n                            <div className=\"px-2   c_card_filter text-black\" >\r\n                                <div className=\"row\" >\r\n                                    <Col sm=\"10\">\r\n                                        <FormGroup className=\"mb-2 row mt-3 \" >\r\n                                            <Label className=\" p-2\"\r\n\r\n                                                style={{ maxWidth: \"115px\" }}>{fieldLabel.Party}</Label>\r\n                                            <Col style={{ maxWidth: \"300px\" }} >\r\n                                                <Select\r\n                                                    classNamePrefix=\"select2-Customer\"\r\n                                                    isDisabled={!(goButtonItem.length === 0) && true}\r\n                                                    value={partySelect}\r\n                                                    options={partyDropdown_Options}\r\n                                                    onChange={(e) => { SetPartySelect(e) }}\r\n                                                />\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"2\" className=\"mt-3 \">\r\n                                        {(goButtonItem.length === 0) ?\r\n                                            < Go_Button onClick={goButtonHandler} />\r\n                                            :\r\n                                            <Change_Button onClick={change_ButtonHandler} />\r\n                                        }\r\n                                    </Col>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mt-1\">\r\n\r\n                            <ToolkitProvider\r\n                                keyField=\"id\"\r\n                                data={goButtonItem}\r\n                                columns={pagesListColumns}\r\n\r\n                                search\r\n                            >\r\n                                {toolkitProps => (\r\n                                    <React.Fragment>\r\n                                        <div className=\"table\">\r\n                                            <BootstrapTable\r\n                                                bordered={true}\r\n                                                striped={false}\r\n                                                noDataIndication={<div className=\"text-danger text-center \">Items Not available</div>}\r\n                                                classes={\"table align-middle  table-hover\"}\r\n                                                headerWrapperClasses={\"thead-light\"}\r\n\r\n                                                {...toolkitProps.baseProps}\r\n                                            />\r\n                                            {mySearchProps(toolkitProps.searchProps)}\r\n                                        </div>\r\n\r\n\r\n                                    </React.Fragment>\r\n                                )\r\n                                }\r\n                            </ToolkitProvider>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <FormGroup>\r\n                        <Col sm={2} style={{ marginLeft: \"-40px\" }} className={\"row save1\"}>\r\n                            {(goButtonItem.length > 0) && <SaveButton pageMode={pageMode}\r\n                                userAcc={userPageAccessState}\r\n                                module={\"LoadingSheet\"}\r\n                            />}\r\n                        </Col>\r\n                    </FormGroup >\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ImportFieldMap\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}