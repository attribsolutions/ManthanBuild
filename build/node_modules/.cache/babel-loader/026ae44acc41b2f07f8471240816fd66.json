{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { delete_ProductionIdSuccess, getProductionistPageSuccess, getProduction_Mode2_Success, post_ProductionSuccess, update_ProductionIdSuccess } from \"./actions\";\nimport { production_get_API, production_Make_API, Production_Post_API } from \"../../../helpers/backend_helper\";\nimport { DELETE_PRODUCTION_ID, GET_PRODUCTION_ITEM_MODE_2, GET_PRODUCTION_LIST_PAGE, POST_PRODUCTION_FROM_PRODUCTION_PAGE, UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE } from \"./actionType\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\nimport { convertDatefunc, convertTimefunc } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\n\nfunction* postProductionGenFunc(_ref) {\n  let {\n    data\n  } = _ref;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(Production_Post_API, data);\n    yield put(post_ProductionSuccess(response));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error PostProduction\"\n    }));\n  }\n}\n\nfunction* DeleteProductionGenFunc(_ref2) {\n  let {\n    id\n  } = _ref2;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(id);\n    yield put(SpinnerState(false));\n    yield put(delete_ProductionIdSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error DeleteGRN API\"\n    }));\n  }\n}\n\n_c = DeleteProductionGenFunc;\n\nfunction* UpdateProductionGenFunc(_ref3) {\n  let {\n    data,\n    id\n  } = _ref3;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(id);\n    yield put(SpinnerState(false));\n    yield put(update_ProductionIdSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 ErrorUpdateGRN API\"\n    }));\n  }\n} // List Page API\n\n\n_c2 = UpdateProductionGenFunc;\n\nfunction* get_PRODUCTION_GerFunc(_ref4) {\n  let {\n    filters\n  } = _ref4;\n  yield put(SpinnerState(true));\n\n  try {\n    debugger;\n    const response = yield call(production_get_API, filters); // const newList = yield response.Data.map((i) => {\n    //   var date = convertDatefunc(i.GRNDate)\n    //   var time = convertTimefunc(i.CreatedOn)\n    //   i.GRNDate = (`${date} ${time}`)\n    //   return i\n    // })\n\n    const newList = response.Data.map(index => {\n      index.Name = index.Item.Item;\n      debugger;\n      return index;\n    });\n    yield put(SpinnerState(false));\n    yield put(getProductionistPageSuccess(newList));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error get_PRODUCTION LIst API\"\n    }));\n  }\n} // List Page API\n\n\nfunction* getProduction_Mode2_GenFunc(_ref5) {\n  let {\n    data\n  } = _ref5;\n  debugger;\n  const {\n    jsonBody,\n    pageMode,\n    path\n  } = data;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(production_Make_API, jsonBody);\n    response.Data = response.Data[0];\n    response[\"pageMode\"] = pageMode;\n    response[\"path\"] = path; //Pagepath\n\n    yield put(SpinnerState(false));\n    yield put(getProduction_Mode2_Success(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error get_PRODUCTION Item API \"\n    }));\n  }\n}\n\nfunction* ProductionSaga() {\n  yield takeEvery(GET_PRODUCTION_ITEM_MODE_2, getProduction_Mode2_GenFunc);\n  yield takeEvery(POST_PRODUCTION_FROM_PRODUCTION_PAGE, postProductionGenFunc);\n  yield takeEvery(UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE, UpdateProductionGenFunc);\n  yield takeEvery(DELETE_PRODUCTION_ID, DeleteProductionGenFunc);\n  yield takeEvery(GET_PRODUCTION_LIST_PAGE, get_PRODUCTION_GerFunc);\n}\n\n_c3 = ProductionSaga;\nexport default ProductionSaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DeleteProductionGenFunc\");\n$RefreshReg$(_c2, \"UpdateProductionGenFunc\");\n$RefreshReg$(_c3, \"ProductionSaga\");","map":{"version":3,"names":["call","put","takeEvery","delete_ProductionIdSuccess","getProductionistPageSuccess","getProduction_Mode2_Success","post_ProductionSuccess","update_ProductionIdSuccess","production_get_API","production_Make_API","Production_Post_API","DELETE_PRODUCTION_ID","GET_PRODUCTION_ITEM_MODE_2","GET_PRODUCTION_LIST_PAGE","POST_PRODUCTION_FROM_PRODUCTION_PAGE","UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE","SpinnerState","AlertState","convertDatefunc","convertTimefunc","postProductionGenFunc","data","response","error","Type","Status","Message","DeleteProductionGenFunc","id","UpdateProductionGenFunc","get_PRODUCTION_GerFunc","filters","newList","Data","map","index","Name","Item","getProduction_Mode2_GenFunc","jsonBody","pageMode","path","ProductionSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Purchase/ProductionRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  delete_ProductionIdSuccess,\r\n  getProductionistPageSuccess,\r\n  getProduction_Mode2_Success,\r\n  post_ProductionSuccess,\r\n  update_ProductionIdSuccess,\r\n} from \"./actions\";\r\nimport {\r\n  production_get_API,\r\n  production_Make_API,\r\n  Production_Post_API,\r\n} from \"../../../helpers/backend_helper\";\r\n\r\nimport {\r\n  DELETE_PRODUCTION_ID,\r\n  GET_PRODUCTION_ITEM_MODE_2,\r\n  GET_PRODUCTION_LIST_PAGE,\r\n  POST_PRODUCTION_FROM_PRODUCTION_PAGE,\r\n  UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE,\r\n} from \"./actionType\";\r\n\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\r\nimport { convertDatefunc, convertTimefunc } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\n\r\nfunction* postProductionGenFunc({ data }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(Production_Post_API, data);\r\n    yield put(post_ProductionSuccess(response));\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error PostProduction\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* DeleteProductionGenFunc({ id }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(id);\r\n    yield put(SpinnerState(false))\r\n    yield put(delete_ProductionIdSuccess(response));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error DeleteGRN API\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* UpdateProductionGenFunc({ data, id }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(id);\r\n    yield put(SpinnerState(false))\r\n    yield put(update_ProductionIdSuccess(response))\r\n  }\r\n  catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 ErrorUpdateGRN API\",\r\n    }));\r\n  }\r\n}\r\n\r\n// List Page API\r\nfunction* get_PRODUCTION_GerFunc({ filters }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    debugger\r\n    const response = yield call(production_get_API, filters);\r\n    // const newList = yield response.Data.map((i) => {\r\n    //   var date = convertDatefunc(i.GRNDate)\r\n    //   var time = convertTimefunc(i.CreatedOn)\r\n    //   i.GRNDate = (`${date} ${time}`)\r\n    //   return i\r\n    // })\r\n\r\n    const newList = response.Data.map((index) => {\r\n      index.Name = index.Item.Item\r\n      debugger\r\n      return index\r\n    });\r\n    yield put(SpinnerState(false))\r\n    yield put(getProductionistPageSuccess(newList))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error get_PRODUCTION LIst API\",\r\n    }));\r\n  }\r\n}\r\n\r\n// List Page API\r\nfunction* getProduction_Mode2_GenFunc({ data }) {\r\n  debugger\r\n  const { jsonBody, pageMode, path } = data\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(production_Make_API, jsonBody);\r\n    response.Data = response.Data[0];\r\n    response[\"pageMode\"] = pageMode;\r\n    response[\"path\"] = path; //Pagepath\r\n\r\n\r\n\r\n    yield put(SpinnerState(false))\r\n    yield put(getProduction_Mode2_Success(response))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error get_PRODUCTION Item API \",\r\n    }));\r\n  }\r\n}\r\nfunction* ProductionSaga() {\r\n  yield takeEvery(GET_PRODUCTION_ITEM_MODE_2, getProduction_Mode2_GenFunc);\r\n  yield takeEvery(POST_PRODUCTION_FROM_PRODUCTION_PAGE, postProductionGenFunc);\r\n  yield takeEvery(UPDATE_PRODUCTION_ID_FROM_PRODUCTION_PAGE, UpdateProductionGenFunc)\r\n  yield takeEvery(DELETE_PRODUCTION_ID, DeleteProductionGenFunc);\r\n  yield takeEvery(GET_PRODUCTION_LIST_PAGE, get_PRODUCTION_GerFunc);\r\n}\r\nexport default ProductionSaga;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}