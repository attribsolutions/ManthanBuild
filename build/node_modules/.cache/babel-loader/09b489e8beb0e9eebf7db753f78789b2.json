{"ast":null,"code":"import _objectSpread from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Input,Row}from\"reactstrap\";import paginationFactory,{PaginationListStandalone,PaginationProvider}from\"react-bootstrap-table2-paginator\";import ToolkitProvider from\"react-bootstrap-table2-toolkit\";import BootstrapTable from\"react-bootstrap-table-next\";import{MetaTags}from\"react-meta-tags\";import{BreadcrumbShowCountlabel,Breadcrumb_inputName,commonPageField,commonPageFieldSuccess}from\"../../../store/actions\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{SaveButton}from\"../../../components/Common/CommonButton\";import{breadcrumbReturnFunc,CommonConsole,loginCompanyID,loginPartyID,loginUserID,metaTagLabel}from\"../../../components/Common/CommonFunction\";import*as url from\"../../../routes/route_url\";import*as pageId from\"../../../routes/allPageID\";import*as mode from\"../../../routes/PageMode\";import{mySearchProps}from\"../../../components/Common/SearchBox/MySearch\";import{countlabelFunc}from\"../../../components/Common/CommonPurchaseList\";import{PartyBankfilter,saveBankAssign,saveBankAssign_Success}from\"../../../store/Accounting/BankAssignRedux/action\";import{customAlert}from\"../../../CustomAlert/ConfirmDialog\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BankAssign=function BankAssign(props){var history=useHistory();var dispatch=useDispatch();var _useState=useState(mode.defaultsave),_useState2=_slicedToArray(_useState,1),pageMode=_useState2[0];//changes\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,1),modalCss=_useState4[0];var _useState5=useState(123),_useState6=_slicedToArray(_useState5,2),userPageAccessState=_useState6[0],setUserAccState=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,1),editCreatedBy=_useState8[0];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),forceRefresh=_useState10[0],setForceRefresh=_useState10[1];//Access redux store bankTableList /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{saveBtnloading:state.BankAssignReducer.saveBtnloading,postMsg:state.BankAssignReducer.postMsg,userAccess:state.Login.RoleAccessUpdateData,updateMsg:state.BankAssignReducer.updateMessage,bankTableList:state.BankAssignReducer.bankTableList};}),postMsg=_useSelector.postMsg,bankTableList=_useSelector.bankTableList,saveBtnloading=_useSelector.saveBtnloading,userAccess=_useSelector.userAccess;useEffect(function(){var page_Id=pageId.BANK_ASSIGN;dispatch(commonPageFieldSuccess(null));dispatch(commonPageField(page_Id));dispatch(PartyBankfilter());},[]);var hasShowModal=props.hasOwnProperty(mode.editValue);// userAccess useEffect\nuseEffect(function(){var userAcc=null;var locationPath=history.location.pathname;if(hasShowModal){locationPath=props.masterPath;};userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(userAcc){setUserAccState(userAcc);breadcrumbReturnFunc({dispatch:dispatch,userAcc:userAcc});};},[userAccess]);useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isPermission;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(postMsg.Status===true&&postMsg.StatusCode===200)){_context.next=13;break;}dispatch(saveBankAssign_Success({Status:false}));dispatch(Breadcrumb_inputName(''));if(!(pageMode===\"other\")){_context.next=7;break;}customAlert({Type:1,Message:postMsg.Message});_context.next=11;break;case 7:_context.next=9;return customAlert({Type:1,Status:true,Message:postMsg.Message});case 9:isPermission=_context.sent;if(isPermission){history.push({pathname:url.BANK_ASSIGN});}case 11:_context.next=14;break;case 13:if(postMsg.Status===true){dispatch(saveBankAssign_Success({Status:false}));customAlert({Type:4,Message:JSON.stringify(postMsg.Message)});}case 14:case\"end\":return _context.stop();}}},_callee);})),[postMsg]);useEffect(function(){dispatch(BreadcrumbShowCountlabel(\" Bank Assign Count\".concat(\" :\",bankTableList.length)));},[bankTableList]);var pagesListColumns=[{text:\"Name\",dataField:\"BankName\"},{text:\" Customer Bank\",dataField:\"CustomerBank\",formatter:function formatter(cellContent,row,key){return/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",defaultChecked:row.CustomerBank,onChange:function onChange(event){row.CustomerBank=event.target.checked;}})});}},{text:\"Depository Bank\",dataField:\"IsSelfDepositoryBank\",formatExtraData:{forceRefresh:forceRefresh,setForceRefresh:setForceRefresh},formatter:function formatter(cellContent,row,key,_ref2){var forceRefresh=_ref2.forceRefresh,setForceRefresh=_ref2.setForceRefresh;return/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",defaultChecked:row.IsSelfDepositoryBank,onChange:function onChange(event){var check=event.target.checked;//if  check Box checked then set bank row id other wise \"\" (blank)\nif(!check){row.IsDefault=false;}setForceRefresh(!forceRefresh);row.IsSelfDepositoryBank=check;}})});}},{text:\"Show On Invoice\",dataField:\"IsDefault\",formatExtraData:{tableList:bankTableList,forceRefresh:forceRefresh,setForceRefresh:setForceRefresh},formatter:function formatter(cellContent,row,key,_ref3){var tableList=_ref3.tableList,forceRefresh=_ref3.forceRefresh,setForceRefresh=_ref3.setForceRefresh;if(row.IsSelfDepositoryBank===true){return/*#__PURE__*/_jsx(Input,{type:\"radio\",name:\"columnRadio\",checked:row.IsDefault,onChange:function onChange(event){tableList.forEach(function(element){row.Bank===element.Bank?element.IsDefault=true:element.IsDefault=false;});row.IsDefault=event.target.checked;setForceRefresh(!forceRefresh);}});}}},{text:\"Account No\",dataField:\"AccountNo\",formatExtraData:{forceRefresh:forceRefresh},formatter:function formatter(value,row,key){return/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Input,{type:\"text\",disabled:!(row.IsSelfDepositoryBank===true),defaultValue:row.AccountNo,autoComplete:\"off\",onChange:function onChange(event){row.AccountNo=event.target.value;}})});},headerStyle:function headerStyle(colum,colIndex){return{width:'140px',textAlign:'center'};}},{text:\"IFSC\",dataField:\"IFSC\",formatExtraData:{forceRefresh:forceRefresh},formatter:function formatter(value,row,key){return/*#__PURE__*/_jsx(Input,{type:\"text\",disabled:!(row.IsSelfDepositoryBank===true),defaultValue:row.IFSC,autoComplete:\"off\",onChange:function onChange(event){row.IFSC=event.target.value;}});},headerStyle:function headerStyle(colum,colIndex){return{width:'140px',textAlign:'center'};}},{text:\"Branch \",dataField:\"BranchName\",formatExtraData:{forceRefresh:forceRefresh},formatter:function formatter(value,row,key){return/*#__PURE__*/_jsx(Input,{type:\"text\",disabled:!(row.IsSelfDepositoryBank===true),defaultValue:row.BranchName,autoComplete:\"off\",onChange:function onChange(e){row.BranchName=e.target.value;}});},headerStyle:function headerStyle(colum,colIndex){return{width:'140px',textAlign:'center'};}}];var pageOptions={sizePerPage:10,custom:true};var saveHandler=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var btnId,_bankTableList$reduce,assignedBanks,invalidMessages,isDefaultBanck,jsonBody;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();btnId=event.target.id;_context2.prev=2;_bankTableList$reduce=bankTableList.reduce(function(accumulator,bank){if(bank.IsSelfDepositoryBank||bank.CustomerBank){var requiredFields=[\"AccountNo\",\"IFSC\",\"BranchName\"];var missingFields=requiredFields.filter(function(field){return!bank[field];});if(bank.IsSelfDepositoryBank&&missingFields.length>0){var msgString=\"Required \"+missingFields.join(\", \");accumulator.invalidMessages.push(_defineProperty({},bank.BankName,msgString));}accumulator.assignedBanks.push({Bank:bank.Bank,CustomerBank:bank.CustomerBank||false,Party:loginPartyID(),IsSelfDepositoryBank:bank.IsSelfDepositoryBank||false,IsDefault:bank.IsDefault||false,AccountNo:bank.AccountNo||\"\",IFSC:bank.IFSC||\"\",BranchName:bank.BranchName||\"\",CreatedBy:loginUserID(),UpdatedBy:loginUserID(),Company:loginCompanyID()});}return accumulator;},{assignedBanks:[],invalidMessages:[]}),assignedBanks=_bankTableList$reduce.assignedBanks,invalidMessages=_bankTableList$reduce.invalidMessages;isDefaultBanck=assignedBanks.filter(function(bank){return bank.IsDefault;}).length===1;if(!(assignedBanks.length===0||!isDefaultBanck)){_context2.next=8;break;}customAlert({Type:3,Message:\"No assigned banks available. Please select bank as default.\"});return _context2.abrupt(\"return\");case 8:if(!(invalidMessages.length>0)){_context2.next=11;break;}customAlert({Type:3,Message:invalidMessages});return _context2.abrupt(\"return\");case 11:jsonBody=JSON.stringify(assignedBanks);dispatch(saveBankAssign({jsonBody:jsonBody,btnId:btnId}));_context2.next=18;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](2);CommonConsole(_context2.t0);case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[2,15]]);}));return function saveHandler(_x){return _ref4.apply(this,arguments);};}();// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(modalCss||pageMode===mode.dropdownAdd){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(MetaTags,{children:metaTagLabel(userPageAccessState)}),/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsx(Container,{fluid:true,children:/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black c_card_header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(\"form\",{noValidate:true,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(PaginationProvider,{pagination:paginationFactory(pageOptions),children:function children(_ref5){var paginationProps=_ref5.paginationProps,paginationTableProps=_ref5.paginationTableProps;return/*#__PURE__*/_jsx(ToolkitProvider,{keyField:\"Bank\",data:bankTableList,columns:pagesListColumns,search:true,children:function children(toolkitProps){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table\",children:[/*#__PURE__*/_jsx(BootstrapTable,_objectSpread(_objectSpread({keyField:\"Bank\",bordered:true,striped:false,noDataIndication:/*#__PURE__*/_jsx(\"div\",{className:\"text-danger text-center \",children:\"Record Not available\"}),classes:\"table align-middle table-nowrap table-hover\",headerWrapperClasses:\"thead-light\"},toolkitProps.baseProps),paginationTableProps)),countlabelFunc(toolkitProps,paginationProps,dispatch,\"Bank Assign\"),mySearchProps(toolkitProps.searchProps)]}),/*#__PURE__*/_jsx(Row,{className:\"align-items-md-center mt-30\",children:/*#__PURE__*/_jsx(Col,{className:\"pagination pagination-rounded justify-content-end mb-2\",children:/*#__PURE__*/_jsx(PaginationListStandalone,_objectSpread({},paginationProps))})})]});}});}}),/*#__PURE__*/_jsx(Col,{sm:2,children:/*#__PURE__*/_jsx(SaveButton,{pageMode:pageMode,loading:saveBtnloading,onClick:saveHandler,userAcc:userPageAccessState,editCreatedBy:editCreatedBy,module:\"BankAssign\"})})]})})})})})})]})})})]});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default BankAssign;","map":{"version":3,"names":["React","useEffect","useState","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Row","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","BootstrapTable","MetaTags","BreadcrumbShowCountlabel","Breadcrumb_inputName","commonPageField","commonPageFieldSuccess","useDispatch","useSelector","useHistory","SaveButton","breadcrumbReturnFunc","CommonConsole","loginCompanyID","loginPartyID","loginUserID","metaTagLabel","url","pageId","mode","mySearchProps","countlabelFunc","PartyBankfilter","saveBankAssign","saveBankAssign_Success","customAlert","BankAssign","props","history","dispatch","defaultsave","pageMode","modalCss","userPageAccessState","setUserAccState","editCreatedBy","forceRefresh","setForceRefresh","state","saveBtnloading","BankAssignReducer","postMsg","userAccess","Login","RoleAccessUpdateData","updateMsg","updateMessage","bankTableList","page_Id","BANK_ASSIGN","hasShowModal","hasOwnProperty","editValue","userAcc","locationPath","location","pathname","masterPath","find","inx","ActualPagePath","Status","StatusCode","Type","Message","isPermission","push","JSON","stringify","length","pagesListColumns","text","dataField","formatter","cellContent","row","key","CustomerBank","event","target","checked","formatExtraData","IsSelfDepositoryBank","check","IsDefault","tableList","forEach","element","Bank","value","AccountNo","headerStyle","colum","colIndex","width","textAlign","IFSC","BranchName","e","pageOptions","sizePerPage","custom","saveHandler","preventDefault","btnId","id","reduce","accumulator","bank","requiredFields","missingFields","filter","field","msgString","join","invalidMessages","BankName","assignedBanks","Party","CreatedBy","UpdatedBy","Company","isDefaultBanck","jsonBody","IsEditMode_Css","dropdownAdd","marginTop","PageDescription","PageDescriptionDetails","backgroundColor","paginationProps","paginationTableProps","toolkitProps","baseProps","searchProps"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Accounting/BankAssign/BankAssign.js"],"sourcesContent":["import React, { useEffect, useState, } from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport {\r\n    BreadcrumbShowCountlabel,\r\n    Breadcrumb_inputName,\r\n    commonPageField,\r\n    commonPageFieldSuccess,\r\n} from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SaveButton } from \"../../../components/Common/CommonButton\";\r\nimport {\r\n    breadcrumbReturnFunc,\r\n    CommonConsole,\r\n    loginCompanyID,\r\n    loginPartyID,\r\n    loginUserID,\r\n    metaTagLabel\r\n} from \"../../../components/Common/CommonFunction\";\r\nimport * as url from \"../../../routes/route_url\";\r\nimport * as pageId from \"../../../routes/allPageID\"\r\nimport * as mode from \"../../../routes/PageMode\"\r\nimport { mySearchProps } from \"../../../components/Common/SearchBox/MySearch\";\r\nimport { countlabelFunc } from \"../../../components/Common/CommonPurchaseList\";\r\nimport {\r\n    PartyBankfilter,\r\n    saveBankAssign,\r\n    saveBankAssign_Success,\r\n} from \"../../../store/Accounting/BankAssignRedux/action\";\r\nimport { customAlert } from \"../../../CustomAlert/ConfirmDialog\";\r\n\r\nconst BankAssign = (props) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const [pageMode] = useState(mode.defaultsave);//changes\r\n    const [modalCss] = useState(false);\r\n    const [userPageAccessState, setUserAccState] = useState(123);\r\n    const [editCreatedBy,] = useState(\"\");\r\n    const [forceRefresh, setForceRefresh] = useState(false);\r\n\r\n    //Access redux store bankTableList /  'save_ModuleSuccess' action data\r\n    const {\r\n        postMsg,\r\n        bankTableList,\r\n        saveBtnloading,\r\n        userAccess } = useSelector((state) => ({\r\n            saveBtnloading: state.BankAssignReducer.saveBtnloading,\r\n            postMsg: state.BankAssignReducer.postMsg,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            updateMsg: state.BankAssignReducer.updateMessage,\r\n            bankTableList: state.BankAssignReducer.bankTableList,\r\n        }));\r\n\r\n    useEffect(() => {\r\n        const page_Id = pageId.BANK_ASSIGN\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(page_Id))\r\n        dispatch(PartyBankfilter())\r\n    }, []);\r\n\r\n    const hasShowModal = props.hasOwnProperty(mode.editValue)\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = history.location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserAccState(userAcc)\r\n            breadcrumbReturnFunc({ dispatch, userAcc });\r\n        };\r\n    }, [userAccess])\r\n\r\n    useEffect(async () => {\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(saveBankAssign_Success({ Status: false }))\r\n            dispatch(Breadcrumb_inputName(''))\r\n\r\n            if (pageMode === \"other\") {\r\n                customAlert({\r\n                    Type: 1,\r\n                    Message: postMsg.Message,\r\n                })\r\n            }\r\n            else {\r\n                let isPermission = await customAlert({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                })\r\n                if (isPermission) {\r\n                    history.push({ pathname: url.BANK_ASSIGN })\r\n                }\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(saveBankAssign_Success({ Status: false }))\r\n            customAlert({\r\n                Type: 4,\r\n                Message: JSON.stringify(postMsg.Message),\r\n            })\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n        dispatch(BreadcrumbShowCountlabel(`${\" Bank Assign Count\"} :${bankTableList.length}`))\r\n    }, [bankTableList])\r\n\r\n    const pagesListColumns = [\r\n        {\r\n            text: \"Name\",\r\n            dataField: \"BankName\",\r\n        },\r\n        {\r\n            text: \" Customer Bank\",\r\n            dataField: \"CustomerBank\",\r\n            formatter: (cellContent, row, key) => {\r\n\r\n                return (<span >\r\n                    <Input type=\"checkbox\"\r\n                        defaultChecked={row.CustomerBank}\r\n                        onChange={(event) => { row.CustomerBank = event.target.checked; }}\r\n                    />\r\n                </span>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            text: \"Depository Bank\",\r\n            dataField: \"IsSelfDepositoryBank\",\r\n            formatExtraData: { forceRefresh, setForceRefresh },\r\n            formatter: (cellContent, row, key, { forceRefresh, setForceRefresh }) => {\r\n                return (<span >\r\n                    <Input type=\"checkbox\"\r\n                        defaultChecked={row.IsSelfDepositoryBank}\r\n                        onChange={(event) => {\r\n                            let check = event.target.checked;\r\n                            //if  check Box checked then set bank row id other wise \"\" (blank)\r\n                            if (!check) {\r\n                                row.IsDefault = false\r\n                            }\r\n                            setForceRefresh(!forceRefresh)\r\n                            row.IsSelfDepositoryBank = check\r\n\r\n                        }}\r\n                    />\r\n                </span>\r\n                )\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Show On Invoice\",\r\n            dataField: \"IsDefault\",\r\n            formatExtraData: { tableList: bankTableList, forceRefresh, setForceRefresh },\r\n            formatter: (cellContent, row, key, { tableList, forceRefresh, setForceRefresh }) => {\r\n\r\n                if (row.IsSelfDepositoryBank === true) {\r\n                    return (\r\n                        <Input type=\"radio\"\r\n                            name=\"columnRadio\"\r\n                            checked={row.IsDefault}\r\n                            onChange={(event) => {\r\n                                tableList.forEach(element => {\r\n                                    (row.Bank === element.Bank) ? element.IsDefault = true : element.IsDefault = false\r\n                                });\r\n                                row.IsDefault = event.target.checked;\r\n                                setForceRefresh(!forceRefresh)\r\n                            }\r\n                            }\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Account No\",\r\n            dataField: \"AccountNo\",\r\n            formatExtraData: { forceRefresh },\r\n            formatter: (value, row, key) => (\r\n                <span >\r\n                    <Input type=\"text\"\r\n                        disabled={!(row.IsSelfDepositoryBank === true)}\r\n                        defaultValue={row.AccountNo}\r\n                        autoComplete=\"off\"\r\n                        onChange={(event) => { row.AccountNo = event.target.value }}\r\n                    />\r\n                </span>\r\n            ),\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '140px', textAlign: 'center' };\r\n            }\r\n        },\r\n\r\n        {\r\n            text: \"IFSC\",\r\n            dataField: \"IFSC\",\r\n            formatExtraData: { forceRefresh },\r\n            formatter: (value, row, key) => (\r\n                <Input type=\"text\"\r\n                    disabled={!(row.IsSelfDepositoryBank === true)}\r\n                    defaultValue={row.IFSC}\r\n                    autoComplete=\"off\"\r\n                    onChange={(event) => { row.IFSC = event.target.value }}\r\n                />\r\n            ),\r\n\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '140px', textAlign: 'center' };\r\n            }\r\n        },\r\n\r\n        {\r\n            text: \"Branch \",\r\n            dataField: \"BranchName\",\r\n            formatExtraData: { forceRefresh },\r\n            formatter: (value, row, key) => (\r\n\r\n                <Input type=\"text\"\r\n                    disabled={!(row.IsSelfDepositoryBank === true)}\r\n                    defaultValue={row.BranchName}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => { row.BranchName = e.target.value }}\r\n                />\r\n            ),\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '140px', textAlign: 'center' };\r\n            }\r\n        },\r\n    ];\r\n\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        custom: true,\r\n    };\r\n\r\n    const saveHandler = async (event) => {\r\n        event.preventDefault();\r\n        const btnId = event.target.id;\r\n        try {\r\n            const { assignedBanks, invalidMessages } = bankTableList.reduce(\r\n                (accumulator, bank) => {\r\n                    if (bank.IsSelfDepositoryBank || bank.CustomerBank) {\r\n                        const requiredFields = [\"AccountNo\", \"IFSC\", \"BranchName\"];\r\n                        const missingFields = requiredFields.filter((field) => !bank[field]);\r\n\r\n                        if (bank.IsSelfDepositoryBank && missingFields.length > 0) {\r\n                            const msgString = \"Required \" + missingFields.join(\", \");\r\n                            accumulator.invalidMessages.push({ [bank.BankName]: msgString });\r\n                        }\r\n\r\n                        accumulator.assignedBanks.push({\r\n                            Bank: bank.Bank,\r\n                            CustomerBank: bank.CustomerBank || false,\r\n                            Party: loginPartyID(),\r\n                            IsSelfDepositoryBank: bank.IsSelfDepositoryBank || false,\r\n                            IsDefault: bank.IsDefault || false,\r\n                            AccountNo: bank.AccountNo || \"\",\r\n                            IFSC: bank.IFSC || \"\",\r\n                            BranchName: bank.BranchName || \"\",\r\n                            CreatedBy: loginUserID(),\r\n                            UpdatedBy: loginUserID(),\r\n                            Company: loginCompanyID(),\r\n                        });\r\n                    }\r\n                    return accumulator;\r\n                },\r\n                { assignedBanks: [], invalidMessages: [] }\r\n            );\r\n\r\n            const isDefaultBanck = assignedBanks.filter((bank) => bank.IsDefault).length === 1;\r\n            if (assignedBanks.length === 0 || !isDefaultBanck) {\r\n                customAlert({\r\n                    Type: 3,\r\n                    Message: \"No assigned banks available. Please select bank as default.\",\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (invalidMessages.length > 0) {\r\n                customAlert({\r\n                    Type: 3,\r\n                    Message: invalidMessages,\r\n                });\r\n                return\r\n            }\r\n\r\n            const jsonBody = JSON.stringify(assignedBanks);\r\n            dispatch(saveBankAssign({ jsonBody, btnId }));\r\n\r\n        } catch (error) {\r\n            CommonConsole(error)\r\n        }\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === mode.dropdownAdd)) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags>{metaTagLabel(userPageAccessState)}</MetaTags>\r\n\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css, }}>\r\n                    <Container fluid>\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black c_card_header\" >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <FormGroup>\r\n                                                <Row>\r\n                                                    <PaginationProvider\r\n                                                        pagination={paginationFactory(pageOptions)}\r\n                                                    >\r\n                                                        {({ paginationProps, paginationTableProps }) => (\r\n                                                            <ToolkitProvider\r\n                                                                keyField=\"Bank\"\r\n                                                                data={bankTableList}\r\n                                                                columns={pagesListColumns}\r\n                                                                search\r\n                                                            >\r\n                                                                {toolkitProps => (\r\n                                                                    <React.Fragment>\r\n                                                                        <div className=\"table\">\r\n                                                                            <BootstrapTable\r\n                                                                                keyField={\"Bank\"}\r\n                                                                                bordered={true}\r\n                                                                                striped={false}\r\n                                                                                noDataIndication={<div className=\"text-danger text-center \">Record Not available</div>}\r\n                                                                                classes={\"table align-middle table-nowrap table-hover\"}\r\n                                                                                headerWrapperClasses={\"thead-light\"}\r\n\r\n                                                                                {...toolkitProps.baseProps}\r\n                                                                                {...paginationTableProps}\r\n                                                                            />\r\n                                                                            {countlabelFunc(toolkitProps, paginationProps, dispatch, \"Bank Assign\")}\r\n                                                                            {mySearchProps(toolkitProps.searchProps)}\r\n                                                                        </div>\r\n\r\n                                                                        <Row className=\"align-items-md-center mt-30\">\r\n                                                                            <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                                                <PaginationListStandalone\r\n                                                                                    {...paginationProps}\r\n                                                                                />\r\n                                                                            </Col>\r\n                                                                        </Row>\r\n                                                                    </React.Fragment>\r\n                                                                )\r\n                                                                }\r\n                                                            </ToolkitProvider>\r\n                                                        )\r\n                                                        }\r\n                                                    </PaginationProvider>\r\n\r\n                                                    <Col sm={2}>\r\n                                                        <SaveButton pageMode={pageMode}\r\n                                                            loading={saveBtnloading}\r\n                                                            onClick={saveHandler}\r\n                                                            userAcc={userPageAccessState}\r\n                                                            editCreatedBy={editCreatedBy}\r\n                                                            module={\"BankAssign\"}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default BankAssign\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}