{"ast":null,"code":"import _defineProperty from\"D:/Rohit/Git projects/Manthan/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{numberWithCommas}from\"../Report_common_function\";export var columns=[\"SR\",\"HSN Item Name\",\"Quantity (UOM)\",\"MRP\",\"Rate\",\"Discount\",\"Discount Amount \",\"Taxable Amount\",\"          CGST           %        Amount\",\"CGST Amount\",\"          SGST           %        Amount\",\"SGST Amount\",\"Amount\"];export var Footercolumn=[\"\"];export var Return=[\"Return\"];export var BilledBy=[\"Billed by\"];export var BilledTo=[\"Billed by\"];export var DetailsOfTransport=[\"Billed by\"];export var Bankcolumn=[\"\",\"\",\"\"];export var Rows=function Rows(data){var _data$ReturnItems=data.ReturnItems,ReturnItems=_data$ReturnItems===void 0?[]:_data$ReturnItems;ReturnItems.sort(function(firstItem,secondItem){return firstItem.GSTPercentage-secondItem.GSTPercentage;});var returnArr=[];var Gst=0;var totalBasicAmount=0;var totalCGst=0;var totalSGst=0;var totalAmount=0;var totalQuantity=0;var SrNO=1;var TotalGst=0;var GSTPercentage=0;var groupedItems=ReturnItems.reduce(function(accumulator,currentItem){var HSNCode=currentItem.HSNCode,ItemName=currentItem.ItemName,Rate=currentItem.Rate,Discount=currentItem.Discount,CGST=currentItem.CGST,SGST=currentItem.SGST,Amount=currentItem.Amount,DiscountAmount=currentItem.DiscountAmount,BasicAmount=currentItem.BasicAmount,Quantity=currentItem.Quantity,UnitName=currentItem.UnitName,MRPValue=currentItem.MRPValue,CGSTPercentage=currentItem.CGSTPercentage,SGSTPercentage=currentItem.SGSTPercentage,GSTPercentage=currentItem.GSTPercentage,BatchCode=currentItem.BatchCode,BatchDate=currentItem.BatchDate,DiscountType=currentItem.DiscountType,PrimaryUnitName=currentItem.PrimaryUnitName;var key=ItemName+'_'+MRPValue+\"_\"+Discount;if(accumulator[key]){accumulator[key].DiscountAmount+=Number(DiscountAmount);accumulator[key].Quantity+=Number(Quantity);accumulator[key].BasicAmount+=Number(BasicAmount);accumulator[key].CGST+=Number(CGST);accumulator[key].SGST+=Number(SGST);accumulator[key].Amount+=Number(Amount);accumulator[key].BatchCode+=BatchCode;accumulator[key].BatchDate+=BatchDate;accumulator[key].quantityString+=\" ,  \".concat(BatchCode,\" \").concat(BatchDate,\" \");}else{var _accumulator$key;accumulator[key]=(_accumulator$key={ItemName:ItemName,HSNCode:HSNCode,MRPValue:MRPValue,DiscountType:DiscountType,Rate:Rate,Discount:Discount,CGST:Number(CGST),SGST:Number(SGST),Amount:Number(Amount),DiscountAmount:Number(DiscountAmount),BasicAmount:Number(BasicAmount),Quantity:Number(Quantity),UnitName:UnitName,CGSTPercentage:CGSTPercentage,SGSTPercentage:SGSTPercentage,GSTPercentage:GSTPercentage,BatchDate:BatchDate,BatchCode:BatchCode},_defineProperty(_accumulator$key,\"BatchDate\",BatchDate),_defineProperty(_accumulator$key,\"quantityString\",\"  \".concat(BatchCode,\"  \").concat(BatchDate)),_defineProperty(_accumulator$key,\"PrimaryUnitName\",PrimaryUnitName),_accumulator$key);}return accumulator;},{});Object.values(groupedItems).forEach(function(element,key){var tableitemRow=[SrNO++,\" \".concat(element.ItemName),\"\".concat(Number(element.Quantity).toFixed(2),\" \").concat(element.UnitName),\"\".concat(numberWithCommas(Number(element.MRPValue).toFixed(2))),\"\".concat(numberWithCommas(Number(element.Rate).toFixed(2))),element.Discount===null?\"\":\"\".concat(element.Discount,\" \").concat(element.DiscountType===\"1\"?\"Rs\":\"%\"),\"\".concat(numberWithCommas(Number(element.DiscountAmount).toFixed(2))),\"\".concat(numberWithCommas(Number(element.BasicAmount).toFixed(2))),\"\".concat(Number(element.CGSTPercentage).toFixed(1),\"%\"),\"\".concat(numberWithCommas(Number(element.CGST).toFixed(2))),\"\".concat(Number(element.SGSTPercentage).toFixed(1),\"%\"),\"\".concat(numberWithCommas(Number(element.SGST).toFixed(2))),\"\".concat(numberWithCommas(Number(element.Amount).toFixed(2)))];function totalLots(){totalQuantity=Number(totalQuantity)+Number(element.Quantity);totalCGst=Number(totalCGst)+Number(element.CGST);totalSGst=Number(totalSGst)+Number(element.SGST);totalAmount=Number(totalAmount)+Number(element.Amount);totalBasicAmount=Number(totalBasicAmount)+Number(element.BasicAmount);TotalGst=totalCGst+totalSGst;GSTPercentage=Number(element.CGSTPercentage)+Number(element.SGSTPercentage);var cgst=data[\"tableTot\"].TotalCGst;return{TotalCGst:Number(totalCGst)+Number(cgst)};};function totalrow(){return[\"\",\" GST \".concat(parseFloat(GSTPercentage),\"%  Total:\").concat(numberWithCommas(Number(TotalGst).toFixed(2)),\" \"),\" \",\"\",\"\",\"\",\"\",\"\".concat(numberWithCommas(Number(totalBasicAmount).toFixed(2))),\"\".concat(numberWithCommas(Number(totalCGst).toFixed(2))),\"isaddition\",\"\".concat(numberWithCommas(Number(totalSGst).toFixed(2))),\"\",\"\".concat(numberWithCommas(Number(totalAmount).toFixed(2)))];};var BatchRow=[\"Batch:  \".concat(element.quantityString,\" \"),\"Batch\",\" \",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];if(Gst===0){Gst=element.GSTPercentage;};var aa={TotalCGst:0,totalSGst:0};if(data[\"tableTot\"]===undefined){data[\"tableTot\"]=aa;}if(Gst===element.GSTPercentage){data[\"tableTot\"]=totalLots();returnArr.push(tableitemRow);}else{returnArr.push(totalrow());returnArr.push(tableitemRow);totalBasicAmount=0;totalCGst=0;totalSGst=0;totalAmount=0;totalQuantity=0;data[\"tableTot\"]=totalLots();Gst=element.GSTPercentage;}if(key===Object.keys(groupedItems).length-1){returnArr.push(totalrow());}});return returnArr;};export var ReturnByRow=function ReturnByRow(data){var ReturnByArray=[[\"                    \".concat(data.CustomerName)],[\"                 \".concat(data.CustomerAddress)],[\"            \".concat(data.CustomerState)],[\"              \".concat(data.CustomerGSTIN)],[\"                   \".concat(data.CustomerFSSAINo)],[\"                   \".concat(data.CustomerMobileNo)]];return ReturnByArray;};export var ReturnToRow=function ReturnToRow(data){var ReturnToArray=[[\"             \".concat(data.PartyName)],[\"                  \".concat(data.PartyAddress)],[\"            \".concat(data.PartyState)],[\"               \".concat(data.PartyGSTIN)],[\"                   \".concat(data.PartyFSSAINo)],[\"                   \".concat(data.PartyMobileNo)]];return ReturnToArray;};// export const DetailsOfTransportRow = (data) => {\n//     var DetailsOfTransportArray = [\n//         [`Claim No: {}`],\n//         [`Period :`],\n//     ]\n//     return DetailsOfTransportArray;\n// }\nexport var ReturnReason=function ReturnReason(data){var ReturnReasonArray=[[\"Return Reason :\".concat(data.ReturnReason===null?\"\":data.ReturnReason)]];return ReturnReasonArray;};","map":{"version":3,"names":["numberWithCommas","columns","Footercolumn","Return","BilledBy","BilledTo","DetailsOfTransport","Bankcolumn","Rows","data","ReturnItems","sort","firstItem","secondItem","GSTPercentage","returnArr","Gst","totalBasicAmount","totalCGst","totalSGst","totalAmount","totalQuantity","SrNO","TotalGst","groupedItems","reduce","accumulator","currentItem","HSNCode","ItemName","Rate","Discount","CGST","SGST","Amount","DiscountAmount","BasicAmount","Quantity","UnitName","MRPValue","CGSTPercentage","SGSTPercentage","BatchCode","BatchDate","DiscountType","PrimaryUnitName","key","Number","quantityString","Object","values","forEach","element","tableitemRow","toFixed","totalLots","cgst","TotalCGst","totalrow","parseFloat","BatchRow","aa","undefined","push","keys","length","ReturnByRow","ReturnByArray","CustomerName","CustomerAddress","CustomerState","CustomerGSTIN","CustomerFSSAINo","CustomerMobileNo","ReturnToRow","ReturnToArray","PartyName","PartyAddress","PartyState","PartyGSTIN","PartyFSSAINo","PartyMobileNo","ReturnReason","ReturnReasonArray"],"sources":["D:/Rohit/Git projects/Manthan/src/Reports/PurchaseReturnReport/TableData.js"],"sourcesContent":["import { numberWithCommas } from \"../Report_common_function\";\r\n\r\n\r\nexport const columns = [\r\n    \"SR\",\r\n    \"HSN Item Name\",\r\n    \"Quantity (UOM)\",\r\n    \"MRP\",\r\n    \"Rate\",\r\n    \"Discount\",\r\n    \"Discount Amount \",\r\n    \"Taxable Amount\",\r\n    \"          CGST           %        Amount\",\r\n    \"CGST Amount\",\r\n    \"          SGST           %        Amount\",\r\n    \"SGST Amount\",\r\n    \"Amount\",\r\n];\r\n\r\n\r\n\r\n\r\nexport const Footercolumn = [\r\n    \"\",\r\n]\r\nexport const Return = [\r\n    \"Return\",\r\n]\r\nexport const BilledBy = [\r\n    \"Billed by\",\r\n]\r\nexport const BilledTo = [\r\n    \"Billed by\",\r\n]\r\nexport const DetailsOfTransport = [\r\n    \"Billed by\",\r\n]\r\n\r\nexport const Bankcolumn = [\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n]\r\n\r\nexport const Rows = (data) => {\r\n\r\n    const { ReturnItems = [] } = data\r\n    ReturnItems.sort((firstItem, secondItem) => firstItem.GSTPercentage - secondItem.GSTPercentage);\r\n    const returnArr = [];\r\n    let Gst = 0\r\n    let totalBasicAmount = 0\r\n    let totalCGst = 0\r\n    let totalSGst = 0\r\n    let totalAmount = 0\r\n    let totalQuantity = 0\r\n    let SrNO = 1\r\n    let TotalGst = 0\r\n    let GSTPercentage = 0\r\n\r\n    const groupedItems = ReturnItems.reduce((accumulator, currentItem) => {\r\n\r\n        const { HSNCode, ItemName, Rate, Discount, CGST, SGST, Amount, DiscountAmount, BasicAmount, Quantity, UnitName, MRPValue, CGSTPercentage, SGSTPercentage, GSTPercentage, BatchCode, BatchDate, DiscountType, PrimaryUnitName } = currentItem;\r\n        const key = ItemName + '_' + MRPValue + \"_\" + Discount;\r\n        if (accumulator[key]) {\r\n            accumulator[key].DiscountAmount += Number(DiscountAmount);\r\n            accumulator[key].Quantity += Number(Quantity);\r\n            accumulator[key].BasicAmount += Number(BasicAmount);\r\n            accumulator[key].CGST += Number(CGST);\r\n            accumulator[key].SGST += Number(SGST);\r\n            accumulator[key].Amount += Number(Amount);\r\n            accumulator[key].BatchCode += BatchCode;\r\n            accumulator[key].BatchDate += BatchDate;\r\n            accumulator[key].quantityString += ` ,  ${BatchCode} ${BatchDate} `;\r\n        } else {\r\n            accumulator[key] = {\r\n                ItemName, HSNCode,\r\n                MRPValue, DiscountType, Rate, Discount, CGST: Number(CGST), SGST: Number(SGST), Amount: Number(Amount), DiscountAmount: Number(DiscountAmount), BasicAmount: Number(BasicAmount), Quantity: Number(Quantity), UnitName, CGSTPercentage, SGSTPercentage, GSTPercentage, BatchDate, BatchCode: BatchCode, BatchDate: BatchDate, quantityString: `  ${BatchCode}  ${BatchDate}`, PrimaryUnitName\r\n            };\r\n        }\r\n        return accumulator;\r\n    }, {});\r\n\r\n    Object.values(groupedItems).forEach((element, key) => {\r\n\r\n        const tableitemRow = [\r\n            SrNO++,\r\n            ` ${element.ItemName}`,\r\n            `${Number(element.Quantity).toFixed(2)} ${element.UnitName}`,\r\n            `${numberWithCommas(Number(element.MRPValue).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.Rate).toFixed(2))}`,\r\n            element.Discount === null ? \"\" : `${element.Discount} ${element.DiscountType === \"1\" ? \"Rs\" : \"%\"}`,\r\n            `${numberWithCommas(Number(element.DiscountAmount).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.BasicAmount).toFixed(2))}`,\r\n            `${Number(element.CGSTPercentage).toFixed(1)}%`,\r\n            `${numberWithCommas(Number(element.CGST).toFixed(2))}`,\r\n            `${Number(element.SGSTPercentage).toFixed(1)}%`,\r\n            `${numberWithCommas(Number(element.SGST).toFixed(2))}`,\r\n            `${numberWithCommas(Number(element.Amount).toFixed(2))}`,\r\n        ];\r\n\r\n        function totalLots() {\r\n            totalQuantity = Number(totalQuantity) + Number(element.Quantity)\r\n            totalCGst = Number(totalCGst) + Number(element.CGST)\r\n            totalSGst = Number(totalSGst) + Number(element.SGST)\r\n            totalAmount = Number(totalAmount) + Number(element.Amount)\r\n            totalBasicAmount = Number(totalBasicAmount) + Number(element.BasicAmount)\r\n            TotalGst = totalCGst + totalSGst;\r\n            GSTPercentage = Number(element.CGSTPercentage) + Number(element.SGSTPercentage)\r\n            let cgst = data[\"tableTot\"].TotalCGst\r\n            return ({ TotalCGst: Number(totalCGst) + Number(cgst) })\r\n\r\n        };\r\n\r\n\r\n        function totalrow() {\r\n\r\n            return [\r\n                \"\",\r\n                ` GST ${(parseFloat(GSTPercentage))}%  Total:${numberWithCommas(Number(TotalGst).toFixed(2))} `,\r\n                \" \",\r\n                ``,\r\n                \"\",\r\n                \"\",\r\n                ``,\r\n                `${numberWithCommas(Number(totalBasicAmount).toFixed(2))}`,\r\n                `${numberWithCommas(Number(totalCGst).toFixed(2))}`,\r\n                \"isaddition\",\r\n                `${numberWithCommas(Number(totalSGst).toFixed(2))}`,\r\n                \"\",\r\n                `${numberWithCommas(Number(totalAmount).toFixed(2))}`,\r\n            ];\r\n        };\r\n        const BatchRow = [\r\n            `Batch:  ${element.quantityString} `,\r\n            `Batch`,\r\n            \" \",\r\n            ``,\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            ``,\r\n            \"\",\r\n            ``,\r\n            \"\",\r\n            ``,\r\n        ]\r\n\r\n        if (Gst === 0) { Gst = element.GSTPercentage };\r\n        let aa = { TotalCGst: 0, totalSGst: 0 }\r\n        if (data[\"tableTot\"] === undefined) { data[\"tableTot\"] = aa }\r\n\r\n        if ((Gst === element.GSTPercentage)) {\r\n            data[\"tableTot\"] = totalLots()\r\n            returnArr.push(tableitemRow)\r\n\r\n        }\r\n\r\n\r\n        else {\r\n            returnArr.push(totalrow());\r\n            returnArr.push(tableitemRow);\r\n            totalBasicAmount = 0\r\n            totalCGst = 0\r\n            totalSGst = 0\r\n            totalAmount = 0\r\n            totalQuantity = 0\r\n\r\n            data[\"tableTot\"] = totalLots()\r\n            Gst = element.GSTPercentage;\r\n        }\r\n        if (key === Object.keys(groupedItems).length - 1) {\r\n            returnArr.push(totalrow());\r\n        }\r\n    })\r\n    return returnArr;\r\n}\r\n\r\n\r\nexport const ReturnByRow = (data) => {\r\n\r\n    var ReturnByArray = [\r\n        [`                    ${data.CustomerName}`],\r\n        [`                 ${data.CustomerAddress}`],\r\n        [`            ${data.CustomerState}`],\r\n        [`              ${data.CustomerGSTIN}`,],\r\n        [`                   ${data.CustomerFSSAINo}`],\r\n        [`                   ${data.CustomerMobileNo}`],\r\n    ]\r\n    return ReturnByArray;\r\n}\r\nexport const ReturnToRow = (data) => {\r\n\r\n    var ReturnToArray = [\r\n        [`             ${data.PartyName}`],\r\n        [`                  ${data.PartyAddress}`],\r\n        [`            ${data.PartyState}`],\r\n        [`               ${data.PartyGSTIN}`],\r\n        [`                   ${data.PartyFSSAINo}`],\r\n        [`                   ${data.PartyMobileNo}`],\r\n    ]\r\n\r\n    return ReturnToArray;\r\n}\r\n// export const DetailsOfTransportRow = (data) => {\r\n//     var DetailsOfTransportArray = [\r\n//         [`Claim No: {}`],\r\n//         [`Period :`],\r\n//     ]\r\n//     return DetailsOfTransportArray;\r\n// }\r\n\r\n\r\nexport const ReturnReason = (data) => {\r\n\r\n    var ReturnReasonArray = [\r\n        [`Return Reason :${data.ReturnReason === null ? \"\" : data.ReturnReason}`],\r\n    ]\r\n\r\n    return ReturnReasonArray;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}