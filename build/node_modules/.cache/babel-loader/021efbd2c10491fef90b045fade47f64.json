{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { CommonConsole, convertDatefunc, convertTimefunc } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { Material_Issue_Delete_API, Material_Issue_Edit_API, Material_Issue_Get_API, Material_Issue_GoButton_Post_API, Material_Issue_Post_API } from \"../../../helpers/backend_helper\";\nimport { deleteMaterialIssueIdSuccess, editMaterialIssueIdSuccess, getMaterialIssueListPageSuccess, goButtonForMaterialIssue_Master_ActionSuccess, postMaterialIssueSuccess } from \"./action\";\nimport { DELETE_MATERIAL_ISSUE_LIST_PAGE, EDIT_MATERIAL_ISSUE_LIST_PAGE, GET_MATERIAL_ISSUE_LIST_PAGE, POST_GO_BUTTON_FOR_MATERIAL_ISSUE_MASTER, POST_MATERIAL_ISSUE } from \"./actionType\"; // GO Botton Post API\n\nfunction* GoButton_MaterialIssue_masterPage_genfun(_ref) {\n  let {\n    data\n  } = _ref;\n  debugger;\n\n  try {\n    const {\n      jsonBody\n    } = data;\n    const response = yield call(Material_Issue_GoButton_Post_API, jsonBody);\n    response.Data.forEach(i1 => {\n      i1.BatchesData.forEach(i2 => {\n        i2.Qty = '';\n      });\n    });\n    let convResp = [];\n    const resp1 = { ...response,\n      ...convResp,\n      ...data\n    };\n    yield convResp = response.Data.map(i1 => {\n      let count = Number(i1.Quantity);\n      i1.BatchesData = i1.BatchesData.map(i2 => {\n        let qty = Number(i2.BaseUnitQuantity);\n\n        if (count > qty && !(count === 0)) {\n          count = count - qty;\n          i2.Qty = qty.toFixed(3);\n        } else if (count <= qty && count > 0) {\n          i2.Qty = count.toFixed(3);\n          count = 0;\n        } else {\n          i2.Qty = 0;\n        }\n\n        return i2;\n      });\n      count = 0;\n      return i1;\n    });\n    yield put(goButtonForMaterialIssue_Master_ActionSuccess(resp1));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c = GoButton_MaterialIssue_masterPage_genfun;\n\nfunction* edit_Metrialissue_listpage_GenFunc(_ref2) {\n  let {\n    id,\n    pageMode\n  } = _ref2;\n\n  try {\n    const response = yield call(Material_Issue_Edit_API, id);\n    let obj = response.Data[0];\n    response[\"pageMode\"] = pageMode;\n    let newArr = [];\n    yield obj.MaterialIssueItems.forEach(i1 => {\n      const b1 = {\n        BatchDate: i1.BatchDate,\n        BatchCode: i1.BatchCode,\n        SystemBatchDate: i1.SystemBatchDate,\n        SystemBatchCode: i1.SystemBatchCode,\n        BaseUnitQuantity: 0,\n        Qty: i1.IssueQuantity\n      };\n      let found = newArr.find(i2 => {\n        if (i1.Item === i2.Item) {\n          i2.BatchesData.push(b1);\n        }\n\n        return i1.Item === i2.Item;\n      });\n\n      if (found === undefined) {\n        i1[\"BatchesData\"] = [];\n        i1.BatchesData.push(b1); // i1.Quantity = i1.WorkOrderQuantity\n\n        newArr.push(i1);\n      }\n\n      ;\n    });\n    yield obj.MaterialIssueItems = newArr;\n    yield response.Data = obj;\n    debugger;\n    yield put(editMaterialIssueIdSuccess(response)); // console.log(\"editmaterial\", JSON.stringify(response.Data))\n  } catch (error) {\n    CommonConsole(error);\n  }\n} //post api\n\n\nfunction* save_Material_Issue_Genfun(_ref3) {\n  let {\n    data\n  } = _ref3;\n\n  try {\n    const response = yield call(Material_Issue_Post_API, data);\n    yield put(postMaterialIssueSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n} // get Work Order List API Using post method\n\n\nfunction* GoButton_MaterialIssue_listpage_GenFunc(_ref4) {\n  let {\n    filters\n  } = _ref4;\n\n  try {\n    const response = yield call(Material_Issue_Get_API, filters);\n    const newList = yield response.Data.map(i => {\n      var date = convertDatefunc(i.MaterialIssueDate);\n      var time = convertTimefunc(i.CreatedOn);\n      i.MaterialIssueDate = `${date} ${time}`;\n      return i;\n    });\n    yield put(getMaterialIssueListPageSuccess(newList));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c2 = GoButton_MaterialIssue_listpage_GenFunc;\n\nfunction* Delete_Metrialissue_listpage_GenFunc(_ref5) {\n  let {\n    id\n  } = _ref5;\n\n  try {\n    const response = yield call(Material_Issue_Delete_API, id);\n    yield put(deleteMaterialIssueIdSuccess(response));\n  } catch (error) {\n    CommonConsole(error);\n  }\n}\n\n_c3 = Delete_Metrialissue_listpage_GenFunc;\n\nfunction* MaterialIssueSaga() {\n  yield takeEvery(POST_GO_BUTTON_FOR_MATERIAL_ISSUE_MASTER, GoButton_MaterialIssue_masterPage_genfun);\n  yield takeEvery(POST_MATERIAL_ISSUE, save_Material_Issue_Genfun);\n  yield takeEvery(GET_MATERIAL_ISSUE_LIST_PAGE, GoButton_MaterialIssue_listpage_GenFunc);\n  yield takeEvery(DELETE_MATERIAL_ISSUE_LIST_PAGE, Delete_Metrialissue_listpage_GenFunc);\n  yield takeEvery(EDIT_MATERIAL_ISSUE_LIST_PAGE, edit_Metrialissue_listpage_GenFunc);\n}\n\n_c4 = MaterialIssueSaga;\nexport default MaterialIssueSaga;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GoButton_MaterialIssue_masterPage_genfun\");\n$RefreshReg$(_c2, \"GoButton_MaterialIssue_listpage_GenFunc\");\n$RefreshReg$(_c3, \"Delete_Metrialissue_listpage_GenFunc\");\n$RefreshReg$(_c4, \"MaterialIssueSaga\");","map":{"version":3,"names":["call","put","takeEvery","CommonConsole","convertDatefunc","convertTimefunc","Material_Issue_Delete_API","Material_Issue_Edit_API","Material_Issue_Get_API","Material_Issue_GoButton_Post_API","Material_Issue_Post_API","deleteMaterialIssueIdSuccess","editMaterialIssueIdSuccess","getMaterialIssueListPageSuccess","goButtonForMaterialIssue_Master_ActionSuccess","postMaterialIssueSuccess","DELETE_MATERIAL_ISSUE_LIST_PAGE","EDIT_MATERIAL_ISSUE_LIST_PAGE","GET_MATERIAL_ISSUE_LIST_PAGE","POST_GO_BUTTON_FOR_MATERIAL_ISSUE_MASTER","POST_MATERIAL_ISSUE","GoButton_MaterialIssue_masterPage_genfun","data","jsonBody","response","Data","forEach","i1","BatchesData","i2","Qty","convResp","resp1","map","count","Number","Quantity","qty","BaseUnitQuantity","toFixed","error","edit_Metrialissue_listpage_GenFunc","id","pageMode","obj","newArr","MaterialIssueItems","b1","BatchDate","BatchCode","SystemBatchDate","SystemBatchCode","IssueQuantity","found","find","Item","push","undefined","save_Material_Issue_Genfun","GoButton_MaterialIssue_listpage_GenFunc","filters","newList","i","date","MaterialIssueDate","time","CreatedOn","Delete_Metrialissue_listpage_GenFunc","MaterialIssueSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Production/Matrial_Issue/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { CommonConsole, convertDatefunc, convertTimefunc } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport { Material_Issue_Delete_API, Material_Issue_Edit_API, Material_Issue_Get_API, Material_Issue_GoButton_Post_API, Material_Issue_Post_API } from \"../../../helpers/backend_helper\";\r\nimport { deleteMaterialIssueIdSuccess, editMaterialIssueIdSuccess, getMaterialIssueListPageSuccess, goButtonForMaterialIssue_Master_ActionSuccess, postMaterialIssueSuccess } from \"./action\";\r\nimport { DELETE_MATERIAL_ISSUE_LIST_PAGE, EDIT_MATERIAL_ISSUE_LIST_PAGE, GET_MATERIAL_ISSUE_LIST_PAGE, POST_GO_BUTTON_FOR_MATERIAL_ISSUE_MASTER, POST_MATERIAL_ISSUE } from \"./actionType\";\r\n\r\n// GO Botton Post API\r\nfunction* GoButton_MaterialIssue_masterPage_genfun({ data }) {\r\n  debugger\r\n  try {\r\n    const { jsonBody } = data;\r\n    const response = yield call(Material_Issue_GoButton_Post_API, jsonBody);\r\n    response.Data.forEach(i1 => {\r\n      i1.BatchesData.forEach(i2 => {\r\n        i2.Qty = '';\r\n      });\r\n    });\r\n    let convResp = []\r\n    const resp1 = { ...response, ...convResp, ...data }\r\n    yield convResp = response.Data.map(i1 => {\r\n      let count = Number(i1.Quantity)\r\n\r\n      i1.BatchesData = i1.BatchesData.map(i2 => {\r\n\r\n        let qty = Number(i2.BaseUnitQuantity)\r\n\r\n        if ((count > qty) && !(count === 0)) {\r\n          count = count - qty\r\n          i2.Qty = qty.toFixed(3)\r\n        } else if ((count <= qty) && (count > 0)) {\r\n          i2.Qty = count.toFixed(3)\r\n          count = 0\r\n        }\r\n        else {\r\n          i2.Qty = 0;\r\n        }\r\n        return i2\r\n      });\r\n      count = 0\r\n      return i1\r\n    })\r\n\r\n    yield put(goButtonForMaterialIssue_Master_ActionSuccess(resp1));\r\n\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* edit_Metrialissue_listpage_GenFunc({ id, pageMode }) {\r\n  try {\r\n    const response = yield call(Material_Issue_Edit_API, id);\r\n\r\n    let obj = response.Data[0]\r\n    response[\"pageMode\"] = pageMode;\r\n    let newArr = [];\r\n\r\n    yield obj.MaterialIssueItems.forEach((i1) => {\r\n      const b1 = {\r\n        BatchDate: i1.BatchDate,\r\n        BatchCode: i1.BatchCode,\r\n        SystemBatchDate: i1.SystemBatchDate,\r\n        SystemBatchCode: i1.SystemBatchCode,\r\n        BaseUnitQuantity: 0,\r\n        Qty: i1.IssueQuantity,\r\n      };\r\n\r\n\r\n      let found = newArr.find((i2) => {\r\n        if (i1.Item === i2.Item) {\r\n          i2.BatchesData.push(b1);\r\n        }\r\n        return (i1.Item === i2.Item)\r\n      })\r\n\r\n      if (found === undefined) {\r\n        i1[\"BatchesData\"] = [];\r\n        i1.BatchesData.push(b1)\r\n        // i1.Quantity = i1.WorkOrderQuantity\r\n\r\n        newArr.push(i1)\r\n      };\r\n\r\n    });\r\n    yield obj.MaterialIssueItems = newArr\r\n    yield response.Data = obj;\r\n    debugger\r\n    yield put(editMaterialIssueIdSuccess(response));\r\n    // console.log(\"editmaterial\", JSON.stringify(response.Data))\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\n//post api\r\nfunction* save_Material_Issue_Genfun({ data }) {\r\n  try {\r\n    const response = yield call(Material_Issue_Post_API, data);\r\n    yield put(postMaterialIssueSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\n// get Work Order List API Using post method\r\nfunction* GoButton_MaterialIssue_listpage_GenFunc({ filters }) {\r\n  try {\r\n    const response = yield call(Material_Issue_Get_API, filters);\r\n    const newList = yield response.Data.map((i) => {\r\n      var date = convertDatefunc(i.MaterialIssueDate)\r\n      var time = convertTimefunc(i.CreatedOn)\r\n      i.MaterialIssueDate = (`${date} ${time}`)\r\n      return i\r\n    })\r\n    yield put(getMaterialIssueListPageSuccess(newList));\r\n\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* Delete_Metrialissue_listpage_GenFunc({ id }) {\r\n  try {\r\n    const response = yield call(Material_Issue_Delete_API, id);\r\n\r\n    yield put(deleteMaterialIssueIdSuccess(response));\r\n  } catch (error) { CommonConsole(error) }\r\n}\r\n\r\nfunction* MaterialIssueSaga() {\r\n  yield takeEvery(POST_GO_BUTTON_FOR_MATERIAL_ISSUE_MASTER, GoButton_MaterialIssue_masterPage_genfun)\r\n  yield takeEvery(POST_MATERIAL_ISSUE, save_Material_Issue_Genfun)\r\n  yield takeEvery(GET_MATERIAL_ISSUE_LIST_PAGE, GoButton_MaterialIssue_listpage_GenFunc)\r\n  yield takeEvery(DELETE_MATERIAL_ISSUE_LIST_PAGE, Delete_Metrialissue_listpage_GenFunc)\r\n  yield takeEvery(EDIT_MATERIAL_ISSUE_LIST_PAGE, edit_Metrialissue_listpage_GenFunc)\r\n}\r\n\r\nexport default MaterialIssueSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}