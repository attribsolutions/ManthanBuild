{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { convertDatefunc, convertTimefunc } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { BOM_Delete_API, BOM_ListPage_API, BOM_Post_API, BOM_Update_API, editBOMListID_forBOMPage_ApiCall, edit_BOMListID, GetItemUnits_For_Dropdown } from \"../../../helpers/backend_helper\";\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { deleteBOMIdSuccess, editBOMListSuccess, getBOMListPageSuccess, GetItemUnitsDrodownAPISuccess, postBOMSuccess, updateBOMListSuccess } from \"./action\";\nimport { DELETE_BOM_LIST_PAGE, EDIT_BOM_LIST_ID, GET_BOM_LIST_PAGE, GET_ITEM_UNITS_DROPDOWN_API, POST_BOM, UPDATE_BOM_LIST } from \"./actionTypes\"; //post api\n\nfunction* Post_BOM_GenratorFunction(_ref) {\n  let {\n    data\n  } = _ref;\n\n  try {\n    const response = yield call(BOM_Post_API, data);\n    yield put(postBOMSuccess(response));\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // GetItemUnits API\n\n\n_c = Post_BOM_GenratorFunction;\n\nfunction* GetItemUnits_saga(_ref2) {\n  let {\n    data\n  } = _ref2;\n\n  try {\n    const response = yield call(GetItemUnits_For_Dropdown, data);\n    const UnitDataConvert = response.Data.ItemUnitDetails.map(data => ({\n      value: data.id,\n      label: data.UnitName,\n      UnitID: data.UnitID\n    }));\n    yield put(GetItemUnitsDrodownAPISuccess(UnitDataConvert));\n  } catch (error) {\n    console.log(\"GetItemUnits saga page error\", error);\n  }\n} // List Page API\n\n\n_c2 = GetItemUnits_saga;\n\nfunction* get_BOMList_GenFunc(_ref3) {\n  let {\n    filters\n  } = _ref3;\n\n  try {\n    const response = yield call(BOM_ListPage_API, filters);\n    let data = response.Data.map(i => {\n      i.id = `${i.id}/${i.Company}`;\n      var date = convertDatefunc(i.BomDate);\n      var time = convertTimefunc(i.CreatedOn);\n      i.BomDate = `${date} ${time}`;\n      return i;\n    });\n    yield put(getBOMListPageSuccess(data));\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error  Get BOMList\"\n    }));\n  }\n} // edit List page\n\n\nfunction* editBOMListGenFunc(_ref4) {\n  let {\n    id1,\n    pageMode\n  } = _ref4;\n\n  try {\n    let response = yield call(edit_BOMListID, id1);\n    response.pageMode = pageMode;\n    response.Data = response.Data[0];\n    if (response.StatusCode === 200) yield put(editBOMListSuccess(response));else yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: JSON.stringify(response.Message)\n    }));\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error BOM Edit Method \"\n    }));\n  }\n}\n\nfunction* UpdateBOM_ID_GenFunc(_ref5) {\n  let {\n    data,\n    id1\n  } = _ref5;\n\n  try {\n    const response = yield call(BOM_Update_API, data, id1);\n    yield put(updateBOMListSuccess(response));\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error UpdateOrder\"\n    }));\n  }\n}\n\n_c3 = UpdateBOM_ID_GenFunc;\n\nfunction* DeleteBOM_GenFunc(_ref6) {\n  let {\n    id\n  } = _ref6;\n\n  try {\n    const response = yield call(BOM_Delete_API, id);\n    if (response.StatusCode === 200) yield put(deleteBOMIdSuccess(response));else yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: JSON.stringify(response.Message)\n    }));\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error DeleteOrder\"\n    }));\n  }\n}\n\n_c4 = DeleteBOM_GenFunc;\n\nfunction* BOMSaga() {\n  yield takeEvery(POST_BOM, Post_BOM_GenratorFunction);\n  yield takeEvery(GET_ITEM_UNITS_DROPDOWN_API, GetItemUnits_saga);\n  yield takeEvery(GET_BOM_LIST_PAGE, get_BOMList_GenFunc);\n  yield takeEvery(EDIT_BOM_LIST_ID, editBOMListGenFunc);\n  yield takeEvery(UPDATE_BOM_LIST, UpdateBOM_ID_GenFunc);\n  yield takeEvery(DELETE_BOM_LIST_PAGE, DeleteBOM_GenFunc);\n}\n\n_c5 = BOMSaga;\nexport default BOMSaga;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Post_BOM_GenratorFunction\");\n$RefreshReg$(_c2, \"GetItemUnits_saga\");\n$RefreshReg$(_c3, \"UpdateBOM_ID_GenFunc\");\n$RefreshReg$(_c4, \"DeleteBOM_GenFunc\");\n$RefreshReg$(_c5, \"BOMSaga\");","map":{"version":3,"names":["call","put","takeEvery","convertDatefunc","convertTimefunc","BOM_Delete_API","BOM_ListPage_API","BOM_Post_API","BOM_Update_API","editBOMListID_forBOMPage_ApiCall","edit_BOMListID","GetItemUnits_For_Dropdown","AlertState","SpinnerState","deleteBOMIdSuccess","editBOMListSuccess","getBOMListPageSuccess","GetItemUnitsDrodownAPISuccess","postBOMSuccess","updateBOMListSuccess","DELETE_BOM_LIST_PAGE","EDIT_BOM_LIST_ID","GET_BOM_LIST_PAGE","GET_ITEM_UNITS_DROPDOWN_API","POST_BOM","UPDATE_BOM_LIST","Post_BOM_GenratorFunction","data","response","error","Type","Status","Message","GetItemUnits_saga","UnitDataConvert","Data","ItemUnitDetails","map","value","id","label","UnitName","UnitID","console","log","get_BOMList_GenFunc","filters","i","Company","date","BomDate","time","CreatedOn","editBOMListGenFunc","id1","pageMode","StatusCode","JSON","stringify","UpdateBOM_ID_GenFunc","DeleteBOM_GenFunc","BOMSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Purchase/BOMRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { convertDatefunc, convertTimefunc } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport { BOM_Delete_API, BOM_ListPage_API, BOM_Post_API, BOM_Update_API, editBOMListID_forBOMPage_ApiCall, edit_BOMListID, GetItemUnits_For_Dropdown } from \"../../../helpers/backend_helper\";\r\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport { deleteBOMIdSuccess, editBOMListSuccess, getBOMListPageSuccess, GetItemUnitsDrodownAPISuccess, postBOMSuccess, updateBOMListSuccess } from \"./action\";\r\nimport { DELETE_BOM_LIST_PAGE, EDIT_BOM_LIST_ID, GET_BOM_LIST_PAGE, GET_ITEM_UNITS_DROPDOWN_API, POST_BOM, UPDATE_BOM_LIST } from \"./actionTypes\";\r\n\r\n//post api\r\nfunction* Post_BOM_GenratorFunction({ data }) {\r\n\r\n  try {\r\n\r\n    const response = yield call(BOM_Post_API, data);\r\n   \r\n    yield put(postBOMSuccess(response));\r\n  } catch (error) {\r\n   \r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// GetItemUnits API\r\nfunction* GetItemUnits_saga({ data }) {\r\n  try {\r\n    const response = yield call(GetItemUnits_For_Dropdown, data);\r\n    const UnitDataConvert = response.Data.ItemUnitDetails.map((data) => ({\r\n      value: data.id,\r\n      label: data.UnitName,\r\n      UnitID: data.UnitID,\r\n    }))\r\n    yield put(GetItemUnitsDrodownAPISuccess(UnitDataConvert));\r\n  } catch (error) {\r\n    console.log(\"GetItemUnits saga page error\", error);\r\n  }\r\n}\r\n\r\n// List Page API\r\nfunction* get_BOMList_GenFunc({ filters }) {\r\n\r\n\r\n\r\n  try {\r\n\r\n    const response = yield call(BOM_ListPage_API, filters);\r\n    let data = response.Data.map((i) => {\r\n      i.id = `${i.id}/${i.Company}`;\r\n      var date = convertDatefunc(i.BomDate)\r\n      var time = convertTimefunc(i.CreatedOn)\r\n      i.BomDate = (`${date} ${time}`)\r\n      return i\r\n    })\r\n   \r\n    yield put(getBOMListPageSuccess(data))\r\n   \r\n  } catch (error) {\r\n   \r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error  Get BOMList\",\r\n    }));\r\n  }\r\n}\r\n\r\n// edit List page\r\nfunction* editBOMListGenFunc({ id1, pageMode }) {\r\n\r\n\r\n  try {\r\n    let response = yield call(edit_BOMListID, id1);\r\n    response.pageMode = pageMode\r\n    response.Data = response.Data[0];\r\n   \r\n    if (response.StatusCode === 200) yield put(editBOMListSuccess(response))\r\n    else yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: JSON.stringify(response.Message),\r\n    }));\r\n  } catch (error) {\r\n   \r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error BOM Edit Method \",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* UpdateBOM_ID_GenFunc({ data, id1 }) {\r\n\r\n  try {\r\n  \r\n    const response = yield call(BOM_Update_API, data, id1);\r\n   \r\n    yield put(updateBOMListSuccess(response))\r\n  }\r\n  catch (error) {\r\n   \r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error UpdateOrder\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* DeleteBOM_GenFunc({ id }) {\r\n\r\n  try {\r\n    const response = yield call(BOM_Delete_API, id);\r\n   \r\n    if (response.StatusCode === 200) yield put(deleteBOMIdSuccess(response))\r\n    else yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: JSON.stringify(response.Message),\r\n    }));\r\n  } catch (error) {\r\n   \r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error DeleteOrder\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* BOMSaga() {\r\n  yield takeEvery(POST_BOM, Post_BOM_GenratorFunction)\r\n  yield takeEvery(GET_ITEM_UNITS_DROPDOWN_API, GetItemUnits_saga)\r\n  yield takeEvery(GET_BOM_LIST_PAGE, get_BOMList_GenFunc)\r\n  yield takeEvery(EDIT_BOM_LIST_ID, editBOMListGenFunc)\r\n  yield takeEvery(UPDATE_BOM_LIST, UpdateBOM_ID_GenFunc)\r\n  yield takeEvery(DELETE_BOM_LIST_PAGE, DeleteBOM_GenFunc)\r\n}\r\n\r\nexport default BOMSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}