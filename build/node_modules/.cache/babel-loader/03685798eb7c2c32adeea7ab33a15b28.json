{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Login Redux States\n\nimport { GET_SUPER_ADMIN_API, GET_USER_DETAILS_AFTER_LOGIN, LOGIN_USER, LOGOUT_USER, ROLE_ACCESS_API_CALL } from \"./actionTypes\";\nimport { apiError, divisionDropdownSelectSuccess, getUserDetailsActionSuccess, postSuperAdminSuccess, RoleAccessUpdateSuccess, roleAceessActionSuccess } from \"./actions\";\nimport { divisionDropdown_Forlogin_ChangeDivisionPage_ApiCall, getUserDetails_afterLogin_ApiCall, post_SuperAdmin, Python_FoodERP_postJwtLogin, RoleAccessApi_url, showPagesListOnPageAccess_DropDown_List } from \"../../../helpers/backend_helper\";\nimport { AlertState } from \"../../actions\";\nimport { history } from \"../../../components/Common/CommonFunction\";\nimport { CustomAlert } from \"../../../CustomAlert/ConfirmDialog\";\n\nfunction* loginUser(_ref) {\n  let {\n    payload: {\n      user,\n      history\n    }\n  } = _ref;\n\n  try {\n    const response = yield call(Python_FoodERP_postJwtLogin, {\n      LoginName: user.UserName,\n      password: user.Password\n    });\n\n    try {\n      if (response.StatusCode === 200) {\n        localStorage.setItem(\"token\", response.token);\n        localStorage.setItem(\"userId\", response.UserID);\n        history.push(\"/division\");\n      } else {\n        yield put(apiError(\"Incorrect UserName And Password\"));\n      }\n    } catch (e) {\n      yield put(apiError(\"Incorrect UserName And Password\"));\n    }\n  } catch (error) {\n    yield put(apiError(\"Incorrect UserName And Password\"));\n  }\n}\n\nfunction* afterLoginUserDetails_genFun(_ref2) {\n  let {\n    id\n  } = _ref2;\n\n  try {\n    const response = yield call(getUserDetails_afterLogin_ApiCall, {\n      UserId: id\n    });\n    yield put(getUserDetailsActionSuccess(response.Data));\n    localStorage.setItem(\"UserName\", response.Data.UserName);\n    localStorage.setItem(\"Company\", response.Data.CompanyID);\n    localStorage.setItem(\"CompanyName\", response.Data.CompanyName);\n    localStorage.setItem(\"CompanyGroup\", response.Data.CompanyGroup);\n\n    if (response.Data.IsSCMCompany) {\n      localStorage.setItem(\"IsSCMCompany\", 1);\n    } else {\n      localStorage.setItem(\"IsSCMCompany\", 0);\n    }\n\n    var employee = response.Data.EmployeeID;\n    const response2 = yield call(divisionDropdown_Forlogin_ChangeDivisionPage_ApiCall, employee);\n    yield put(divisionDropdownSelectSuccess(response2.Data));\n  } catch (e) {}\n}\n\nfunction* logoutUser(_ref3) {\n  let {\n    payload: {\n      history\n    }\n  } = _ref3;\n\n  try {\n    localStorage.removeItem(\"authUser\");\n    history.push(\"/login\");\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\nfunction* RoleAccessGenratorFunction(_ref4) {\n  let {\n    party,\n    employee,\n    company\n  } = _ref4;\n\n  try {\n    const PageAccessApi = yield call(showPagesListOnPageAccess_DropDown_List);\n    const RoleResponse = yield call(RoleAccessApi_url, party, employee, company);\n\n    if (RoleResponse.Data.length > 0 && PageAccessApi.Data.length > 0) {\n      let arrayMain = [];\n      let objMain = {};\n      let arrayChild = [];\n      let objChild = {};\n      let all_DataInSinlgeArray = [];\n      RoleResponse.Data.forEach(parent => {\n        objMain = parent;\n        parent.ModuleData.forEach(child => {\n          objChild = child;\n          PageAccessApi.Data.forEach(page => {\n            objChild[`RoleAccess_${page.Name}`] = false;\n          });\n          child.RolePageAccess.forEach(role => {\n            child[`RoleAccess_${role.Name}`] = true;\n          });\n          arrayChild.push(objChild);\n          delete objMain.ModuleData;\n          objMain[\"ModuleData\"] = arrayChild;\n          objChild = {};\n        });\n        arrayMain.push(objMain);\n        arrayChild = [];\n        objMain = {};\n      });\n      arrayMain.forEach(i => {\n        i.ModuleData.forEach(index => {\n          index.ModuleName = i.ModuleName;\n          all_DataInSinlgeArray.push(index);\n        });\n      });\n      yield put(roleAceessActionSuccess(arrayMain));\n      yield put(RoleAccessUpdateSuccess(all_DataInSinlgeArray));\n    }\n  } catch (error) {\n    const aa = yield CustomAlert({\n      Type: 2,\n      Message: `RoleAccess get Api Error `\n    });\n    history.go(0);\n  }\n}\n\n_c = RoleAccessGenratorFunction;\n\nfunction* Post_SuperAdmin_API_GenratorFunction() {\n  try {\n    const response = yield call(post_SuperAdmin);\n    yield put(postSuperAdminSuccess(response.Data));\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\n_c2 = Post_SuperAdmin_API_GenratorFunction;\n\nfunction* authSaga() {\n  yield takeEvery(LOGIN_USER, loginUser);\n  yield takeEvery(GET_USER_DETAILS_AFTER_LOGIN, afterLoginUserDetails_genFun);\n  yield takeEvery(ROLE_ACCESS_API_CALL, RoleAccessGenratorFunction);\n  yield takeEvery(LOGOUT_USER, logoutUser);\n  yield takeEvery(GET_SUPER_ADMIN_API, Post_SuperAdmin_API_GenratorFunction);\n}\n\nexport default authSaga;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RoleAccessGenratorFunction\");\n$RefreshReg$(_c2, \"Post_SuperAdmin_API_GenratorFunction\");","map":{"version":3,"names":["call","put","takeEvery","GET_SUPER_ADMIN_API","GET_USER_DETAILS_AFTER_LOGIN","LOGIN_USER","LOGOUT_USER","ROLE_ACCESS_API_CALL","apiError","divisionDropdownSelectSuccess","getUserDetailsActionSuccess","postSuperAdminSuccess","RoleAccessUpdateSuccess","roleAceessActionSuccess","divisionDropdown_Forlogin_ChangeDivisionPage_ApiCall","getUserDetails_afterLogin_ApiCall","post_SuperAdmin","Python_FoodERP_postJwtLogin","RoleAccessApi_url","showPagesListOnPageAccess_DropDown_List","AlertState","history","CustomAlert","loginUser","payload","user","response","LoginName","UserName","password","Password","StatusCode","localStorage","setItem","token","UserID","push","e","error","afterLoginUserDetails_genFun","id","UserId","Data","CompanyID","CompanyName","CompanyGroup","IsSCMCompany","employee","EmployeeID","response2","logoutUser","removeItem","RoleAccessGenratorFunction","party","company","PageAccessApi","RoleResponse","length","arrayMain","objMain","arrayChild","objChild","all_DataInSinlgeArray","forEach","parent","ModuleData","child","page","Name","RolePageAccess","role","i","index","ModuleName","aa","Type","Message","go","Post_SuperAdmin_API_GenratorFunction","Status","authSaga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/auth/login/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\r\n\r\n// Login Redux States\r\nimport {\r\n  GET_SUPER_ADMIN_API,\r\n  GET_USER_DETAILS_AFTER_LOGIN,\r\n  LOGIN_USER, LOGOUT_USER,\r\n  ROLE_ACCESS_API_CALL\r\n} from \"./actionTypes\"\r\nimport {\r\n  apiError, divisionDropdownSelectSuccess, getUserDetailsActionSuccess,\r\n  postSuperAdminSuccess,\r\n  RoleAccessUpdateSuccess,\r\n  roleAceessActionSuccess\r\n} from \"./actions\"\r\n\r\nimport {\r\n  divisionDropdown_Forlogin_ChangeDivisionPage_ApiCall,\r\n  getUserDetails_afterLogin_ApiCall,\r\n  post_SuperAdmin,\r\n  Python_FoodERP_postJwtLogin, RoleAccessApi_url, showPagesListOnPageAccess_DropDown_List,\r\n} from \"../../../helpers/backend_helper\"\r\nimport { AlertState } from \"../../actions\"\r\nimport { history } from \"../../../components/Common/CommonFunction\"\r\nimport { CustomAlert } from \"../../../CustomAlert/ConfirmDialog\"\r\n\r\n\r\nfunction* loginUser({ payload: { user, history } }) {\r\n  try {\r\n    const response =\r\n      yield call(Python_FoodERP_postJwtLogin, {\r\n        LoginName: user.UserName,\r\n        password: user.Password\r\n      })\r\n    try {\r\n      if (response.StatusCode === 200) {\r\n\r\n        localStorage.setItem(\"token\", (response.token))\r\n        localStorage.setItem(\"userId\", (response.UserID))\r\n\r\n        history.push(\"/division\")\r\n      }\r\n      else {\r\n        yield put(apiError(\"Incorrect UserName And Password\"))\r\n      }\r\n\r\n    } catch (e) {\r\n      yield put(apiError(\"Incorrect UserName And Password\"))\r\n    }\r\n\r\n  } catch (error) {\r\n    yield put(apiError(\"Incorrect UserName And Password\"))\r\n  }\r\n}\r\nfunction* afterLoginUserDetails_genFun({ id }) {\r\n\r\n  try {\r\n\r\n    const response = yield call(getUserDetails_afterLogin_ApiCall, {\r\n      UserId: id,\r\n    })\r\n    yield put(getUserDetailsActionSuccess(response.Data))\r\n    localStorage.setItem(\"UserName\", (response.Data.UserName))\r\n    localStorage.setItem(\"Company\", response.Data.CompanyID)\r\n    localStorage.setItem(\"CompanyName\", response.Data.CompanyName)\r\n    localStorage.setItem(\"CompanyGroup\", response.Data.CompanyGroup)\r\n    if (response.Data.IsSCMCompany) {\r\n      localStorage.setItem(\"IsSCMCompany\", 1)\r\n    }\r\n    else {\r\n      localStorage.setItem(\"IsSCMCompany\", 0)\r\n    }\r\n    var employee = response.Data.EmployeeID;\r\n\r\n    const response2 = yield call(divisionDropdown_Forlogin_ChangeDivisionPage_ApiCall, employee,)\r\n    yield put(divisionDropdownSelectSuccess(response2.Data))\r\n\r\n  } catch (e) {\r\n\r\n  }\r\n}\r\n\r\nfunction* logoutUser({ payload: { history } }) {\r\n  try {\r\n    localStorage.removeItem(\"authUser\")\r\n    history.push(\"/login\")\r\n  } catch (error) {\r\n    yield put(apiError(error))\r\n  }\r\n}\r\nfunction* RoleAccessGenratorFunction({ party, employee, company }) {\r\n\r\n  try {\r\n    const PageAccessApi = yield call(showPagesListOnPageAccess_DropDown_List)\r\n\r\n    const RoleResponse = yield call(RoleAccessApi_url, party, employee, company);\r\n\r\n    if ((RoleResponse.Data.length > 0) && (PageAccessApi.Data.length > 0)) {\r\n\r\n      let arrayMain = []\r\n      let objMain = {}\r\n      let arrayChild = []\r\n      let objChild = {}\r\n      let all_DataInSinlgeArray = []\r\n\r\n      RoleResponse.Data.forEach((parent) => {\r\n        objMain = parent;\r\n\r\n        parent.ModuleData.forEach((child) => {\r\n\r\n          objChild = child;\r\n\r\n          PageAccessApi.Data.forEach((page) => {\r\n            objChild[`RoleAccess_${page.Name}`] = false;\r\n          })\r\n\r\n          child.RolePageAccess.forEach((role) => {\r\n            child[`RoleAccess_${role.Name}`] = true;\r\n          })\r\n\r\n          arrayChild.push(objChild)\r\n          delete objMain.ModuleData\r\n          objMain[\"ModuleData\"] = arrayChild\r\n          objChild = {};\r\n\r\n        });\r\n        arrayMain.push(objMain)\r\n        arrayChild = []\r\n        objMain = {}\r\n\r\n      })\r\n\r\n      arrayMain.forEach((i) => {\r\n        i.ModuleData.forEach((index) => {\r\n          index.ModuleName = i.ModuleName;\r\n          all_DataInSinlgeArray.push(index)\r\n        })\r\n      })\r\n\r\n\r\n      yield put(roleAceessActionSuccess(arrayMain))\r\n      yield put(RoleAccessUpdateSuccess(all_DataInSinlgeArray))\r\n    }\r\n\r\n  } catch (error) {\r\n\r\n    const aa = yield CustomAlert({\r\n      Type: 2,\r\n      Message: `RoleAccess get Api Error `\r\n    })\r\n    history.go(0)\r\n\r\n  }\r\n}\r\n\r\nfunction* Post_SuperAdmin_API_GenratorFunction() {\r\n  try {\r\n    const response = yield call(post_SuperAdmin);\r\n    yield put(postSuperAdminSuccess(response.Data));\r\n  } catch (error) {\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\nfunction* authSaga() {\r\n  yield takeEvery(LOGIN_USER, loginUser)\r\n  yield takeEvery(GET_USER_DETAILS_AFTER_LOGIN, afterLoginUserDetails_genFun)\r\n  yield takeEvery(ROLE_ACCESS_API_CALL, RoleAccessGenratorFunction)\r\n  yield takeEvery(LOGOUT_USER, logoutUser)\r\n  yield takeEvery(GET_SUPER_ADMIN_API, Post_SuperAdmin_API_GenratorFunction)\r\n}\r\n\r\nexport default authSaga\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}