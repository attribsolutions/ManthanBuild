{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\RoleAccessPages\\\\RoleAccessListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Modal, Button } from \"reactstrap\";\nimport MetaTags from 'react-meta-tags'; // datatable related plugins\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport \"../../../assets/scss/CustomTable2/datatables.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DeleteRoleAcess, DeleteRoleAcessSuccess, getRoleAccessListPage, PostMethod_ForCopyRoleAccessFor_Role_Success } from \"../../../store/actions\";\nimport { AlertState } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport RoleAccessCopyFunctionality from \"./RoleAccessCopyFunctionality\";\nimport { countlabelFunc } from \"../../../components/Common/ComponentRelatedCommonFile/CommonMasterListPage\";\nimport { mySearchProps } from \"../../../components/Common/ComponentRelatedCommonFile/SearchBox/MySearch\";\nimport * as pageId from \"../../../routes/allPageID\";\nimport * as url from \"../../../routes/route_url\";\nimport { breadcrumbReturn, loginCompanyID, loginEmployeeID, loginPartyID, loginRoleID, loginUserID } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { CustomAlert } from \"../../../CustomAlert/ConfirmDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoleAccessListPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userAccState, setUserAccState] = useState('');\n  const [modal_center, setmodal_center] = useState(false);\n  const [copy_user_RowData, setCopy_user_RowData] = useState({});\n  const {\n    TableListData,\n    userAccess,\n    PostMessage_ForCopyRoleAccess,\n    deleteMsg\n  } = useSelector(state => ({\n    TableListData: state.RoleAccessReducer.RoleAccessListPage,\n    userAccess: state.Login.RoleAccessUpdateData,\n    PostMessage_ForCopyRoleAccess: state.RoleAccessReducer.PostMessage_ForCopyRoleAccess,\n    deleteMsg: state.RoleAccessReducer.deleteMsg\n  }));\n  useEffect(() => {\n    const locationPath = history.location.pathname;\n    let userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserAccState(userAcc);\n      breadcrumbReturn({\n        dispatch,\n        userAcc,\n        newBtnPath: url.ROLEACCESS\n      });\n    }\n  }, [userAccess]); //  This UseEffect => Featch Modules List data  First Rendering\n\n  useEffect(() => {\n    dispatch(getRoleAccessListPage(getListbodyFunc()));\n  }, []);\n\n  function getListbodyFunc() {\n    return JSON.stringify({\n      UserID: loginUserID(),\n      RoleID: loginRoleID(),\n      CompanyID: loginCompanyID()\n    });\n  }\n\n  const EditPageHandler = rowData => {\n    if (rowData.Division_id === null) {\n      rowData.Division_id = 0;\n    }\n\n    let RelatedPageID = userAccState.RelatedPageID;\n    const found = userAccess.find(element => {\n      return element.id === RelatedPageID;\n    });\n\n    if (!(found === undefined)) {\n      history.push({\n        pathname: `/${found.ActualPagePath}`,\n        state: rowData\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (PostMessage_ForCopyRoleAccess.Status === true && PostMessage_ForCopyRoleAccess.StatusCode === 200) {\n      dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({\n        Status: false\n      }));\n      dispatch(getRoleAccessListPage(getListbodyFunc()));\n      tog_center();\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: PostMessage_ForCopyRoleAccess.Message\n      }));\n    } else if (PostMessage_ForCopyRoleAccess.Status === true) {\n      dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostMessage_ForCopyRoleAccess.Message)\n      }));\n    }\n  }, [PostMessage_ForCopyRoleAccess]);\n  useEffect(() => {\n    if (deleteMsg.Status === true && deleteMsg.StatusCode === 200) {\n      dispatch(DeleteRoleAcessSuccess({\n        Status: false\n      }));\n      dispatch(getRoleAccessListPage(getListbodyFunc()));\n      CustomAlert({\n        Type: 1,\n        Message: JSON.stringify(deleteMsg.Message)\n      });\n    }\n  }, [deleteMsg]); //select id for copy row\n\n  const CopyHandeler = event => {\n    setCopy_user_RowData(event);\n    tog_center();\n  }; //select id for delete row\n\n\n  const deleteHandeler = async (id, name) => {\n    debugger;\n    const ispermission = await CustomAlert({\n      Type: 7,\n      Message: `Are you sure you want to delete this Role : \"${id.RoleName}\"`\n    });\n\n    if (ispermission) {\n      let role = id.Role_id;\n      let division = id.Division_id === null ? 0 : id.Division_id;\n      let company = id.Company_id;\n      dispatch(DeleteRoleAcess(role, division, company));\n    }\n  }; // Modules list component table columns \n\n\n  const columns = [{\n    dataField: 'RoleName',\n    text: 'Role Name',\n    sort: true\n  }, {\n    dataField: 'DivisionName',\n    text: 'Division Name',\n    sort: true\n  }, {\n    dataField: 'CompanyName',\n    text: 'Company Name',\n    sort: true\n  }, {\n    text: \"Action\",\n    hidden: !userAccState.RoleAccess_IsEdit && !userAccState.RoleAccess_IsView && !userAccState.RoleAccess_IsDelete ? true : false,\n    formatter: (cellContent, RoleAccess) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-3\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Copy RoleAccess\",\n        onClick: () => {\n          CopyHandeler(RoleAccess);\n        },\n        children: \"copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), userAccState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Edit RoleAccess\",\n        onClick: () => {\n          EditPageHandler(RoleAccess);\n        },\n        className: \"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-pencil font-size-18\",\n          id: \"edittooltip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this) : null, !userAccState.RoleAccess_IsEdit && userAccState.RoleAccess_IsView ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"View RoleAccess\",\n        onClick: () => {\n          EditPageHandler(RoleAccess);\n        },\n        className: \"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bxs-show font-size-18 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }, this) : null, userAccState.RoleAccess_IsDelete ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Delete RoleAccess\",\n        onClick: () => {\n          deleteHandeler(RoleAccess);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-delete font-size-18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this)\n  }];\n  const defaultSorted = [{\n    dataField: 'RoleName',\n    order: 'asc'\n  }];\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: TableListData.length,\n    // replace later with size(customers),\n    custom: true\n  }; // tag_center -- Control the Edit Modal show and close\n\n  function tog_center() {\n    setmodal_center(!modal_center);\n  }\n\n  if (!(userAccState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"title\", {\n            children: [userAccess.PageHeading, \"| FoodERP-React FrontEnd\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PaginationProvider, {\n          pagination: paginationFactory(pageOptions),\n          keyField: \"id\",\n          columns: columns,\n          data: TableListData,\n          children: _ref => {\n            let {\n              paginationProps,\n              paginationTableProps\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"id\",\n              columns: columns,\n              data: TableListData,\n              search: true,\n              children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n                    keyField: \"id\",\n                    responsive: true,\n                    bordered: true,\n                    striped: false,\n                    classes: \"table align-middle table-nowrap table-hover\",\n                    noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-danger text-center \",\n                      children: \"Items Not available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 67\n                    }, this),\n                    headerWrapperClasses: \"thead-light\",\n                    ...toolkitProps.baseProps,\n                    ...paginationTableProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 45\n                  }, this), countlabelFunc(toolkitProps, paginationProps, dispatch, \"RoleAccess\"), mySearchProps(toolkitProps.searchProps)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-md-center mt-30\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pagination pagination-rounded justify-content-end mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal_center,\n          toggle: () => {\n            tog_center();\n          },\n          size: \"xl\",\n          children: /*#__PURE__*/_jsxDEV(RoleAccessCopyFunctionality, {\n            state: copy_user_RowData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(RoleAccessListPage, \"SdCrvZBl09zAKi6NyvRWDQO1uzA=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = RoleAccessListPage;\nexport default RoleAccessListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleAccessListPage\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Modal","Button","MetaTags","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","useDispatch","useSelector","DeleteRoleAcess","DeleteRoleAcessSuccess","getRoleAccessListPage","PostMethod_ForCopyRoleAccessFor_Role_Success","AlertState","useHistory","RoleAccessCopyFunctionality","countlabelFunc","mySearchProps","pageId","url","breadcrumbReturn","loginCompanyID","loginEmployeeID","loginPartyID","loginRoleID","loginUserID","CustomAlert","RoleAccessListPage","dispatch","history","userAccState","setUserAccState","modal_center","setmodal_center","copy_user_RowData","setCopy_user_RowData","TableListData","userAccess","PostMessage_ForCopyRoleAccess","deleteMsg","state","RoleAccessReducer","Login","RoleAccessUpdateData","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","newBtnPath","ROLEACCESS","getListbodyFunc","JSON","stringify","UserID","RoleID","CompanyID","EditPageHandler","rowData","Division_id","RelatedPageID","found","element","id","push","Status","StatusCode","tog_center","Type","Message","CopyHandeler","event","deleteHandeler","name","ispermission","RoleName","role","Role_id","division","company","Company_id","columns","dataField","text","sort","hidden","RoleAccess_IsEdit","RoleAccess_IsView","RoleAccess_IsDelete","formatter","cellContent","RoleAccess","display","justifyContent","defaultSorted","order","pageOptions","sizePerPage","totalSize","length","custom","PageHeading","paginationProps","paginationTableProps","toolkitProps","baseProps","searchProps"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/RoleAccessPages/RoleAccessListPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Row, Col, Modal, Button } from \"reactstrap\"\r\nimport MetaTags from 'react-meta-tags'\r\n// datatable related plugins\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n    PaginationProvider, PaginationListStandalone,\r\n} from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport \"../../../assets/scss/CustomTable2/datatables.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    DeleteRoleAcess,\r\n    DeleteRoleAcessSuccess,\r\n    getRoleAccessListPage,\r\n    PostMethod_ForCopyRoleAccessFor_Role_Success,\r\n} from \"../../../store/actions\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleAccessCopyFunctionality from \"./RoleAccessCopyFunctionality\";\r\nimport { countlabelFunc } from \"../../../components/Common/ComponentRelatedCommonFile/CommonMasterListPage\";\r\nimport { mySearchProps } from \"../../../components/Common/ComponentRelatedCommonFile/SearchBox/MySearch\";\r\nimport * as pageId from \"../../../routes/allPageID\"\r\nimport * as url from \"../../../routes/route_url\"\r\nimport { breadcrumbReturn, loginCompanyID, loginEmployeeID, loginPartyID, loginRoleID, loginUserID } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport { CustomAlert } from \"../../../CustomAlert/ConfirmDialog\";\r\n\r\nconst RoleAccessListPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [userAccState, setUserAccState] = useState('');\r\n    const [modal_center, setmodal_center] = useState(false);\r\n    const [copy_user_RowData, setCopy_user_RowData] = useState({});\r\n\r\n\r\n    const { TableListData, userAccess, PostMessage_ForCopyRoleAccess, deleteMsg } = useSelector((state) => ({\r\n        TableListData: state.RoleAccessReducer.RoleAccessListPage,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        PostMessage_ForCopyRoleAccess: state.RoleAccessReducer.PostMessage_ForCopyRoleAccess,\r\n        deleteMsg: state.RoleAccessReducer.deleteMsg,\r\n\r\n    }));\r\n\r\n\r\n    useEffect(() => {\r\n        const locationPath = history.location.pathname\r\n        let userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (!(userAcc === undefined)) {\r\n            setUserAccState(userAcc)\r\n            breadcrumbReturn({ dispatch, userAcc, newBtnPath: url.ROLEACCESS });\r\n        }\r\n    }, [userAccess])\r\n\r\n\r\n    //  This UseEffect => Featch Modules List data  First Rendering\r\n    useEffect(() => {\r\n        dispatch(getRoleAccessListPage(getListbodyFunc()));\r\n    }, []);\r\n\r\n    function getListbodyFunc() {\r\n        return JSON.stringify({\r\n            UserID: loginUserID(),\r\n            RoleID: loginRoleID(),\r\n            CompanyID: loginCompanyID()\r\n        })\r\n    }\r\n\r\n    const EditPageHandler = (rowData) => {\r\n\r\n        if (rowData.Division_id === null) {\r\n            rowData.Division_id = 0\r\n        }\r\n       \r\n        let RelatedPageID = userAccState.RelatedPageID\r\n\r\n        const found = userAccess.find((element) => {\r\n            return element.id === RelatedPageID\r\n        })\r\n\r\n        if (!(found === undefined)) {\r\n            history.push({\r\n                pathname: `/${found.ActualPagePath}`,\r\n                state: rowData,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostMessage_ForCopyRoleAccess.Status === true) && (PostMessage_ForCopyRoleAccess.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n            dispatch(getRoleAccessListPage(getListbodyFunc()));\r\n            tog_center()\r\n            dispatch(AlertState({\r\n                Type: 1,\r\n                Status: true,\r\n                Message: PostMessage_ForCopyRoleAccess.Message,\r\n            }))\r\n        }\r\n        else if (PostMessage_ForCopyRoleAccess.Status === true) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostMessage_ForCopyRoleAccess.Message),\r\n            }));\r\n        }\r\n    }, [PostMessage_ForCopyRoleAccess])\r\n\r\n    useEffect(() => {\r\n\r\n        if ((deleteMsg.Status === true) && (deleteMsg.StatusCode === 200)) {\r\n            dispatch(DeleteRoleAcessSuccess({ Status: false }));\r\n            dispatch(getRoleAccessListPage(getListbodyFunc()));\r\n            CustomAlert({\r\n                Type: 1,\r\n                Message: JSON.stringify(deleteMsg.Message),\r\n            })\r\n        }\r\n    }, [deleteMsg]);\r\n\r\n    //select id for copy row\r\n    const CopyHandeler = (event) => {\r\n        setCopy_user_RowData(event)\r\n        tog_center()\r\n    };\r\n\r\n\r\n\r\n    //select id for delete row\r\n    const deleteHandeler = async (id, name) => {\r\n        debugger\r\n        const ispermission = await CustomAlert({\r\n            Type: 7,\r\n            Message: `Are you sure you want to delete this Role : \"${id.RoleName}\"`,\r\n        })\r\n        if (ispermission) {\r\n            let role = id.Role_id\r\n            let division = id.Division_id===null?0:id.Division_id\r\n            let company = id.Company_id\r\n            dispatch(DeleteRoleAcess(role, division, company))\r\n        }\r\n\r\n    };\r\n\r\n    // Modules list component table columns \r\n    const columns = [\r\n        {\r\n            dataField: 'RoleName',\r\n            text: 'Role Name',\r\n            sort: true\r\n        }, {\r\n            dataField: 'DivisionName',\r\n            text: 'Division Name',\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'CompanyName',\r\n            text: 'Company Name',\r\n            sort: true\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            hidden: (\r\n                !(userAccState.RoleAccess_IsEdit)\r\n                && !(userAccState.RoleAccess_IsView)\r\n                && !(userAccState.RoleAccess_IsDelete)) ? true : false,\r\n\r\n            formatter: (cellContent, RoleAccess) => (\r\n\r\n                <div className=\"d-flex gap-3\" style={{ display: 'flex', justifyContent: 'center' }} >\r\n\r\n                    <Button\r\n                        className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Copy RoleAccess\"\r\n                        onClick={() => { CopyHandeler(RoleAccess); }}\r\n                    >\r\n                        copy\r\n                    </Button>\r\n\r\n\r\n                    {((userAccState.RoleAccess_IsEdit)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Edit RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\"\r\n                        >\r\n                            <i className=\"mdi mdi-pencil font-size-18\" id=\"edittooltip\"></i>\r\n                        </Button> : null}\r\n\r\n                    {(!(userAccState.RoleAccess_IsEdit) && (userAccState.RoleAccess_IsView)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"View RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n\r\n                        >\r\n                            <i className=\"bx bxs-show font-size-18 \"></i>\r\n                        </Button> : null}\r\n\r\n                    {(userAccState.RoleAccess_IsDelete)\r\n                        ?\r\n                        <Button\r\n                            className=\"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Delete RoleAccess\"\r\n                            onClick={() => { deleteHandeler(RoleAccess); }}\r\n                        >\r\n                            <i className=\"mdi mdi-delete font-size-18\"></i>\r\n                        </Button>\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const defaultSorted = [{\r\n        dataField: 'RoleName',\r\n        order: 'asc'\r\n    }];\r\n\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        totalSize: TableListData.length, // replace later with size(customers),\r\n        custom: true,\r\n    }\r\n\r\n    // tag_center -- Control the Edit Modal show and close\r\n    function tog_center() {\r\n        setmodal_center(!modal_center)\r\n    }\r\n\r\n    if (!(userAccState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\">\r\n                    <MetaTags> <title>{userAccess.PageHeading}| FoodERP-React FrontEnd</title></MetaTags>\r\n                    <PaginationProvider\r\n                        pagination={paginationFactory(pageOptions)}\r\n                        keyField='id'\r\n                        columns={columns}\r\n                        data={TableListData}\r\n                    >\r\n                        {({ paginationProps, paginationTableProps }) => (\r\n                            <ToolkitProvider\r\n                                keyField='id'\r\n                                columns={columns}\r\n                                data={TableListData}\r\n                                search\r\n                            >\r\n                                {toolkitProps => (\r\n                                    <React.Fragment>\r\n                                        <div className=\"table-responsive\">\r\n                                            <BootstrapTable\r\n                                                keyField={\"id\"}\r\n                                                responsive\r\n                                                bordered={true}\r\n                                                striped={false}\r\n                                                classes={\"table align-middle table-nowrap table-hover\"}\r\n                                                noDataIndication={<div className=\"text-danger text-center \">Items Not available</div>}\r\n                                                headerWrapperClasses={\"thead-light\"}\r\n                                                {...toolkitProps.baseProps}\r\n                                                {...paginationTableProps}\r\n                                            />\r\n                                            {countlabelFunc(toolkitProps, paginationProps, dispatch, \"RoleAccess\")}\r\n                                            {mySearchProps(toolkitProps.searchProps)}\r\n                                        </div>\r\n\r\n                                        <Row className=\"align-items-md-center mt-30\">\r\n                                            <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                <PaginationListStandalone\r\n                                                    {...paginationProps}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </React.Fragment>\r\n                                )\r\n                                }\r\n                            </ToolkitProvider>\r\n                        )\r\n                        }\r\n                    </PaginationProvider>\r\n                    <Modal\r\n                        isOpen={modal_center}\r\n                        toggle={() => { tog_center() }}\r\n                        size=\"xl\"\r\n                    >\r\n                        <RoleAccessCopyFunctionality state={copy_user_RowData} />\r\n\r\n                    </Modal>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default RoleAccessListPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}