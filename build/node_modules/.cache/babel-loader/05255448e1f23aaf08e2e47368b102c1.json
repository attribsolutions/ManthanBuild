{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport { GET_PDF_MULTIPLEINVOICE_DATA, GET_PDF_REPORT_DATA } from \"./actionType\"; // import { Data } from \"./DemoData\";\n\nimport { getpdfReportdataError, getpdfReportdataSuccess } from \"./actions\";\nimport { get_Group_List_Api } from \"../../../helpers/backend_helper\";\nimport { CommonConsole } from \"../../../components/Common/CommonFunction\";\nimport { dataGenrator } from \"../../../Reports/Invoice report a5/DemoData\";\n\nfunction* getpdfData_GenFunc(_ref) {\n  let {\n    urlpath,\n    config\n  } = _ref;\n\n  try {\n    const response = yield call(urlpath, config);\n    response[\"ReportType\"] = config.ReportType;\n    response.Data[\"ReportType\"] = config.ReportType;\n    response.Data[\"Period\"] = config;\n\n    if (config.systemSetting || config.subPageMode) {\n      response.Data[\"SettingData\"] = config.systemSetting;\n      response.Data[\"subPageMode\"] = config.subPageMode;\n      response.Data[\"forceA5\"] = config.forceA5;\n    }\n\n    yield put(getpdfReportdataSuccess(response));\n  } catch (error) {\n    yield put(getpdfReportdataError());\n    CommonConsole(error);\n  }\n}\n\nfunction* GetMultipleinvoicereport_GenFunc(_ref2) {\n  let {\n    API,\n    jsonBody,\n    ReportType,\n    Id\n  } = _ref2;\n\n  try {\n    // const response = yield call(MultipleInvoice_API, jsonBody);\n    const response = yield call(get_Group_List_Api, jsonBody); // const response = Data;\n\n    response[\"ReportType\"] = ReportType;\n    response.Data[\"ReportType\"] = ReportType;\n    response[\"Data\"] = dataGenrator(); // yield put((response));\n\n    yield put(getpdfReportdataSuccess(response));\n  } catch (error) {\n    yield put(getpdfReportdataError());\n    CommonConsole(error);\n  }\n}\n\n_c = GetMultipleinvoicereport_GenFunc;\n\nfunction* pdfReport_Saga() {\n  yield takeLatest(GET_PDF_REPORT_DATA, getpdfData_GenFunc);\n  yield takeLatest(GET_PDF_MULTIPLEINVOICE_DATA, GetMultipleinvoicereport_GenFunc);\n}\n\nexport default pdfReport_Saga;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetMultipleinvoicereport_GenFunc\");","map":{"version":3,"names":["call","put","takeEvery","takeLatest","GET_PDF_MULTIPLEINVOICE_DATA","GET_PDF_REPORT_DATA","getpdfReportdataError","getpdfReportdataSuccess","get_Group_List_Api","CommonConsole","dataGenrator","getpdfData_GenFunc","urlpath","config","response","ReportType","Data","systemSetting","subPageMode","forceA5","error","GetMultipleinvoicereport_GenFunc","API","jsonBody","Id","pdfReport_Saga"],"sources":["D:/Rohit/Git projects/Manthan/src/store/Utilites/PdfReport/saga.js"],"sourcesContent":["import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport { GET_PDF_MULTIPLEINVOICE_DATA, GET_PDF_REPORT_DATA } from \"./actionType\";\r\n// import { Data } from \"./DemoData\";\r\n\r\nimport { getpdfReportdataError, getpdfReportdataSuccess, } from \"./actions\";\r\nimport { get_Group_List_Api } from \"../../../helpers/backend_helper\";\r\nimport { CommonConsole } from \"../../../components/Common/CommonFunction\";\r\nimport { dataGenrator } from \"../../../Reports/Invoice report a5/DemoData\";\r\n\r\n\r\nfunction* getpdfData_GenFunc({ urlpath, config }) {\r\n\r\n  try {\r\n    const response = yield call(urlpath, config);\r\n    response[\"ReportType\"] = config.ReportType\r\n    response.Data[\"ReportType\"] = config.ReportType\r\n    response.Data[\"Period\"] = config\r\n\r\n\r\n    if ((config.systemSetting) || (config.subPageMode)) {\r\n      response.Data[\"SettingData\"] = config.systemSetting\r\n      response.Data[\"subPageMode\"] = config.subPageMode;\r\n      response.Data[\"forceA5\"] = config.forceA5;\r\n    }\r\n\r\n    yield put(getpdfReportdataSuccess(response));\r\n\r\n  } catch (error) {\r\n    yield put(getpdfReportdataError())\r\n    CommonConsole(error)\r\n  }\r\n}\r\n\r\nfunction* GetMultipleinvoicereport_GenFunc({ API, jsonBody, ReportType, Id }) {\r\n\r\n  try {\r\n\r\n    // const response = yield call(MultipleInvoice_API, jsonBody);\r\n    const response = yield call(get_Group_List_Api, jsonBody);\r\n    // const response = Data;\r\n    response[\"ReportType\"] = ReportType\r\n    response.Data[\"ReportType\"] = ReportType\r\n    response[\"Data\"] = dataGenrator()\r\n    // yield put((response));\r\n    yield put(getpdfReportdataSuccess(response));\r\n\r\n\r\n  } catch (error) {\r\n    yield put(getpdfReportdataError())\r\n    CommonConsole(error)\r\n  }\r\n}\r\n\r\nfunction* pdfReport_Saga() {\r\n  yield takeLatest(GET_PDF_REPORT_DATA, getpdfData_GenFunc);\r\n  yield takeLatest(GET_PDF_MULTIPLEINVOICE_DATA, GetMultipleinvoicereport_GenFunc);\r\n\r\n}\r\nexport default pdfReport_Saga;\r\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,4BAAT,EAAuCC,mBAAvC,QAAkE,cAAlE,C,CACA;;AAEA,SAASC,qBAAT,EAAgCC,uBAAhC,QAAgE,WAAhE;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,SAASC,YAAT,QAA6B,6CAA7B;;AAGA,UAAUC,kBAAV,OAAkD;EAAA,IAArB;IAAEC,OAAF;IAAWC;EAAX,CAAqB;;EAEhD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACY,OAAD,EAAUC,MAAV,CAA3B;IACAC,QAAQ,CAAC,YAAD,CAAR,GAAyBD,MAAM,CAACE,UAAhC;IACAD,QAAQ,CAACE,IAAT,CAAc,YAAd,IAA8BH,MAAM,CAACE,UAArC;IACAD,QAAQ,CAACE,IAAT,CAAc,QAAd,IAA0BH,MAA1B;;IAGA,IAAKA,MAAM,CAACI,aAAR,IAA2BJ,MAAM,CAACK,WAAtC,EAAoD;MAClDJ,QAAQ,CAACE,IAAT,CAAc,aAAd,IAA+BH,MAAM,CAACI,aAAtC;MACAH,QAAQ,CAACE,IAAT,CAAc,aAAd,IAA+BH,MAAM,CAACK,WAAtC;MACAJ,QAAQ,CAACE,IAAT,CAAc,SAAd,IAA2BH,MAAM,CAACM,OAAlC;IACD;;IAED,MAAMlB,GAAG,CAACM,uBAAuB,CAACO,QAAD,CAAxB,CAAT;EAED,CAfD,CAeE,OAAOM,KAAP,EAAc;IACd,MAAMnB,GAAG,CAACK,qBAAqB,EAAtB,CAAT;IACAG,aAAa,CAACW,KAAD,CAAb;EACD;AACF;;AAED,UAAUC,gCAAV,QAA8E;EAAA,IAAnC;IAAEC,GAAF;IAAOC,QAAP;IAAiBR,UAAjB;IAA6BS;EAA7B,CAAmC;;EAE5E,IAAI;IAEF;IACA,MAAMV,QAAQ,GAAG,MAAMd,IAAI,CAACQ,kBAAD,EAAqBe,QAArB,CAA3B,CAHE,CAIF;;IACAT,QAAQ,CAAC,YAAD,CAAR,GAAyBC,UAAzB;IACAD,QAAQ,CAACE,IAAT,CAAc,YAAd,IAA8BD,UAA9B;IACAD,QAAQ,CAAC,MAAD,CAAR,GAAmBJ,YAAY,EAA/B,CAPE,CAQF;;IACA,MAAMT,GAAG,CAACM,uBAAuB,CAACO,QAAD,CAAxB,CAAT;EAGD,CAZD,CAYE,OAAOM,KAAP,EAAc;IACd,MAAMnB,GAAG,CAACK,qBAAqB,EAAtB,CAAT;IACAG,aAAa,CAACW,KAAD,CAAb;EACD;AACF;;KAlBSC,gC;;AAoBV,UAAUI,cAAV,GAA2B;EACzB,MAAMtB,UAAU,CAACE,mBAAD,EAAsBM,kBAAtB,CAAhB;EACA,MAAMR,UAAU,CAACC,4BAAD,EAA+BiB,gCAA/B,CAAhB;AAED;;AACD,eAAeI,cAAf"},"metadata":{},"sourceType":"module"}