{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Purchase\\\\Challan\\\\Challan.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, FormGroup, Input, Label, Row, Table } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport Flatpickr from \"react-flatpickr\";\nimport { commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { comAddPageFieldFunc, initialFiledFunc, onChangeDate } from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\nimport Select from \"react-select\";\nimport { Change_Button, Go_Button, SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\nimport { updateBOMListSuccess } from \"../../../store/Purchase/BOMRedux/action\";\nimport { breadcrumbReturn, convertDatefunc, createdBy, currentDate, GoBtnDissable, saveDissable, userCompany, userParty } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport * as mode from \"../../../routes/PageMode\";\nimport * as pageId from \"../../../routes/allPageID\";\nimport * as url from \"../../../routes/route_url\"; // import { editInvoiceListSuccess, GoButton_post_For_Invoice, GoButton_post_For_Invoice_Success, postInvoiceMasterSuccess } from \"../../../store/Sales/Invoice/action\";\n\nimport { GetCustomer, GetVender, GetVenderSupplierCustomer } from \"../../../store/CommonAPI/SupplierRedux/actions\"; // import { postInvoiceMaster } from \"../../../store/Sales/Invoice/action\";\n\nimport { Amount, basicAmount, GstAmount } from \"../../Purchase/Order/OrderPageCalulation\";\nimport { challanitemdropdown, GoButtonForchallanAdd, GoButtonForchallanAddSuccess } from \"../../../store/Inventory/ChallanRedux/actions\"; // import \"./css.css\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Challan = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const subPageMode = history.location.pathname;\n  const goBtnId = `ADDGoBtn${subPageMode}`;\n  const saveBtnid = `saveBtn${subPageMode}`;\n  const fileds = {\n    // id: \"\",\n    InvoiceDate: currentDate,\n    Customer: \"\"\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(mode.defaultsave);\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [showAllStockState, setShowAllStockState] = useState(true); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    updateMsg,\n    pageField,\n    userAccess,\n    customer,\n    GoButton = '',\n    vender,\n    vendorSupplierCustomer,\n    gobutton_Add,\n    challanitems\n  } = useSelector(state => ({\n    challanitems: state.ChallanReducer.challanitems,\n    GoButton: state.ChallanReducer.GoButton,\n    vender: state.SupplierReducer.vender,\n    postMsg: state.InvoiceReducer.postMsg,\n    updateMsg: state.BOMReducer.updateMsg,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField,\n    customer: state.SupplierReducer.customer,\n    // GoButton: state.InvoiceReducer.GoButton,\n    vendorSupplierCustomer: state.SupplierReducer.vendorSupplierCustomer\n  }));\n  const {\n    Data = []\n  } = GoButton;\n  console.log(Data);\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\");\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  useEffect(() => {// dispatch(GetVenderSupplierCustomer(subPageMode))\n    // dispatch(GetCustomer())\n    // dispatch(commonPageFieldSuccess(null));\n    // dispatch(commonPageField(pageId.INVOICE_1))\n    // dispatch(GoButton_post_For_Invoice_Success([]))\n  }, []); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n      breadcrumbReturn({\n        dispatch,\n        userAcc\n      });\n    }\n\n    ;\n  }, [userAccess]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          Customer,\n          CustomerName\n        } = hasEditVal;\n        const {\n          values,\n          hasValid\n        } = { ...state\n        };\n        hasValid.Customer.valid = true;\n        values.Customer = {\n          label: CustomerName,\n          value: Customer\n        }; //++++++++++++++++++++++++++**Dynamic go Button API Call method+++++++++++++++++\n\n        const jsonBody = JSON.stringify({\n          FromDate: hasEditVal.InvoiceDate,\n          Customer: hasEditVal.Customer,\n          Party: userParty(),\n          OrderIDs: \"\"\n        }); // dispatch(GoButton_post_For_Invoice(jsonBody));\n        // dispatch(editInvoiceListSuccess({ Status: false }))\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200) {\n      // dispatch(postInvoiceMasterSuccess({ Status: false }))\n      // dispatch(GoButton_post_For_Invoice_Success([]))\n      // dispatch(goButtonForMaterialIssue_Master_ActionSuccess([]))\n      // dispatch(postBOMSuccess({ Status: false }))\n      // setState(() => resetFunction(fileds, state))// Clear form values \n      // saveDissable(false);//save Button Is enable function\n      // dispatch(AlertState({\n      //     Type: 1,\n      //     Status: true,\n      //     Message: \"Item is out of stock\",\n      //     RedirectPath: url.MATERIAL_ISSUE_LIST,\n      // }))\n      if (pageMode === mode.dropdownAdd) {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message,\n          RedirectPath: url.INVOICE_LIST_1\n        }));\n      }\n    } else if (postMsg.Status === true) {\n      // dispatch(postInvoiceMasterSuccess({ Status: false }))\n      // dispatch(GoButton_post_For_Invoice_Success([]))\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMsg.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\n      // setState(() => resetFunction(fileds, state))// Clear form values \n      // saveDissable(false);//save Button Is enable function\n      history.push({\n        pathname: url.MATERIAL_ISSUE_LIST\n      });\n    } else if (updateMsg.Status === true && !modalCss) {\n      // saveDissable(false);//Update Button Is enable function\n      // dispatch(updateBOMListSuccess({ Status: false }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg, modalCss]);\n  useEffect(() => {\n    const jsonBody = JSON.stringify({\n      Company: userCompany()\n    });\n    dispatch(challanitemdropdown(jsonBody));\n    dispatch(GetVender());\n  }, []);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n  useEffect(() => {// showAllStockOnclick(showAllStockState)\n  }, [showAllStockState]);\n  const venderOptions = vender.map(i => ({\n    value: i.id,\n    label: i.Name\n  }));\n  const ItemsOption = challanitems.map(i => ({\n    value: i.id,\n    label: i.Name\n  }));\n  const pagesListColumns = [{\n    //***************ItemName********************************************************************* */\n    text: \"Item Name\",\n    dataField: \"ItemName\",\n    headerFormatter: function (cell) {\n      let index1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let k = arguments.length > 2 ? arguments[2] : undefined;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"width-100\",\n        children: \"Item Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, _this);\n    },\n    formatter: (cellContent, index1) => {\n      debugger;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: `ItemName${index1.id}`,\n            children: cellContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), index1.StockInValid ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: `StockInvalidMsg${index1.id}`,\n            style: {\n              color: \"red\"\n            },\n            children: [\" \", index1.StockInvalidMsg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true);\n    }\n  }, // {//***************Quantity********************************************************************* */\n  //     text: \"Quantity\",\n  //     dataField: \"\",\n  //     headerFormatter: (cell, index1 = [], k) => {\n  //         return (\n  //             <div className=\"width-100\">Quantity</div>)\n  //     },\n  //     formatter: (cellContent, user) => (\n  //         <div >\n  //             <Input type=\"text\"\n  //                 disabled={pageMode === 'edit' ? true : false}\n  //                 id={`OrderQty${user.id}`}\n  //                 style={{ textAlign: \"right\" }}\n  //                 className=\" width-100\"\n  //                 key={user.id}\n  //                 autoComplete=\"off\"\n  //                 defaultValue={user.Quantity}\n  //                 onChange={(event) => orderQtyOnChange(event, user)}\n  //             ></Input>\n  //             <samp className=\"mt-1\">Order Qty:{user.OrderQty} {user.UnitName}</samp>\n  //         </div>\n  //     )\n  // },\n  // {//***************Unit Dropdown********************************************************************* */\n  //     text: \"Unit\",\n  //     dataField: \"id\",\n  //     headerFormatter: (cell, index1 = [], k) => {\n  //         return (\n  //             <div className=\"width-100\" >Unit</div>)\n  //     },\n  //     formatter: (value, row, key) => {\n  //         return (\n  //             <Select\n  //                 classNamePrefix=\"select2-selection\"\n  //                 id={\"ddlUnit\"}\n  //                 isDisabled={pageMode === 'edit' ? true : false}\n  //                 defaultValue={row.UnitDrop}\n  //                 // value={{value:row.Unit,label:row.UnitName}}\n  //                 className=\" width-100\"\n  //                 options={\n  //                     row.UnitDetails.map(i => ({\n  //                         label: i.UnitName,\n  //                         value: i.Unit,\n  //                         ConversionUnit: i.ConversionUnit,\n  //                         Unitlabel: i.Unitlabel\n  //                     }))\n  //                 }\n  //                 onChange={(event) => orderQtyUnit_SelectOnchange(event, row)}\n  //             >\n  //             </Select >\n  //         )\n  //     },\n  // },\n  {\n    //***************StockDetails********************************************************************* */\n    text: \"Stock Details\",\n    dataField: \"Item\",\n    headerFormatter: function (cell) {\n      let index1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let k = arguments.length > 2 ? arguments[2] : undefined;\n      debugger;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-content-start\",\n        children: [Data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"samp\", {\n            id: \"allplus-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \" mdi mdi-plus-circle-outline text-primary font-size-16 \",\n              style: {\n                position: \"\",\n                display: showAllStockState ? \"none\" : \"block\"\n              },\n              onClick: e => {// setShowAllStockState(!showAllStockState)\n                // showAllStockOnclick(true) \n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: \"allminus-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-minus-circle-outline text-primary font-size-16\",\n              style: {\n                position: \"\",\n                // display: \"none\"\n                display: showAllStockState ? \"block\" : \"none\"\n              },\n              onClick: e => {// setShowAllStockState(!showAllStockState)\n                // showAllStockOnclick(false)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 44\n        }, _this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: \"1px\",\n            paddingTop: \"1px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"samp\", {\n            children: \" Stock Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, _this);\n    },\n    formatter: (cellContent, index1) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [index1.StockTotal > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"samp\", {\n            id: `plus-circle${index1.id}`,\n            style: {\n              display: showAllStockState ? \"none\" : \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"samp\", {\n              style: {\n                fontWeight: \"bold\",\n                textShadow: 1,\n                marginLeft: \"20px\"\n              },\n              children: `Total Stock:${index1.StockTotal}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 41\n            }, this)\n          }, `plus-circle${index1.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"samp\", {\n          style: {\n            fontWeight: \"bold\",\n            textShadow: 1\n          },\n          children: 'Total Stock:0'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"samp\", {\n          id: `minus-circle${index1.id}`,\n          style: {\n            display: showAllStockState ? \"block\" : \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-minus-circle-outline text-primary font-size-16\",\n            style: {\n              position: \"absolute\"\n            } // onClick={(e) => { showStockOnclick(index1, false) }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }, this)\n        }, `minus-circle${index1.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }, this)]\n      }, `plus-circle-icon${index1.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table table-bordered table-responsive mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Thead, {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"\",\n            style: {\n              zIndex: -3\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"\",\n              children: \"Batch Code \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"\",\n              children: \"Supplier BatchCode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"\",\n              children: \"Batch Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                  children: \"Stock Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"samp\", {\n                children: [`(${index1.StockTotal} ${index1.StockUnit})`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"samp\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"samp\", {\n                id: `stocktotal${index1.id}`,\n                children: [`Total:${index1.InpStockQtyTotal} ${index1.StockUnit}`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"\",\n              children: \"Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n          children: Data.map(index1 => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"150px\"\n                  },\n                  children: index1.SystemBatchCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"150px\"\n                  },\n                  children: index1.BatchCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"100px\"\n                  },\n                  children: convertDatefunc(index1.BatchDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"120px\",\n                    textAlign: \"right\"\n                  },\n                  children: `${index1.BaseUnitQuantity} `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"120px\",\n                    textAlign: \"right\"\n                  },\n                  children: `${index1.Rate} `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }, this) // </div >\n\n  } // {//***************Rate********************************************************************* */\n  //     text: \"Rate\",\n  //     dataField: \"Rate\",\n  // }\n  ];\n  const pageOptions = {\n    sizePerPage: 10,\n    // totalSize: OrderItemDetails.length,\n    custom: true\n  }; //     function showAllStockOnclick(isplus = false) {\n  //         try {\n  //             if (isplus) {\n  //                 document.getElementById(\"allplus-circle\").style.display = \"none\";\n  //                 document.getElementById(\"allminus-circle\").style.display = \"block\";\n  //             } else {\n  //                 document.getElementById(\"allplus-circle\").style.display = \"block\";\n  //                 document.getElementById(\"allminus-circle\").style.display = \"none\";\n  //             }\n  //         } catch (w) { }\n  //         Data.forEach(index1 => {\n  // debugger\n  //             if (!index1.StockTotal > 0) {\n  //                 return\n  //             }\n  //             try {\n  //                 if (isplus) {\n  //                     document.getElementById(`view${index1.id}`).style.display = \"block\";\n  //                     document.getElementById(`plus-circle${index1.id}`).style.display = \"none\";\n  //                     document.getElementById(`minus-circle${index1.id}`).style.display = \"block\";\n  //                 } else {\n  //                     document.getElementById(`view${index1.id}`).style.display = \"none\";\n  //                     document.getElementById(`plus-circle${index1.id}`).style.display = \"block\";\n  //                     document.getElementById(`minus-circle${index1.id}`).style.display = \"none\";\n  //                 }\n  //             } catch (w) { }\n  //         })\n  //     }\n  //     function showStockOnclick(index1, isplus = false) {\n  //         try {\n  //             if (isplus) {\n  //                 document.getElementById(`view${index1.id}`).style.display = \"block\";\n  //                 document.getElementById(`plus-circle${index1.id}`).style.display = \"none\";\n  //                 document.getElementById(`minus-circle${index1.id}`).style.display = \"block\";\n  //             } else {\n  //                 document.getElementById(`view${index1.id}`).style.display = \"none\";\n  //                 document.getElementById(`plus-circle${index1.id}`).style.display = \"block\";\n  //                 document.getElementById(`minus-circle${index1.id}`).style.display = \"none\";\n  //             }\n  //         } catch (w) { }\n  //     }\n\n  function ChallanDateOnchange(y, v, e) {\n    // dispatch(GoButton_post_For_Invoice_Success([]))\n    onChangeDate({\n      e,\n      v,\n      state,\n      setState\n    });\n  }\n\n  ;\n\n  function PartyOnchange(hasSelect, evn) {\n    debugger;\n    setState(i => {\n      const v1 = { ...i\n      };\n      v1.values.Item = hasSelect; // v1.hasValid.Item.valid = true\n\n      return v1;\n    });\n    dispatch(GoButtonForchallanAddSuccess([]));\n  }\n\n  ;\n\n  const StockQtyOnChange = (event, index1, index2) => {\n    let input = event.target.value;\n    let result = /^\\d*(\\.\\d{0,3})?$/.test(input);\n    let val1 = 0;\n    let v3 = index2.Qty;\n\n    if (result) {\n      let v1 = Number(index2.BaseUnitQuantity);\n      let v2 = Number(input);\n\n      if (v1 >= v2) {\n        val1 = input;\n      } else {\n        val1 = v1;\n      }\n\n      ;\n    } else if (v3 >= 0 && !(input === '')) {\n      val1 = v3;\n    } else {\n      val1 = 0;\n    }\n\n    event.target.value = val1;\n    index2.Qty = val1;\n    let t1 = 0; //L1 Current StockDetails QTY Sum=\"t1\"\n\n    let t2 = index1.StockUnit; //L2 Current StockDetails QTY Unit=\"t2\"\n    //C1 start* for loop for Stock Sum \n\n    index1.StockDetails.forEach(i2 => {\n      t1 = Number(t1) + Number(i2.Qty);\n    }); //C1 end*\n\n    index1.Quantity = (t1 / index1.ConversionUnit).toFixed(3);\n\n    try {\n      // C2 start ** Total stock Qty label\n      document.getElementById(`stocktotal${index1.id}`).innerText = `Total:${t1} ${t2}`;\n      document.getElementById(`OrderQty${index1.id}`).value = index1.Quantity; // C2 end\n    } catch (e) {}\n\n    ;\n  };\n\n  function stockDistributeFunc(index) {\n    const v1 = index.Quantity;\n    let orderqty = Number(v1) * Number(index.ConversionUnit);\n    index.StockDetails = index.StockDetails.map(i2 => {\n      let stockqty = Number(i2.BaseUnitQuantity);\n\n      if (orderqty > stockqty && !(orderqty === 0)) {\n        orderqty = orderqty - stockqty;\n        i2.Qty = stockqty.toFixed(3);\n      } else if (orderqty <= stockqty && orderqty > 0) {\n        i2.Qty = orderqty.toFixed(3);\n        orderqty = 0;\n      } else {\n        i2.Qty = 0;\n      }\n\n      try {\n        document.getElementById(`batchQty${index.id}-${i2.id}`).value = i2.Qty;\n      } catch (e) {}\n\n      return i2;\n    });\n    const t1 = v1 * index.ConversionUnit;\n    const t2 = index.StockUnit;\n    const t3 = index.StockTotal;\n\n    if (t1 > t3) {\n      try {\n        document.getElementById(`OrderQty${index.id}`).value = t3.toFixed(3);\n      } catch (e) {}\n    }\n\n    ;\n\n    try {\n      index.StockInValid = false;\n      index.StockInvalidMsg = null;\n      document.getElementById(`StockInvalidMsg${index.id}`).style.display = \"none\";\n    } catch (e) {}\n\n    ;\n\n    try {\n      document.getElementById(`stocktotal${index.id}`).innerText = `Total:${t1} ${t2}`;\n    } catch (e) {}\n\n    ;\n  }\n\n  ;\n\n  function orderQtyOnChange(event, index) {\n    let input = event.target.value;\n    let result = /^\\d*(\\.\\d{0,3})?$/.test(input);\n    let val1 = 0;\n\n    if (result) {\n      let v1 = Number(index.StockTotal);\n      let v2 = Number(input) * Number(index.ConversionUnit);\n\n      if (v1 >= v2) {\n        val1 = input;\n      } else {\n        val1 = v1 / Number(index.ConversionUnit);\n      }\n\n      ;\n    } else if (index.Quantity >= 0 && !(input === '')) {\n      val1 = index.Quantity;\n    } else {\n      val1 = 0;\n    }\n\n    event.target.value = val1;\n    index.Quantity = val1;\n    stockDistributeFunc(index);\n  }\n\n  ;\n\n  function orderQtyUnit_SelectOnchange(event, index) {\n    debugger;\n    index.UnitDrop = event;\n    index.ConversionUnit = event.ConversionUnit; // var n1 = Number(index.Quantity);\n    // var n2 = Number(event.ConversionUnit);\n    // const t1 = (n1 * n2).toFixed(2);\n    // const t2 = index.StockUnit\n    // try {\n    //     document.getElementById(`stocktotal${index.id}`).innerText = `Total:${t1} ${t2}`\n    // } catch (e) { }\n\n    stockDistributeFunc(index);\n  }\n\n  ;\n\n  function goButtonHandler(event) {\n    const jsonBody = JSON.stringify({\n      Party: userParty(),\n      Item: values.Item.value\n    });\n    GoBtnDissable({\n      id: goBtnId,\n      state: true\n    });\n    dispatch(GoButtonForchallanAdd(jsonBody)); // }\n  }\n\n  ;\n\n  const SaveHandler = event => {\n    event.preventDefault();\n    const validMsg = [];\n    const invoiceItems = [];\n    let grand_total = 0;\n    Data.forEach(index => {\n      if (index.StockInValid) {\n        validMsg.push(`${index.ItemName}:${index.StockInvalidMsg}`);\n        return;\n      }\n\n      ;\n      index.StockDetails.forEach(ele => {\n        if (ele.Qty > 0) {\n          var demo = {\n            Rate: ele.Rate,\n            GSTPercentage: ele.GST,\n            Quantity: ele.Qty\n          };\n          const basicAmt = parseFloat(basicAmount(demo));\n          const cgstAmt = GstAmount(demo);\n          const amount = Amount(demo);\n          grand_total = grand_total + Number(amount);\n          invoiceItems.push({\n            Item: index.Item,\n            Unit: index.UnitDrop.value,\n            BatchCode: ele.BatchCode,\n            Quantity: ele.Qty,\n            BatchDate: ele.BatchDate,\n            BatchID: ele.id,\n            BaseUnitQuantity: ele.BaseUnitQuantity,\n            LiveBatch: ele.LiveBatche,\n            MRP: ele.LiveBatcheMRPID,\n            Rate: ele.Rate,\n            BasicAmount: basicAmt.toFixed(2),\n            GSTAmount: cgstAmt.toFixed(2),\n            GST: ele.LiveBatcheGSTID,\n            CGST: (cgstAmt / 2).toFixed(2),\n            SGST: (cgstAmt / 2).toFixed(2),\n            IGST: 0,\n            GSTPercentage: ele.GST,\n            CGSTPercentage: ele.GST / 2,\n            SGSTPercentage: ele.GST / 2,\n            IGSTPercentage: 0,\n            Amount: amount,\n            TaxType: 'GST',\n            DiscountType: \"\",\n            Discount: \"0\",\n            DiscountAmount: \"0\"\n          });\n        }\n      });\n    });\n    debugger; // if (formValid(state, setState)) {\n\n    if (validMsg.length > 0) {\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(validMsg),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n      return;\n    }\n\n    const forInvoice_1_json = () => ({\n      // Json Body Generate For Invoice_1  Start+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n      InvoiceDate: values.InvoiceDate,\n      InvoiceItems: invoiceItems // InvoicesReferences: OrderIDs.map(i => ({ Order: i }))\n\n    });\n\n    const forInvoice_2_json = () => ({\n      //   Json Body Generate For Invoice_2  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n      IBChallanDate: values.InvoiceDate,\n      IBChallanItems: invoiceItems // IBChallansReferences: OrderIDs.map(i => ({ Order: i }))\n\n    });\n\n    const for_common_json = () => ({\n      //   Json Body Generate Common for Both +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n      CustomerGSTTin: '41',\n      GrandTotal: Math.round(grand_total),\n      RoundOffAmount: (grand_total - Math.trunc(grand_total)).toFixed(2),\n      Customer: values.Customer.value,\n      Party: userParty(),\n      CreatedBy: createdBy(),\n      UpdatedBy: createdBy()\n    });\n\n    let jsonBody; //json body decleration \n\n    if (subPageMode === url.INVOICE_1) {\n      jsonBody = JSON.stringify({ ...for_common_json(),\n        ...forInvoice_1_json()\n      });\n    } else if (subPageMode === url.INVOICE_2) {\n      jsonBody = JSON.stringify({ ...for_common_json(),\n        ...forInvoice_2_json()\n      });\n    } // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n    if (pageMode === mode.edit) {} else {// saveDissable({ id: saveBtnid, state: true })\n      // dispatch(postInvoiceMaster(jsonBody, saveBtnid));\n    }\n  };\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [userAccess.PageHeading, \"| FoodERP-React FrontEnd\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: SaveHandler,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"px-2 mb-1 c_card_filter header text-black\",\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \" mt-1 row \",\n                sm: 12,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row mt-2 mb-3  \",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"mt-1\",\n                      style: {\n                        width: \"110px\"\n                      },\n                      children: \"Challan Date \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 854,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      sm: 7,\n                      children: [/*#__PURE__*/_jsxDEV(Flatpickr, {\n                        name: \"InvoiceDate\",\n                        value: values.InvoiceDate,\n                        className: \"form-control d-block bg-white text-dark\",\n                        id: \"myInput11\",\n                        disabled: Data.length > 0 || pageMode === \"edit\" ? true : false,\n                        options: {\n                          dateFormat: \"Y-m-d\"\n                        },\n                        onChange: ChallanDateOnchange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 856,\n                        columnNumber: 49\n                      }, this), isError.InvoiceDate.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"invalid-feedback\",\n                        children: isError.InvoiceDate\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 869,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 855,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 853,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row mt-2 mb-3 \",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"mt-2\",\n                      style: {\n                        width: \"80px\"\n                      },\n                      children: \" Party \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      sm: 8,\n                      children: [/*#__PURE__*/_jsxDEV(Select, {\n                        name: \"Customer\",\n                        value: values.party,\n                        isSearchable: true,\n                        isDisabled: Data.length > 0 ? true : false,\n                        id: 'customerselect',\n                        className: \"react-dropdown\",\n                        classNamePrefix: \"dropdown\",\n                        options: venderOptions // onChange={PartyOnchange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 879,\n                        columnNumber: 49\n                      }, this), isError.Customer.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger f-8\",\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: isError.Customer\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 891,\n                          columnNumber: 87\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 891,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 878,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row mt-2 mb-3 \",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"mt-2\",\n                      style: {\n                        width: \"80px\"\n                      },\n                      children: \" Item \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 898,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      sm: 8,\n                      children: [/*#__PURE__*/_jsxDEV(Select, {\n                        name: \"Customer\",\n                        value: values.Item,\n                        isSearchable: true,\n                        isDisabled: Data.length > 0 ? true : false,\n                        id: 'customerselect',\n                        className: \"react-dropdown\",\n                        classNamePrefix: \"dropdown\",\n                        options: ItemsOption,\n                        onChange: PartyOnchange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 900,\n                        columnNumber: 49\n                      }, this), isError.Customer.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger f-8\",\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: isError.Customer\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 913,\n                          columnNumber: 87\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 913,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 899,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 897,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 2,\n                  className: \"mt-3\",\n                  children: pageMode === mode.defaultsave ? Data.length === 0 ? /*#__PURE__*/_jsxDEV(Go_Button, {\n                    onClick: e => goButtonHandler()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 921,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(Change_Button, {\n                    onClick: e => dispatch(GoButtonForchallanAddSuccess([]))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 923,\n                    columnNumber: 45\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 918,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PaginationProvider, {\n            pagination: paginationFactory(pageOptions),\n            children: _ref => {\n              let {\n                paginationProps,\n                paginationTableProps\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                keyField: \"id\",\n                data: Data,\n                columns: pagesListColumns,\n                search: true,\n                children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      xl: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"table-responsive\",\n                        children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                          keyField: \"id\",\n                          responsive: true,\n                          bordered: false,\n                          striped: false,\n                          classes: \"table  table-bordered\",\n                          noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-danger text-center \",\n                            children: \"Items Not available\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 952,\n                            columnNumber: 65\n                          }, this),\n                          ...toolkitProps.baseProps,\n                          ...paginationTableProps\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 945,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 944,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 943,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 942,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"align-items-md-center mt-30\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      className: \"pagination pagination-rounded justify-content-end mb-2\",\n                      children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 964,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 963,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 962,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 941,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 25\n          }, this), Data.length > 0 ? /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 2,\n              style: {\n                marginLeft: \"-40px\"\n              },\n              className: \"row save1\",\n              children: /*#__PURE__*/_jsxDEV(SaveButton, {\n                pageMode: pageMode //   onClick={onsave}\n                ,\n                id: saveBtnid,\n                userAcc: userPageAccessState,\n                module: \"Material Issue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 976,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 44\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Challan, \"uJfub1lwGecCVQxHbh7D9B2cT9o=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Challan;\nexport default Challan;\n\nvar _c;\n\n$RefreshReg$(_c, \"Challan\");","map":{"version":3,"names":["React","useEffect","useState","Button","Col","FormGroup","Input","Label","Row","Table","MetaTags","Flatpickr","commonPageFieldSuccess","useDispatch","useSelector","AlertState","commonPageField","useHistory","comAddPageFieldFunc","initialFiledFunc","onChangeDate","Select","Change_Button","Go_Button","SaveButton","updateBOMListSuccess","breadcrumbReturn","convertDatefunc","createdBy","currentDate","GoBtnDissable","saveDissable","userCompany","userParty","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","BootstrapTable","Tbody","Thead","mode","pageId","url","GetCustomer","GetVender","GetVenderSupplierCustomer","Amount","basicAmount","GstAmount","challanitemdropdown","GoButtonForchallanAdd","GoButtonForchallanAddSuccess","Challan","props","dispatch","history","subPageMode","location","pathname","goBtnId","saveBtnid","fileds","InvoiceDate","Customer","state","setState","modalCss","setModalCss","pageMode","setPageMode","defaultsave","userPageAccessState","setUserPageAccessState","showAllStockState","setShowAllStockState","postMsg","updateMsg","pageField","userAccess","customer","GoButton","vender","vendorSupplierCustomer","gobutton_Add","challanitems","ChallanReducer","SupplierReducer","InvoiceReducer","BOMReducer","Login","RoleAccessUpdateData","CommonPageFieldReducer","Data","console","log","hasShowloction","hasOwnProperty","hasShowModal","values","isError","fieldLabel","userAcc","locationPath","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","CustomerName","hasValid","valid","label","value","jsonBody","JSON","stringify","FromDate","Party","OrderIDs","Status","StatusCode","dropdownAdd","Type","Message","RedirectPath","INVOICE_LIST_1","AfterResponseAction","push","MATERIAL_ISSUE_LIST","Company","fieldArr","PageFieldMaster","venderOptions","map","i","id","Name","ItemsOption","pagesListColumns","text","dataField","headerFormatter","cell","index1","k","formatter","cellContent","StockInValid","color","StockInvalidMsg","length","position","display","e","paddingLeft","paddingTop","StockTotal","fontWeight","textShadow","marginLeft","zIndex","StockUnit","InpStockQtyTotal","width","SystemBatchCode","BatchCode","BatchDate","textAlign","BaseUnitQuantity","Rate","pageOptions","sizePerPage","custom","ChallanDateOnchange","y","v","PartyOnchange","hasSelect","evn","v1","Item","StockQtyOnChange","event","index2","input","target","result","test","val1","v3","Qty","Number","v2","t1","t2","StockDetails","forEach","i2","Quantity","ConversionUnit","toFixed","document","getElementById","innerText","stockDistributeFunc","index","orderqty","stockqty","t3","style","orderQtyOnChange","orderQtyUnit_SelectOnchange","UnitDrop","goButtonHandler","SaveHandler","preventDefault","validMsg","invoiceItems","grand_total","ItemName","ele","demo","GSTPercentage","GST","basicAmt","parseFloat","cgstAmt","amount","Unit","BatchID","LiveBatch","LiveBatche","MRP","LiveBatcheMRPID","BasicAmount","GSTAmount","LiveBatcheGSTID","CGST","SGST","IGST","CGSTPercentage","SGSTPercentage","IGSTPercentage","TaxType","DiscountType","Discount","DiscountAmount","forInvoice_1_json","InvoiceItems","forInvoice_2_json","IBChallanDate","IBChallanItems","for_common_json","CustomerGSTTin","GrandTotal","Math","round","RoundOffAmount","trunc","CreatedBy","UpdatedBy","INVOICE_1","INVOICE_2","edit","PageHeading","dateFormat","party","paginationProps","paginationTableProps","toolkitProps","baseProps"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Purchase/Challan/Challan.js"],"sourcesContent":["import React, { useEffect, useState, } from \"react\";\r\nimport {\r\n    Button,\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n    Table\r\n} from \"reactstrap\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport { commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    initialFiledFunc,\r\n    onChangeDate,\r\n\r\n} from \"../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\r\nimport Select from \"react-select\";\r\nimport { Change_Button, Go_Button, SaveButton } from \"../../../components/Common/ComponentRelatedCommonFile/CommonButton\";\r\nimport {\r\n    updateBOMListSuccess\r\n} from \"../../../store/Purchase/BOMRedux/action\";\r\nimport { breadcrumbReturn, convertDatefunc, createdBy, currentDate, GoBtnDissable, saveDissable, userCompany, userParty } from \"../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\nimport * as mode from \"../../../routes/PageMode\";\r\nimport * as pageId from \"../../../routes/allPageID\"\r\nimport * as url from \"../../../routes/route_url\"\r\n// import { editInvoiceListSuccess, GoButton_post_For_Invoice, GoButton_post_For_Invoice_Success, postInvoiceMasterSuccess } from \"../../../store/Sales/Invoice/action\";\r\nimport { GetCustomer, GetVender, GetVenderSupplierCustomer } from \"../../../store/CommonAPI/SupplierRedux/actions\";\r\n// import { postInvoiceMaster } from \"../../../store/Sales/Invoice/action\";\r\nimport { Amount, basicAmount, GstAmount } from \"../../Purchase/Order/OrderPageCalulation\";\r\nimport { challanitemdropdown, GoButtonForchallanAdd, GoButtonForchallanAddSuccess } from \"../../../store/Inventory/ChallanRedux/actions\";\r\n\r\n// import \"./css.css\"\r\n\r\nconst Challan = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const subPageMode = history.location.pathname\r\n\r\n    const goBtnId = `ADDGoBtn${subPageMode}`\r\n    const saveBtnid = `saveBtn${subPageMode}`\r\n\r\n    const fileds = {\r\n        // id: \"\",\r\n        InvoiceDate: currentDate,\r\n        Customer: \"\",\r\n    }\r\n\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(mode.defaultsave);\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n    const [showAllStockState, setShowAllStockState] = useState(true);\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        postMsg,\r\n        updateMsg,\r\n        pageField,\r\n        userAccess,\r\n        customer,\r\n        GoButton='',\r\n        vender,\r\n        vendorSupplierCustomer,\r\n        gobutton_Add,\r\n        challanitems\r\n    } = useSelector((state) => ({\r\n        challanitems:state.ChallanReducer.challanitems,\r\n        GoButton:state.ChallanReducer.GoButton,\r\n        vender: state.SupplierReducer.vender,\r\n        postMsg: state.InvoiceReducer.postMsg,\r\n        updateMsg: state.BOMReducer.updateMsg,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField,\r\n        customer: state.SupplierReducer.customer,\r\n        // GoButton: state.InvoiceReducer.GoButton,\r\n        vendorSupplierCustomer: state.SupplierReducer.vendorSupplierCustomer,\r\n    }));\r\n    const { Data = [] } = GoButton;\r\n    console.log(Data)\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    useEffect(() => {\r\n\r\n        // dispatch(GetVenderSupplierCustomer(subPageMode))\r\n        // dispatch(GetCustomer())\r\n        // dispatch(commonPageFieldSuccess(null));\r\n        // dispatch(commonPageField(pageId.INVOICE_1))\r\n        // dispatch(GoButton_post_For_Invoice_Success([]))\r\n\r\n    }, []);\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n            breadcrumbReturn({dispatch,userAcc});\r\n\r\n        };\r\n    }, [userAccess])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                const { Customer, CustomerName, } = hasEditVal\r\n                const { values, hasValid, } = { ...state }\r\n                hasValid.Customer.valid = true;\r\n\r\n                values.Customer = { label: CustomerName, value: Customer };\r\n\r\n                //++++++++++++++++++++++++++**Dynamic go Button API Call method+++++++++++++++++\r\n                const jsonBody = JSON.stringify({\r\n                    FromDate: hasEditVal.InvoiceDate,\r\n                    Customer: hasEditVal.Customer,\r\n                    Party: userParty(),\r\n                    OrderIDs: \"\"\r\n                });\r\n                // dispatch(GoButton_post_For_Invoice(jsonBody));\r\n                // dispatch(editInvoiceListSuccess({ Status: false }))\r\n\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            // dispatch(postInvoiceMasterSuccess({ Status: false }))\r\n            // dispatch(GoButton_post_For_Invoice_Success([]))\r\n            // dispatch(goButtonForMaterialIssue_Master_ActionSuccess([]))\r\n            // dispatch(postBOMSuccess({ Status: false }))\r\n            // setState(() => resetFunction(fileds, state))// Clear form values \r\n            // saveDissable(false);//save Button Is enable function\r\n\r\n            // dispatch(AlertState({\r\n            //     Type: 1,\r\n            //     Status: true,\r\n            //     Message: \"Item is out of stock\",\r\n            //     RedirectPath: url.MATERIAL_ISSUE_LIST,\r\n            // }))\r\n            if (pageMode === mode.dropdownAdd) {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: url.INVOICE_LIST_1,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n\r\n            // dispatch(postInvoiceMasterSuccess({ Status: false }))\r\n            // dispatch(GoButton_post_For_Invoice_Success([]))\r\n\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMsg.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n\r\n        if ((updateMsg.Status === true) && (updateMsg.StatusCode === 200) && !(modalCss)) {\r\n            // setState(() => resetFunction(fileds, state))// Clear form values \r\n            // saveDissable(false);//save Button Is enable function\r\n            history.push({\r\n                pathname: url.MATERIAL_ISSUE_LIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            // saveDissable(false);//Update Button Is enable function\r\n            // dispatch(updateBOMListSuccess({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n    useEffect(() => {\r\n        const jsonBody = JSON.stringify({\r\n            Company:userCompany()\r\n        });\r\n        dispatch(challanitemdropdown(jsonBody))\r\n        dispatch(GetVender())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField]);\r\n\r\n    useEffect(() => {\r\n        // showAllStockOnclick(showAllStockState)\r\n    }, [showAllStockState]);\r\n\r\n    const venderOptions = vender.map((i) => ({\r\n        value: i.id,\r\n        label: i.Name,\r\n    }));\r\n\r\n    \r\n    const ItemsOption = challanitems.map((i) => ({\r\n        value: i.id,\r\n        label: i.Name,\r\n    }));\r\n\r\n\r\n    const pagesListColumns = [\r\n\r\n        {//***************ItemName********************************************************************* */\r\n            text: \"Item Name\",\r\n            dataField: \"ItemName\",\r\n            headerFormatter: (cell, index1 = [], k) => {\r\n                return (\r\n                    <div className=\"width-100\">Item Name</div>)\r\n            },\r\n            formatter: (cellContent, index1) => {\r\n                debugger\r\n\r\n                return (\r\n                    <>\r\n                        <div><samp id={`ItemName${index1.id}`}>{cellContent}</samp></div>\r\n                        {(index1.StockInValid) ? <div><samp id={`StockInvalidMsg${index1.id}`} style={{ color: \"red\" }}> {index1.StockInvalidMsg}</samp></div>\r\n                            : <></>}\r\n                    </>\r\n                )\r\n            },\r\n\r\n        },\r\n        // {//***************Quantity********************************************************************* */\r\n        //     text: \"Quantity\",\r\n        //     dataField: \"\",\r\n        //     headerFormatter: (cell, index1 = [], k) => {\r\n        //         return (\r\n        //             <div className=\"width-100\">Quantity</div>)\r\n        //     },\r\n        //     formatter: (cellContent, user) => (\r\n        //         <div >\r\n        //             <Input type=\"text\"\r\n        //                 disabled={pageMode === 'edit' ? true : false}\r\n        //                 id={`OrderQty${user.id}`}\r\n        //                 style={{ textAlign: \"right\" }}\r\n        //                 className=\" width-100\"\r\n        //                 key={user.id}\r\n        //                 autoComplete=\"off\"\r\n        //                 defaultValue={user.Quantity}\r\n        //                 onChange={(event) => orderQtyOnChange(event, user)}\r\n        //             ></Input>\r\n        //             <samp className=\"mt-1\">Order Qty:{user.OrderQty} {user.UnitName}</samp>\r\n        //         </div>\r\n\r\n        //     )\r\n        // },\r\n        // {//***************Unit Dropdown********************************************************************* */\r\n        //     text: \"Unit\",\r\n        //     dataField: \"id\",\r\n\r\n        //     headerFormatter: (cell, index1 = [], k) => {\r\n        //         return (\r\n        //             <div className=\"width-100\" >Unit</div>)\r\n        //     },\r\n        //     formatter: (value, row, key) => {\r\n\r\n        //         return (\r\n        //             <Select\r\n        //                 classNamePrefix=\"select2-selection\"\r\n        //                 id={\"ddlUnit\"}\r\n        //                 isDisabled={pageMode === 'edit' ? true : false}\r\n        //                 defaultValue={row.UnitDrop}\r\n        //                 // value={{value:row.Unit,label:row.UnitName}}\r\n        //                 className=\" width-100\"\r\n        //                 options={\r\n        //                     row.UnitDetails.map(i => ({\r\n        //                         label: i.UnitName,\r\n        //                         value: i.Unit,\r\n        //                         ConversionUnit: i.ConversionUnit,\r\n        //                         Unitlabel: i.Unitlabel\r\n        //                     }))\r\n        //                 }\r\n        //                 onChange={(event) => orderQtyUnit_SelectOnchange(event, row)}\r\n        //             >\r\n        //             </Select >\r\n        //         )\r\n        //     },\r\n        // },\r\n        {//***************StockDetails********************************************************************* */\r\n            \r\n            text: \"Stock Details\",\r\n            dataField: \"Item\",\r\n            headerFormatter: (cell, index1 = [], k) => {\r\n                debugger\r\n                return (\r\n                    <div className=\"d-flex flex-content-start\">\r\n                        {Data.length > 0 ? <div>\r\n                            <samp id=\"allplus-circle\">\r\n                                <i className=\" mdi mdi-plus-circle-outline text-primary font-size-16 \"\r\n                                    style={{\r\n                                        position: \"\",\r\n                                        display: showAllStockState ? \"none\" : \"block\"\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        // setShowAllStockState(!showAllStockState)\r\n                                        // showAllStockOnclick(true) \r\n                                    }}\r\n                                >\r\n                                </i>\r\n                            </samp>\r\n                            <samp id=\"allminus-circle\"  >\r\n                                <i className=\"mdi mdi-minus-circle-outline text-primary font-size-16\"\r\n                                    style={{\r\n                                        position: \"\",\r\n                                        // display: \"none\"\r\n                                        display: showAllStockState ? \"block\" : \"none\"\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        // setShowAllStockState(!showAllStockState)\r\n                                        // showAllStockOnclick(false)\r\n                                    }}\r\n                                ></i>\r\n                            </samp>\r\n                        </div>\r\n                            : null\r\n                        }\r\n\r\n                        <div style={{ paddingLeft: \"1px\", paddingTop: \"1px\" }}>\r\n                            <samp > Stock Details</samp>\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n            },\r\n            \r\n            formatter: (cellContent, index1 ) => (\r\n                \r\n                \r\n                <div>\r\n                    <div key={`plus-circle-icon${index1.id}`}>\r\n                        {\r\n                            (index1.StockTotal > 0) ?\r\n                                <>\r\n                                    <samp key={`plus-circle${index1.id}`} id={`plus-circle${index1.id}`}\r\n                                        style={{\r\n                                            display: showAllStockState ? \"none\" : \"block\"\r\n                                        }}\r\n                                    >\r\n                                        {/* <i className=\" mdi mdi-plus-circle-outline text-primary font-size-16\"\r\n                                            style={{ position: \"absolute\", }}\r\n                                            onClick={(e) => { showStockOnclick(index1, true) }}>\r\n                                        </i> */}\r\n                                        <samp style={{ fontWeight: \"bold\", textShadow: 1, marginLeft: \"20px\" }}>\r\n                                            {`Total Stock:${index1.StockTotal}`}</samp>\r\n                                    </samp>\r\n                                </>\r\n                                : <samp style={{ fontWeight: \"bold\", textShadow: 1, }}>{'Total Stock:0'}</samp>\r\n                        }\r\n\r\n                        <samp key={`minus-circle${index1.id}`} id={`minus-circle${index1.id}`}\r\n                            style={{ display: showAllStockState ? \"block\" : \"none\" }}\r\n                        >\r\n                            <i className=\"mdi mdi-minus-circle-outline text-primary font-size-16\"\r\n                                style={{ position: \"absolute\", }}\r\n                                // onClick={(e) => { showStockOnclick(index1, false) }}\r\n                            ></i>\r\n                        </samp>\r\n\r\n                    </div >\r\n\r\n                    {/* <div id={`view${index1.id}`}\r\n                        style={{\r\n                            backgroundColor: \"#b9be511a\",\r\n                            display: showAllStockState ? \"bolck\" : \"none\"\r\n                        }}\r\n                    // style={{ display: showAllStockState ? \"none\" : \"block\" }}\r\n                    > */}\r\n            \r\n                        <Table className=\"table table-bordered table-responsive mb-1\" >\r\n                            <Thead  >\r\n\r\n                                <tr className=\"\" style={{ zIndex: -3 }}>\r\n                                    <th className=\"\">Batch Code </th>\r\n                                    <th className=\"\" >Supplier BatchCode</th>\r\n                                    <th className=\"\" >Batch Date</th>\r\n\r\n\r\n                                    <th className=\"\">\r\n                                        <div>\r\n                                            <samp >Stock Quantity</samp>\r\n                                        </div>\r\n                                        <samp >{`(${index1.StockTotal} ${index1.StockUnit})`} </samp></th>\r\n                                    <th className=\"\" >\r\n                                        <div>\r\n                                            <samp >Quantity</samp>\r\n                                        </div>\r\n                                        <samp id={`stocktotal${index1.id}`}>{`Total:${index1.InpStockQtyTotal} ${index1.StockUnit}`} </samp>\r\n                                    </th>\r\n                                    <th className=\"\" >Rate</th>\r\n\r\n                                </tr>\r\n\r\n                            </Thead>\r\n                            <Tbody  >\r\n                                {Data.map((index1) => {\r\n                                     return (\r\n                                        < tr  >\r\n                                            <td>\r\n                                                <div style={{ width: \"150px\" }}>\r\n                                                    {index1.SystemBatchCode}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div style={{ width: \"150px\" }}>\r\n                                                    {index1.BatchCode}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div style={{ width: \"100px\" }}>\r\n                                                    {convertDatefunc(index1.BatchDate)}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div style={{ width: \"120px\", textAlign: \"right\" }}>\r\n                                                    {`${index1.BaseUnitQuantity} `}\r\n                                                </div>\r\n                                            </td>\r\n\r\n                                            <td>\r\n                                                <div style={{ width: \"120px\", textAlign: \"right\" }}>\r\n                                                    {`${index1.Rate} `}\r\n                                                </div>\r\n                                            </td>\r\n                                            {/* <td> */}\r\n                                                {/* <div style={{ width: \"150px\" }}> */}\r\n                                                    {/* <Input type=\"text\"\r\n                                                        disabled={pageMode === 'edit' ? true : false}\r\n                                                        style={{ textAlign: \"right\" }}\r\n                                                        key={`batchQty${index1.id}-${index2.id}`}\r\n                                                        id={`batchQty${index1.id}-${index2.id}`}\r\n                                                        defaultValue={index2.Qty}\r\n                                                        onChange={(event) => StockQtyOnChange(event, index1, index2)}\r\n                                                    ></Input> */}\r\n                                                {/* </div> */}\r\n                                            {/* </td> */}\r\n                                        </tr>\r\n                                     ) \r\n                                  })}  \r\n                            </Tbody>\r\n                        </Table></div>\r\n                // </div >\r\n            ),\r\n\r\n        },\r\n        // {//***************Rate********************************************************************* */\r\n        //     text: \"Rate\",\r\n        //     dataField: \"Rate\",\r\n        // }\r\n\r\n    ];\r\n\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        // totalSize: OrderItemDetails.length,\r\n        custom: true,\r\n    };\r\n\r\n//     function showAllStockOnclick(isplus = false) {\r\n//         try {\r\n//             if (isplus) {\r\n//                 document.getElementById(\"allplus-circle\").style.display = \"none\";\r\n//                 document.getElementById(\"allminus-circle\").style.display = \"block\";\r\n//             } else {\r\n//                 document.getElementById(\"allplus-circle\").style.display = \"block\";\r\n//                 document.getElementById(\"allminus-circle\").style.display = \"none\";\r\n//             }\r\n//         } catch (w) { }\r\n//         Data.forEach(index1 => {\r\n// debugger\r\n\r\n//             if (!index1.StockTotal > 0) {\r\n//                 return\r\n//             }\r\n//             try {\r\n//                 if (isplus) {\r\n//                     document.getElementById(`view${index1.id}`).style.display = \"block\";\r\n//                     document.getElementById(`plus-circle${index1.id}`).style.display = \"none\";\r\n//                     document.getElementById(`minus-circle${index1.id}`).style.display = \"block\";\r\n//                 } else {\r\n//                     document.getElementById(`view${index1.id}`).style.display = \"none\";\r\n//                     document.getElementById(`plus-circle${index1.id}`).style.display = \"block\";\r\n//                     document.getElementById(`minus-circle${index1.id}`).style.display = \"none\";\r\n//                 }\r\n//             } catch (w) { }\r\n//         })\r\n\r\n\r\n//     }\r\n//     function showStockOnclick(index1, isplus = false) {\r\n//         try {\r\n//             if (isplus) {\r\n//                 document.getElementById(`view${index1.id}`).style.display = \"block\";\r\n//                 document.getElementById(`plus-circle${index1.id}`).style.display = \"none\";\r\n//                 document.getElementById(`minus-circle${index1.id}`).style.display = \"block\";\r\n//             } else {\r\n//                 document.getElementById(`view${index1.id}`).style.display = \"none\";\r\n//                 document.getElementById(`plus-circle${index1.id}`).style.display = \"block\";\r\n//                 document.getElementById(`minus-circle${index1.id}`).style.display = \"none\";\r\n//             }\r\n//         } catch (w) { }\r\n//     }\r\n\r\n    function ChallanDateOnchange(y, v, e) {\r\n        // dispatch(GoButton_post_For_Invoice_Success([]))\r\n        onChangeDate({ e, v, state, setState })\r\n    };\r\n\r\n    function PartyOnchange(hasSelect, evn) {\r\ndebugger\r\n        setState((i) => {\r\n            const v1 = { ...i }\r\n            v1.values.Item = hasSelect\r\n            // v1.hasValid.Item.valid = true\r\n            return v1\r\n        })\r\n        dispatch(GoButtonForchallanAddSuccess([]))\r\n    };\r\n\r\n    const StockQtyOnChange = (event, index1, index2) => {\r\n\r\n        let input = event.target.value\r\n        let result = /^\\d*(\\.\\d{0,3})?$/.test(input);\r\n        let val1 = 0;\r\n        let v3 = index2.Qty\r\n        if (result) {\r\n            let v1 = Number(index2.BaseUnitQuantity);\r\n            let v2 = Number(input)\r\n            if (v1 >= v2) { val1 = input }\r\n            else { val1 = v1 };\r\n\r\n        } else if (((v3 >= 0) && (!(input === '')))) {\r\n            val1 = v3\r\n        } else {\r\n            val1 = 0\r\n        }\r\n\r\n        event.target.value = val1;\r\n        index2.Qty = val1\r\n\r\n        let t1 = 0  //L1 Current StockDetails QTY Sum=\"t1\"\r\n        let t2 = index1.StockUnit//L2 Current StockDetails QTY Unit=\"t2\"\r\n\r\n        //C1 start* for loop for Stock Sum \r\n        index1.StockDetails.forEach(i2 => {\r\n            t1 = Number(t1) + Number(i2.Qty);\r\n        });\r\n        //C1 end*\r\n\r\n        index1.Quantity = (t1 / index1.ConversionUnit).toFixed(3)\r\n        try {\r\n            // C2 start ** Total stock Qty label\r\n            document.getElementById(`stocktotal${index1.id}`).innerText = `Total:${t1} ${t2}`\r\n            document.getElementById(`OrderQty${index1.id}`).value = index1.Quantity\r\n            // C2 end\r\n        } catch (e) { };\r\n    };\r\n\r\n    function stockDistributeFunc(index) {\r\n\r\n        const v1 = index.Quantity;\r\n        let orderqty = Number(v1) * Number(index.ConversionUnit);\r\n\r\n        index.StockDetails = index.StockDetails.map(i2 => {\r\n\r\n            let stockqty = Number(i2.BaseUnitQuantity);\r\n\r\n            if ((orderqty > stockqty) && !(orderqty === 0)) {\r\n                orderqty = orderqty - stockqty\r\n                i2.Qty = stockqty.toFixed(3)\r\n            } else if ((orderqty <= stockqty) && (orderqty > 0)) {\r\n                i2.Qty = orderqty.toFixed(3)\r\n                orderqty = 0\r\n            }\r\n            else {\r\n                i2.Qty = 0;\r\n            }\r\n            try {\r\n                document.getElementById(`batchQty${index.id}-${i2.id}`).value = i2.Qty\r\n            } catch (e) { }\r\n            return i2\r\n        });\r\n\r\n        const t1 = (v1 * index.ConversionUnit);\r\n        const t2 = index.StockUnit;\r\n        const t3 = index.StockTotal;\r\n\r\n        if (t1 > t3) {\r\n            try {\r\n                document.getElementById(`OrderQty${index.id}`).value = t3.toFixed(3)\r\n            } catch (e) { }\r\n        };\r\n        try {\r\n            index.StockInValid = false\r\n            index.StockInvalidMsg = null\r\n            document.getElementById(`StockInvalidMsg${index.id}`).style.display = \"none\";\r\n        } catch (e) { };\r\n        try {\r\n            document.getElementById(`stocktotal${index.id}`).innerText = `Total:${t1} ${t2}`\r\n        } catch (e) { };\r\n\r\n    };\r\n\r\n    function orderQtyOnChange(event, index) {\r\n\r\n\r\n        let input = event.target.value\r\n        let result = /^\\d*(\\.\\d{0,3})?$/.test(input);\r\n        let val1 = 0;\r\n        if (result) {\r\n            let v1 = Number(index.StockTotal);\r\n            let v2 = Number(input) * Number(index.ConversionUnit)\r\n            if (v1 >= v2) { val1 = input }\r\n            else { val1 = v1 / Number(index.ConversionUnit) };\r\n\r\n        } else if (((index.Quantity >= 0) && (!(input === '')))) {\r\n            val1 = index.Quantity\r\n        } else {\r\n            val1 = 0\r\n        }\r\n\r\n        event.target.value = val1;\r\n        index.Quantity = val1\r\n\r\n        stockDistributeFunc(index)\r\n    };\r\n\r\n    function orderQtyUnit_SelectOnchange(event, index) {\r\n        debugger\r\n        index.UnitDrop = event;\r\n        index.ConversionUnit = event.ConversionUnit;\r\n        // var n1 = Number(index.Quantity);\r\n        // var n2 = Number(event.ConversionUnit);\r\n        // const t1 = (n1 * n2).toFixed(2);\r\n        // const t2 = index.StockUnit\r\n\r\n        // try {\r\n        //     document.getElementById(`stocktotal${index.id}`).innerText = `Total:${t1} ${t2}`\r\n        // } catch (e) { }\r\n        stockDistributeFunc(index)\r\n    };\r\n\r\n    function goButtonHandler(event) {\r\n        \r\n\r\n        const jsonBody = JSON.stringify({\r\n           \r\n            Party: userParty(),\r\n            Item:values.Item.value\r\n        });\r\n        GoBtnDissable({ id: goBtnId, state: true })\r\n        dispatch(GoButtonForchallanAdd( jsonBody));\r\n\r\n        // }\r\n    };\r\n\r\n    const SaveHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const validMsg = []\r\n        const invoiceItems = []\r\n        let grand_total = 0;\r\n\r\n        Data.forEach((index) => {\r\n            if (index.StockInValid) {\r\n                validMsg.push(`${index.ItemName}:${index.StockInvalidMsg}`);\r\n                return\r\n            };\r\n\r\n            index.StockDetails.forEach((ele) => {\r\n\r\n                if (ele.Qty > 0) {\r\n                    var demo = {\r\n                        Rate: ele.Rate,\r\n                        GSTPercentage: ele.GST,\r\n                        Quantity: ele.Qty\r\n                    }\r\n                    const basicAmt = parseFloat(basicAmount(demo))\r\n                    const cgstAmt = (GstAmount(demo))\r\n                    const amount = Amount(demo)\r\n                    grand_total = grand_total + Number(amount)\r\n                    invoiceItems.push({\r\n                        Item: index.Item,\r\n                        Unit: index.UnitDrop.value,\r\n                        BatchCode: ele.BatchCode,\r\n                        Quantity: ele.Qty,\r\n                        BatchDate: ele.BatchDate,\r\n                        BatchID: ele.id,\r\n                        BaseUnitQuantity: ele.BaseUnitQuantity,\r\n                        LiveBatch: ele.LiveBatche,\r\n                        MRP: ele.LiveBatcheMRPID,\r\n                        Rate: ele.Rate,\r\n                        BasicAmount: basicAmt.toFixed(2),\r\n                        GSTAmount: cgstAmt.toFixed(2),\r\n                        GST: ele.LiveBatcheGSTID,\r\n                        CGST: (cgstAmt / 2).toFixed(2),\r\n                        SGST: (cgstAmt / 2).toFixed(2),\r\n                        IGST: 0,\r\n                        GSTPercentage: ele.GST,\r\n                        CGSTPercentage: (ele.GST / 2),\r\n                        SGSTPercentage: (ele.GST / 2),\r\n                        IGSTPercentage: 0,\r\n                        Amount: amount,\r\n                        TaxType: 'GST',\r\n                        DiscountType: \"\",\r\n                        Discount: \"0\",\r\n                        DiscountAmount: \"0\",\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n        debugger\r\n        // if (formValid(state, setState)) {\r\n        if (validMsg.length > 0) {\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(validMsg),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n            return\r\n        }\r\n\r\n\r\n\r\n        const forInvoice_1_json = () => ({  // Json Body Generate For Invoice_1  Start+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n            InvoiceDate: values.InvoiceDate,\r\n            InvoiceItems: invoiceItems,\r\n            // InvoicesReferences: OrderIDs.map(i => ({ Order: i }))\r\n        });\r\n\r\n        const forInvoice_2_json = () => ({    //   Json Body Generate For Invoice_2  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n            IBChallanDate: values.InvoiceDate,\r\n            IBChallanItems: invoiceItems,\r\n            // IBChallansReferences: OrderIDs.map(i => ({ Order: i }))\r\n        });\r\n\r\n        const for_common_json = () => ({     //   Json Body Generate Common for Both +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n            CustomerGSTTin: '41',\r\n            GrandTotal: Math.round(grand_total),\r\n            RoundOffAmount: (grand_total - Math.trunc(grand_total)).toFixed(2),\r\n            Customer: values.Customer.value,\r\n            Party: userParty(),\r\n            CreatedBy: createdBy(),\r\n            UpdatedBy: createdBy(),\r\n        });\r\n\r\n\r\n        let jsonBody;  //json body decleration \r\n        if (subPageMode === url.INVOICE_1) {\r\n            jsonBody = JSON.stringify({ ...for_common_json(), ...forInvoice_1_json() });\r\n        } else if (subPageMode === url.INVOICE_2) {\r\n            jsonBody = JSON.stringify({ ...for_common_json(), ...forInvoice_2_json() });\r\n        }\r\n        // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n        if (pageMode === mode.edit) {\r\n        }\r\n\r\n        else {\r\n\r\n            // saveDissable({ id: saveBtnid, state: true })\r\n            // dispatch(postInvoiceMaster(jsonBody, saveBtnid));\r\n        }\r\n\r\n    }\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags> <title>{userAccess.PageHeading}| FoodERP-React FrontEnd</title></MetaTags>\r\n\r\n                <div className=\"page-content\" >\r\n\r\n                    <form onSubmit={SaveHandler} noValidate>\r\n                        <Col className=\"px-2 mb-1 c_card_filter header text-black\" sm={12}>\r\n                            <Row>\r\n                                <Col className=\" mt-1 row \" sm={12} >\r\n                                    <Col sm={3}>\r\n                                        <FormGroup className=\"row mt-2 mb-3  \">\r\n                                            <Label className=\"mt-1\" style={{ width: \"110px\" }}>Challan Date </Label>\r\n                                            <Col sm={7}>\r\n                                                <Flatpickr\r\n                                                    name=\"InvoiceDate\"\r\n                                                    value={values.InvoiceDate}\r\n                                                    className=\"form-control d-block bg-white text-dark\"\r\n                                                    id=\"myInput11\"\r\n                                                    disabled={(Data.length > 0 || pageMode === \"edit\") ? true : false}\r\n\r\n                                                    options={{\r\n                                                        dateFormat: \"Y-m-d\",\r\n                                                    }}\r\n                                                    onChange={ChallanDateOnchange}\r\n                                                />\r\n                                                {isError.InvoiceDate.length > 0 && (\r\n                                                    <span className=\"invalid-feedback\">{isError.InvoiceDate}</span>\r\n                                                )}\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col  sm={3}>\r\n                                        <FormGroup className=\"row mt-2 mb-3 \">\r\n                                            <Label className=\"mt-2\" style={{ width: \"80px\" }}> Party </Label>\r\n                                            <Col sm={8}>\r\n                                                <Select\r\n                                                    name=\"Customer\"\r\n                                                    value={values.party}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={Data.length > 0 ? true : false}\r\n                                                    id={'customerselect'}\r\n                                                    className=\"react-dropdown\"\r\n                                                    classNamePrefix=\"dropdown\"\r\n                                                    options={venderOptions}\r\n                                                    // onChange={PartyOnchange}\r\n                                                />\r\n                                                {isError.Customer.length > 0 && (\r\n                                                    <span className=\"text-danger f-8\"><small>{isError.Customer}</small></span>\r\n                                                )}\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col >\r\n                                    <Col sm={3}>\r\n                                        <FormGroup className=\"row mt-2 mb-3 \">\r\n                                            <Label className=\"mt-2\" style={{ width: \"80px\" }}> Item </Label>\r\n                                            <Col sm={8} >\r\n                                                <Select\r\n                                                    name=\"Customer\"\r\n                                                    value={values.Item}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={Data.length > 0 ? true : false}\r\n                                                    id={'customerselect'}\r\n                                                    className=\"react-dropdown\"\r\n                                                    classNamePrefix=\"dropdown\"\r\n                                                    options={ItemsOption}\r\n                                                    onChange={PartyOnchange}\r\n\r\n                                                />\r\n                                                {isError.Customer.length > 0 && (\r\n                                                    <span className=\"text-danger f-8\"><small>{isError.Customer}</small></span>\r\n                                                )}\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Col >\r\n                                    <Col sm={2} className=\"mt-3\">\r\n                                    {pageMode === mode.defaultsave ?\r\n                                        (Data.length === 0) ?\r\n                                            < Go_Button onClick={(e) => goButtonHandler()} />\r\n                                            :\r\n                                            <Change_Button onClick={(e) => dispatch(GoButtonForchallanAddSuccess([]))} />\r\n                                        : null\r\n                                    }\r\n                                </Col>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <PaginationProvider pagination={paginationFactory(pageOptions)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                                <ToolkitProvider\r\n                                \r\n                                    keyField={\"id\"}\r\n                                    data={Data}\r\n                                    columns={pagesListColumns}\r\n\r\n                                    search\r\n                                >\r\n                                    {(toolkitProps) => (\r\n                                        <React.Fragment>\r\n                                            <Row>\r\n                                                <Col xl=\"12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <BootstrapTable\r\n                                                            keyField={\"id\"}\r\n                                                            responsive\r\n                                                            bordered={false}\r\n                                                            striped={false}\r\n                                                            classes={\"table  table-bordered\"}\r\n                                                            noDataIndication={\r\n                                                                <div className=\"text-danger text-center \">\r\n                                                                    Items Not available\r\n                                                                </div>\r\n                                                            }\r\n                                                            {...toolkitProps.baseProps}\r\n                                                            {...paginationTableProps}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"align-items-md-center mt-30\">\r\n                                                <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                    <PaginationListStandalone {...paginationProps} />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                </ToolkitProvider>\r\n                            )}\r\n\r\n                        </PaginationProvider>\r\n\r\n                        {Data.length > 0 ? <FormGroup>\r\n                            <Col sm={2} style={{ marginLeft: \"-40px\" }} className={\"row save1\"}>\r\n                                <SaveButton pageMode={pageMode}\r\n                                    //   onClick={onsave}\r\n                                    id={saveBtnid}\r\n                                    userAcc={userPageAccessState}\r\n                                    module={\"Material Issue\"}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup > : null}\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Challan;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}