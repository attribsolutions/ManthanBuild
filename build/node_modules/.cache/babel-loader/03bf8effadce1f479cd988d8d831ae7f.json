{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rohit\\\\Git projects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\ItemPages\\\\ItemMaster\\\\itemIndex.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classnames from \"classnames\";\nimport Breadcrumb from \"../../../../components/Common/Breadcrumb\";\nimport { AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { fetchCompanyList } from \"../../../../store/Administrator/CompanyRedux/actions\";\nimport { editItemSuccess, getBaseUnit_ForDropDown, get_CategoryTypes_ForDropDown, get_Category_By_CategoryType_ForDropDownAPI, get_Division_ForDropDown, get_ImageType_ForDropDown, get_Party_ForDropDown, get_PriceList_ForDropDown, postItemData, PostItemDataSuccess, updateItemID } from \"../../../../store/Administrator/ItemsRedux/action\";\nimport { AlertState, Breadcrumb_inputName, getCategoryTypelist } from \"../../../../store/actions\";\nimport { getPartyListAPI } from \"../../../../store/Administrator/PartyRedux/action\";\nimport GSTTab from \"./GST_Tab\";\nimport MRPTab from \"./MRP_Tab\";\nimport Margin_Tab from \"./MarginTab/index\";\nimport GroupTab from \"./Group_Tab\";\nimport UnitConverstion from \"./UnitConversion_Tab/Index\";\nimport Image from \"./Image_Tab/Index\";\nimport { createdBy, saveDissable } from \"../../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\nimport { initialFiledFunc, resetFunction } from \"../../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemsMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [EditData, setEditData] = useState({});\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(\"save\");\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [activeTab1, setactiveTab1] = useState(\"1\");\n  let initial = {\n    Name: \"\",\n    Sequence: \"\",\n    ShortName: \"\",\n    BarCode: '',\n    Company: [],\n    BaseUnit: [],\n    Category: [],\n    CategoryType: [],\n    Division: [],\n    MRP: '',\n    GST: '',\n    HSN: '',\n    isActive: true,\n    Tag: '',\n    BrandName: ''\n  };\n  const initialInValid = [\"txtName0\", \"txtShortName0\"];\n  const [inValidDrop, setInValidDrop] = useState({\n    BaseUnit: false,\n    Company: false,\n    CategoryType: false,\n    Category: false,\n    Division: false\n  });\n  let [isValidate, setIsValidate] = useState(initialInValid);\n  const [formValue, setFormValue] = useState(initial);\n  const [pageRefresh, setpageRefresh] = useState(false);\n  const [marginMaster, setMarginMaster] = useState([]);\n  const [imageTabTable, setImageTabTable] = useState([{\n    ImageType: '',\n    ImageUpload: ''\n  }]);\n  console.log(\"imageTabTable\", imageTabTable);\n  const [baseUnitTableData, setBaseUnitTableData] = useState([{\n    Conversion: '',\n    Unit: '',\n    IsBase: false\n  }]);\n  const [MRP_Tab_TableData, setMRP_Tab_TableData] = useState([]);\n  const [Group_Tab_TableData, setGroup_Tab_TableData] = useState([]);\n  const [GStDetailsMaster, setGStDetailsMaster] = useState([]);\n  const {\n    companyList,\n    BaseUnit,\n    PostAPIResponse,\n    userAccess,\n    Division,\n    CategoryTypeList,\n    CategoryList\n  } = useSelector(state => ({\n    companyList: state.Company.companyList,\n    BaseUnit: state.ItemMastersReducer.BaseUnit,\n    userAccess: state.Login.RoleAccessUpdateData,\n    PostAPIResponse: state.ItemMastersReducer.postMessage,\n    Division: state.ItemMastersReducer.Division,\n    CategoryTypeList: state.categoryTypeReducer.categoryTypeListData,\n    CategoryList: state.ItemMastersReducer.Category\n  }));\n  const fileds = {\n    id: \"\",\n    Name: \"\"\n  };\n  const [state, setState] = useState(() => initialFiledFunc(fileds));\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]);\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        setEditData(hasEditVal);\n        dispatch(Breadcrumb_inputName(hasEditVal.Name));\n        const editDivision = hasEditVal.ItemDivisionDetails.map(index => ({\n          value: index.Division,\n          label: index.DivisionName\n        }));\n        const editCategoryType = {\n          value: hasEditVal.ItemCategoryDetails[0].CategoryType,\n          label: hasEditVal.ItemCategoryDetails[0].CategoryTypeName\n        };\n        const editCategory = hasEditVal.ItemCategoryDetails.map(index => ({\n          value: index.Category,\n          label: index.CategoryName\n        }));\n        let initialFormValue = {\n          // ====================== Base detail tab ======================\n          Name: hasEditVal.Name,\n          Sequence: hasEditVal.Sequence,\n          ShortName: hasEditVal.ShortName,\n          BarCode: hasEditVal.BarCode,\n          Company: {\n            label: hasEditVal.CompanyName,\n            value: hasEditVal.Company\n          },\n          CategoryType: editCategoryType,\n          Category: editCategory,\n          Division: editDivision,\n          BaseUnit: {\n            label: hasEditVal.BaseUnitName,\n            value: hasEditVal.BaseUnitID\n          },\n          isActive: hasEditVal.isActive\n        }; // ====================== Images tab ======================\n\n        let ItemImagesDetails = hasEditVal.ItemImagesDetails.map(index => {\n          debugger;\n          return {\n            ImageType: {\n              label: index.ImageTypeName,\n              value: index.ImageType\n            },\n            ImageUpload: index.Item_pic\n          };\n        }); // ====================== Unit Conversion tab  start ======================\n\n        const UnitDetails = [];\n        hasEditVal.ItemUnitDetails.forEach(index => {\n          if (!index.IsBase) {\n            UnitDetails.push({\n              Unit: {\n                label: index.UnitName,\n                value: index.UnitID\n              },\n              Conversion: index.BaseUnitQuantity,\n              IsBase: false\n            });\n          }\n        });\n\n        if (UnitDetails.length === 0) {\n          UnitDetails.push({\n            Unit: '',\n            Conversion: '',\n            IsBase: false\n          });\n        }\n\n        ;\n        setBaseUnitTableData(UnitDetails); // ====================== Unit Conversion tab  end ======================\n\n        setFormValue(initialFormValue);\n        setImageTabTable(ItemImagesDetails);\n        setMRP_Tab_TableData(hasEditVal.ItemMRPDetails);\n        setMarginMaster(hasEditVal.ItemMarginDetails);\n        setGStDetailsMaster(hasEditVal.ItemGSTHSNDetails);\n        setGroup_Tab_TableData(hasEditVal.ItemGroupDetails);\n        dispatch(editItemSuccess({\n          Status: false\n        }));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200 && !(pageMode === \"dropdownAdd\")) {\n      dispatch(PostItemDataSuccess({\n        Status: false\n      }));\n      setState(() => resetFunction(fileds, state)); //+++++++++ Clear form values\n\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/ItemList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      saveDissable(false); //+++++++++save Button Is enable function\n\n      dispatch(PostItemDataSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostAPIResponse.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    dispatch(fetchCompanyList());\n    dispatch(getBaseUnit_ForDropDown());\n    dispatch(get_CategoryTypes_ForDropDown());\n    dispatch(getPartyListAPI());\n    dispatch(get_ImageType_ForDropDown());\n    dispatch(get_Division_ForDropDown());\n    dispatch(get_Party_ForDropDown());\n    dispatch(get_PriceList_ForDropDown());\n    dispatch(getCategoryTypelist());\n    dispatch(get_Category_By_CategoryType_ForDropDownAPI());\n  }, [dispatch]);\n\n  const toggle1 = tab => {\n    if (activeTab1 !== tab) {\n      setactiveTab1(tab);\n    }\n  };\n\n  const Company_DropdownOptions = companyList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const BaseUnit_DropdownOptions = BaseUnit.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const CategoryTypeList_DropdownOptions = CategoryTypeList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const CategoryList_DropdownOptions = CategoryList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const Division_DropdownOptions = Division.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function dropDownValidation(event, type) {\n    let returnVal = event.value === '';\n\n    if (returnVal) {\n      inValidDrop[type] = true;\n      return;\n    } else {\n      formValue[type] = event;\n      inValidDrop[type] = false;\n    }\n\n    setpageRefresh(!pageRefresh);\n  }\n\n  function Common_Text_INPUT_Validation(value, type, key) {\n    let OnchangeControl = document.getElementById(`txt${type}${key}`);\n\n    if (value === '') {\n      OnchangeControl.className = 'form-control is-invalid';\n      return false;\n    } else {\n      OnchangeControl.className = 'form-control';\n      return true;\n    }\n  }\n\n  function CommonTab_SimpleText_INPUT_handller_ForAll(event, type, key) {\n    let validateReturn = Common_Text_INPUT_Validation(event, type, 0);\n\n    if (validateReturn === false) {\n      isValidate.push(`txt${type}0`);\n      return;\n    } else {\n      formValue[type] = event;\n      isValidate = isValidate.filter(indF => {\n        return !(indF === `txt${type}0`);\n      });\n      setIsValidate(isValidate);\n    }\n  }\n\n  const CategoryType_Handler = event => {\n    dropDownValidation(event, \"CategoryType\");\n    dispatch(get_Category_By_CategoryType_ForDropDownAPI(event.value));\n  };\n\n  const Category_Handler = event => {\n    dropDownValidation(event, \"Category\");\n  };\n\n  const Division_Handler = event => {\n    dropDownValidation(event, \"Division\");\n  };\n\n  const handleValidSubmit = (event, values) => {\n    let isvalid = true;\n    let inValidMsg = [];\n\n    if (formValue.Name === '') {\n      document.getElementById(\"txtName0\").className = \"form-control is-invalid\";\n      inValidMsg.push(\"Name: Is Requried\");\n      isvalid = false;\n    }\n\n    if (formValue.ShortName === '') {\n      document.getElementById(\"txtShortName0\").className = \"form-control is-invalid\";\n      isvalid = false;\n      inValidMsg.push(\"ShortName: Is Requried\");\n    }\n\n    if (formValue.Company.length < 1) {\n      inValidDrop.Company = true;\n      isvalid = false;\n      inValidMsg.push(\"Company: Is Requried\");\n    }\n\n    if (formValue.BaseUnit.length < 1) {\n      inValidDrop.BaseUnit = true;\n      isvalid = false;\n      inValidMsg.push(\"BaseUnit: Is Requried\");\n    }\n\n    if (formValue.CategoryType.length < 1) {\n      inValidDrop.CategoryType = true;\n      isvalid = false;\n      inValidMsg.push(\"CategoryType: Is Requried\");\n    }\n\n    if (formValue.Category.length < 1) {\n      inValidDrop.Category = true;\n      isvalid = false;\n      inValidMsg.push(\"Category: Is Requried\");\n    }\n\n    if (formValue.Division.length < 1) {\n      inValidDrop.Division = true;\n      isvalid = false;\n      inValidMsg.push(\"Division:Is Requried\");\n    }\n\n    if (!Group_Tab_TableData.length > 0) {\n      isvalid = false;\n      inValidMsg.push(\" GroupType Primary:Is Requried\");\n    } else {\n      const found = Group_Tab_TableData.find(element => {\n        return element.GroupTypeName === \"Primary\";\n      });\n\n      if (found === undefined) {\n        isvalid = false;\n        inValidMsg.push(\" GroupType Primary:Is Requried\");\n      }\n    }\n\n    if (isvalid) {\n      /// ************* is valid if start \n      // ====================== Unit conversion *****start ======================\n      const itemUnitDetails = [];\n      baseUnitTableData.forEach((index, key) => {\n        let val1 = index.Conversion;\n        const unit1 = index.Unit.value;\n\n        if (!(val1 === '')) {\n          val1 = parseFloat(val1).toFixed(3);\n        }\n\n        const found = baseUnitTableData.find((i, k) => {\n          let inner = i.Conversion;\n\n          if (!(inner === '')) {\n            inner = parseFloat(inner).toFixed(3);\n          }\n\n          return val1 === inner && unit1 === i.Unit.value && !(key === k);\n        });\n        const found2 = itemUnitDetails.find((i, k) => {\n          return val1 === i.BaseUnitQuantity && unit1 === i.UnitID && !(key === k);\n        });\n        if ((found === undefined || found2 === undefined) && !(val1 === '') && !(unit1 === '')) if ((found === undefined || found2 === undefined) && !(index.Conversion === '') && !(index.Unit === '')) {\n          itemUnitDetails.push({\n            BaseUnitQuantity: index.Conversion,\n            UnitID: index.Unit.value,\n            IsBase: index.IsBase\n          });\n        }\n      });\n      if (pageMode === 'save') itemUnitDetails.push({\n        BaseUnitQuantity: 1,\n        UnitID: formValue.BaseUnit.value,\n        IsBase: true\n      }); //  ======================   ItemCategoryDetails *****start   ====================== \n\n      const ItemCategoryDetails = formValue.Category.map(index => ({\n        CategoryType: formValue.CategoryType.value,\n        Category: index.value\n      })); //  ======================   MRP_Tab_TableData *****start   ====================== \n\n      let hasAdd_MRP = [];\n      MRP_Tab_TableData.forEach(index => {\n        if (index.IsAdd === true) {\n          hasAdd_MRP.push(index);\n        }\n      }); // ======================  marginMaster *****start   ====================== \n\n      let hasAdd_Margin = [];\n      marginMaster.forEach(index => {\n        if (index.IsAdd === true) {\n          hasAdd_Margin.push(index);\n        }\n      }); // ======================  GStDetailsMaster *****start   ====================== \n\n      let hasAdd_GST = [];\n      GStDetailsMaster.forEach(index => {\n        if (index.IsAdd === true) {\n          hasAdd_GST.push(index);\n        }\n      });\n      debugger;\n      const jsonBody = JSON.stringify({\n        Name: formValue.Name,\n        ShortName: formValue.ShortName,\n        Sequence: formValue.Sequence,\n        BarCode: formValue.BarCode,\n        isActive: formValue.isActive,\n        Company: formValue.Company.value,\n        BaseUnitID: formValue.BaseUnit.value,\n        BrandName: formValue.BrandName,\n        Tag: formValue.Tag,\n        CreatedBy: createdBy(),\n        UpdatedBy: createdBy(),\n        ItemCategoryDetails: ItemCategoryDetails,\n        ItemUnitDetails: itemUnitDetails,\n        ItemDivisionDetails: formValue.Division.map(i => {\n          return {\n            Division: i.value\n          };\n        }),\n        ItemImagesDetails: imageTabTable.map(i => ({\n          ImageType: i.ImageType.value,\n          Item_pic: i.ImageUpload\n        })),\n        ItemMRPDetails: hasAdd_MRP,\n        ItemMarginDetails: hasAdd_Margin,\n        ItemGSTHSNDetails: hasAdd_GST,\n        ItemGroupDetails: Group_Tab_TableData\n      });\n      saveDissable(true); //+++++++++save Button Is dissable function\n\n      if (pageMode === 'edit') {\n        dispatch(updateItemID(jsonBody, EditData.id));\n        console.log(\"items edit json\", jsonBody);\n      } else {\n        dispatch(postItemData(jsonBody));\n        console.log(\"items post json\", jsonBody);\n      }\n    } /// ************* is valid if start \n    else {\n      /// ************* is valid esle start \n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(inValidMsg),\n        // Message: (inValidMsg),\n        RedirectPath: false,\n        PermissionAction: false\n      }));\n    }\n  }; // autocomplet item\n  // function autocomplete(inp, arr) {\n  //     /*the autocomplete function takes two arguments,\n  //     the text field element and an array of possible autocompleted values:*/\n  //     var currentFocus;\n  //     /*execute a function when someone writes in the text field:*/\n  //     inp.addEventListener(\"input\", function (e) {\n  //         var a, b, i, val = this.value;\n  //         /*close any already open lists of autocompleted values*/\n  //         closeAllLists();\n  //         if (!val) { return false; }\n  //         currentFocus = -1;\n  //         /*create a DIV element that will contain the items (values):*/\n  //         a = document.createElement(\"DIV\");\n  //         a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n  //         a.setAttribute(\"class\", \"autocomplete-items\");\n  //         /*append the DIV element as a child of the autocomplete container:*/\n  //         this.parentNode.appendChild(a);\n  //         /*for each item in the array...*/\n  //         for (i = 0; i < arr.length; i++) {\n  //             /*check if the item starts with the same letters as the text field value:*/\n  //             if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n  //                 /*create a DIV element for each matching element:*/\n  //                 b = document.createElement(\"DIV\");\n  //                 /*make the matching letters bold:*/\n  //                 b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\n  //                 b.innerHTML += arr[i].substr(val.length);\n  //                 /*insert a input field that will hold the current array item's value:*/\n  //                 b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n  //                 /*execute a function when someone clicks on the item value (DIV element):*/\n  //                 b.addEventListener(\"click\", function (e) {\n  //                     /*insert the value for the autocomplete text field:*/\n  //                     inp.value = this.getElementsByTagName(\"input\")[0].value;\n  //                     /*close the list of autocompleted values,\n  //                     (or any other open lists of autocompleted values:*/\n  //                     closeAllLists();\n  //                 });\n  //                 a.appendChild(b);\n  //             }\n  //         }\n  //     });\n  //     /*execute a function presses a key on the keyboard:*/\n  //     inp.addEventListener(\"keydown\", function (e) {\n  //         var x = document.getElementById(this.id + \"autocomplete-list\");\n  //         if (x) x = x.getElementsByTagName(\"div\");\n  //         if (e.keyCode == 40) {\n  //             /*If the arrow DOWN key is pressed,\n  //             increase the currentFocus variable:*/\n  //             currentFocus++;\n  //             /*and and make the current item more visible:*/\n  //             addActive(x);\n  //         } else if (e.keyCode == 38) { //up\n  //             /*If the arrow UP key is pressed,\n  //             decrease the currentFocus variable:*/\n  //             currentFocus--;\n  //             /*and and make the current item more visible:*/\n  //             addActive(x);\n  //         } else if (e.keyCode == 13) {\n  //             /*If the ENTER key is pressed, prevent the form from being submitted,*/\n  //             e.preventDefault();\n  //             if (currentFocus > -1) {\n  //                 /*and simulate a click on the \"active\" item:*/\n  //                 if (x) x[currentFocus].click();\n  //             }\n  //         }\n  //     });\n  //     function addActive(x) {\n  //         /*a function to classify an item as \"active\":*/\n  //         if (!x) return false;\n  //         /*start by removing the \"active\" class on all items:*/\n  //         removeActive(x);\n  //         if (currentFocus >= x.length) currentFocus = 0;\n  //         if (currentFocus < 0) currentFocus = (x.length - 1);\n  //         /*add class \"autocomplete-active\":*/\n  //         x[currentFocus].classList.add(\"autocomplete-active\");\n  //     }\n  //     function removeActive(x) {\n  //         /*a function to remove the \"active\" class from all autocomplete items:*/\n  //         for (var i = 0; i < x.length; i++) {\n  //             x[i].classList.remove(\"autocomplete-active\");\n  //         }\n  //     }\n  //     function closeAllLists(elmnt) {\n  //         /*close all autocomplete lists in the document,\n  //         except the one passed as an argument:*/\n  //         var x = document.getElementsByClassName(\"autocomplete-items\");\n  //         for (var i = 0; i < x.length; i++) {\n  //             if (elmnt != x[i] && elmnt != inp) {\n  //                 x[i].parentNode.removeChild(x[i]);\n  //             }\n  //         }\n  //     }\n  //     /*execute a function when someone clicks in the document:*/\n  //     document.addEventListener(\"click\", function (e) {\n  //         closeAllLists(e.target);\n  //     });\n  // }\n  // var countries = [\"Afghanistan\", \"Albania\", \"Algeria\",\n  //     \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua & Barbuda\", \"Argentina\",\n  //     \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\",\n  //     \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\",\n  //     \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia & Herzegovina\", \"Botswana\",\n  //     \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\",\n  //     \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central Arfrican Republic\", \"Chad\",\n  //     \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cuba\",\n  //     \"Curacao\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\",\n  //     \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe\",\n  //     \"Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\",\n  //     \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\",\n  //     \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\",\n  //     \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\",\n  //     \"Kenya\", \"Kiribati\", \"Kosovo\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\",\n  //     \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\",\n  //     \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Micronesia\", \"Moldova\",\n  //     \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauro\", \"Nepal\", \"Netherlands\",\n  //     \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"North Korea\", \"Norway\",\n  //     \"Oman\", \"Pakistan\", \"Palau\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\",\n  //     \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre & Miquelon\", \"Samoa\",\n  //     \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\",\n  //     \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Korea\", \"South Sudan\", \"Spain\",\n  //     \"Sri Lanka\", \"St Kitts & Nevis\", \"St Lucia\", \"St Vincent\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\",\n  //     \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad & Tobago\", \"Tunisia\", \"Turkey\",\n  //     \"Turkmenistan\", \"Turks & Caicos\",\n  //     \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States of America\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\",\n  //     \"Vatican City\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\n  // autocomplete(document.getElementById(\"myInput\"), countries);\n  // autocomplet item\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css,\n          marginBottom: \"1cm\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: [userPageAccessState.PageHeading, \" | FoodERP-React FrontEnd\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            pageHeading: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n            onValidSubmit: (e, v) => {\n              handleValidSubmit(e, v);\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"text-black\",\n                  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                    className: \"card-header   text-black c_card_header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"card-title text-black\",\n                      children: userPageAccessState.PageDescription\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 765,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-title-desc text-black\",\n                      children: userPageAccessState.PageDescriptionDetails\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                    children: [/*#__PURE__*/_jsxDEV(Nav, {\n                      tabs: true,\n                      className: \"nav-tabs-custom nav-justified\",\n                      children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-1\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"1\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"1\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 782,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 781,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Basic Info\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 784,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 771,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 770,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-2\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"2\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"2\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 800,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 799,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Item Group\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 802,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 789,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 788,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-3\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"3\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"3\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 818,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 817,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Unit Conversions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 820,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 807,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 806,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-5\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"4\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"4\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 835,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 834,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 837,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 824,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 823,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-5\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"5\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"5\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 853,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 852,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"MRP\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 855,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 842,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 841,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-6\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"6\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"6\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 871,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 870,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"Margin\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 873,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 860,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 859,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          id: \"nave-link-7\",\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: classnames({\n                            active: activeTab1 === \"7\"\n                          }),\n                          onClick: () => {\n                            toggle1(\"7\");\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-block d-sm-none\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-home\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 889,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 888,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"d-none d-sm-block\",\n                            children: \"GST Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 891,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 878,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 877,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n                      activeTab: activeTab1,\n                      className: \"p-3 text-muted\",\n                      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"1\",\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          md: 12,\n                          children: /*#__PURE__*/_jsxDEV(Card, {\n                            className: \"text-black\",\n                            children: /*#__PURE__*/_jsxDEV(CardBody, {\n                              className: \"c_card_body\",\n                              children: [/*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    children: \"Name\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 906,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    type: \"text\",\n                                    id: \"txtName0\",\n                                    placeholder: \" Please Enter Name \",\n                                    defaultValue: EditData.Name,\n                                    autoComplete: \"off\" // onChange={(e) => { dispatch(Breadcrumb_inputName(e.target.value)) }}\n                                    ,\n                                    onChange: e => {\n                                      dispatch(Breadcrumb_inputName(e.target.value));\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Name\");\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 907,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 905,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    children: \"ShortName\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 923,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    type: \"text\",\n                                    id: \"txtShortName0\",\n                                    className: \"\",\n                                    defaultValue: EditData.ShortName,\n                                    placeholder: \" Please Enter ShortName \",\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"ShortName\");\n                                    } // onChange={(e) => { formValue.ShortName = e.target.value }}\n\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 924,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 922,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \" col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom21\",\n                                    children: \"Company\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 936,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    id: \"dropCompany-0\",\n                                    value: formValue.Company,\n                                    options: Company_DropdownOptions,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.Company ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: event => dropDownValidation(event, \"Company\")\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 937,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 935,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 903,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \" col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom21\",\n                                    children: \"Base Unit\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 956,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    id: \"dropBaseUnit-0\",\n                                    value: formValue.BaseUnit,\n                                    options: BaseUnit_DropdownOptions,\n                                    isDisabled: pageMode === \"edit\" ? true : false,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.BaseUnit ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: event => dropDownValidation(event, \"BaseUnit\")\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 957,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 955,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"BarCode\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 974,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    id: \"txtBarCode0\",\n                                    placeholder: \" Please Enter BarCode \",\n                                    defaultValue: EditData.BarCode,\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"BarCode\");\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 975,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 973,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"Sequence\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 985,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    id: \"txtSequence0\",\n                                    defaultValue: EditData.Sequence,\n                                    placeholder: \" Please Enter Sequence \",\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Sequence\");\n                                    } // onChange={(e) => { formValue.Sequence = e.target.value }}\n\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 986,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 984,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 954,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    children: \"Category Type\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1000,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    id: `dropCategoryType-${0}`,\n                                    value: formValue.CategoryType,\n                                    options: CategoryTypeList_DropdownOptions,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.CategoryType ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: e => {\n                                      CategoryType_Handler(e);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1001,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 999,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    className: \"form-label font-size-13 \",\n                                    children: \"Category\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1019,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    defaultValue: formValue.Category,\n                                    isMulti: true,\n                                    className: \"basic-multi-select\",\n                                    options: CategoryList_DropdownOptions,\n                                    styles: {\n                                      control: base => ({ ...base,\n                                        border: inValidDrop.Category ? '1px solid red' : ''\n                                      })\n                                    },\n                                    onChange: e => {\n                                      Category_Handler(e);\n                                    },\n                                    classNamePrefix: \"select2-selection\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1020,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1017,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"Brand Name\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1037,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    id: \"txtBrandName0\",\n                                    defaultValue: EditData.BrandName,\n                                    placeholder: \" Please Enter Brand Name \",\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"BrandName\");\n                                    } // onChange={(e) => { formValue.Sequence = e.target.value }}\n\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1038,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1036,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 998,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"mb-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                                      className: \"form-label font-size-13 \",\n                                      children: \"Division\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1052,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                      defaultValue: formValue.Division,\n                                      isMulti: true,\n                                      className: \"basic-multi-select\",\n                                      options: Division_DropdownOptions,\n                                      styles: {\n                                        control: base => ({ ...base,\n                                          border: inValidDrop.Division ? '1px solid red' : ''\n                                        })\n                                      },\n                                      onChange: e => {\n                                        Division_Handler(e);\n                                      },\n                                      classNamePrefix: \"select2-selection\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1053,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1051,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1050,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"Item Tag\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1072,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                    type: \"textarea\",\n                                    rows: \"1\",\n                                    id: \"txtTag0\",\n                                    defaultValue: EditData.Tag,\n                                    placeholder: \" Please Enter Item Tag \",\n                                    autoComplete: \"off\",\n                                    onChange: e => {\n                                      CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Tag\");\n                                    } // onChange={(e) => { formValue.Sequence = e.target.value }}\n\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1073,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1071,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mt-4 col col-md-4\",\n                                  children: /*#__PURE__*/_jsxDEV(Row, {\n                                    className: \"justify-content-ml-left \",\n                                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                                      htmlFor: \"horizontal-firstname-input\",\n                                      className: \"col-md-3 col-form-label\",\n                                      children: \"Active \"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1087,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                      md: 6,\n                                      style: {\n                                        marginTop: '9px'\n                                      },\n                                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                        className: \"form-check form-switch form-switch-md mb-3\",\n                                        dir: \"ltr\",\n                                        children: /*#__PURE__*/_jsxDEV(Input, {\n                                          type: \"checkbox\",\n                                          className: \"form-check-input\",\n                                          id: \"customSwitchsizemd\",\n                                          defaultChecked: formValue.isActive,\n                                          onChange: e => {\n                                            formValue.isActive = e.target.checked;\n                                          }\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 1092,\n                                          columnNumber: 85\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 1091,\n                                        columnNumber: 81\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 1089,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1086,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1085,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1049,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 902,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 901,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 900,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 899,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"2\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(GroupTab, {\n                                  tableData: Group_Tab_TableData,\n                                  func: setGroup_Tab_TableData\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1115,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1114,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1113,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1112,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1111,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1110,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(UnitConverstion, {\n                          state: {\n                            pageMode: pageMode,\n                            formValue: formValue,\n                            TableData: baseUnitTableData,\n                            BaseUnit: BaseUnit\n                          },\n                          settable: setBaseUnitTableData,\n                          setFormValue: setFormValue\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1124,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1123,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"4\",\n                        children: /*#__PURE__*/_jsxDEV(Image, {\n                          state: {\n                            imageTable: imageTabTable,\n                            setImageTable: setImageTabTable\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1244,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1243,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"5\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(MRPTab, {\n                                  tableData: MRP_Tab_TableData,\n                                  func: setMRP_Tab_TableData\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1256,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1255,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1254,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1253,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1252,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1251,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"6\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(Margin_Tab, {\n                                  tableData: marginMaster,\n                                  func: setMarginMaster\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1268,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1267,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1266,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1265,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1264,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1263,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                        tabId: \"7\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              className: \"mt-3\",\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                className: \" col col-12 \",\n                                children: /*#__PURE__*/_jsxDEV(GSTTab, {\n                                  tableData: GStDetailsMaster,\n                                  func: setGStDetailsMaster\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1281,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1280,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1279,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1278,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1277,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1276,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 897,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        sm: 2,\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            paddingLeft: \"14px\"\n                          },\n                          children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"submit\",\n                            \"data-mdb-toggle\": \"tooltip\",\n                            \"data-mdb-placement\": \"top\",\n                            title: \"Update Role\",\n                            className: \"btn btn-success w-md\",\n                            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-edit me-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1300,\n                              columnNumber: 73\n                            }, this), \"Update\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1295,\n                            columnNumber: 69\n                          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"submit\",\n                            \"data-mdb-toggle\": \"tooltip\",\n                            \"data-mdb-placement\": \"top\",\n                            title: \"Save Role\",\n                            className: \"btn btn-primary w-md\",\n                            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-save me-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1310,\n                              columnNumber: 75\n                            }, this), \" Save\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1306,\n                            columnNumber: 73\n                          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1291,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1290,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1289,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1332,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(ItemsMaster, \"4iIuvAQmAPBFgAk4NQ2vM/Y0wNU=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ItemsMaster;\nexport default ItemsMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsMaster\");","map":{"version":3,"names":["React","useEffect","useState","MetaTags","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Nav","NavItem","NavLink","Row","TabContent","TabPane","useHistory","useDispatch","useSelector","classnames","Breadcrumb","AvForm","Select","fetchCompanyList","editItemSuccess","getBaseUnit_ForDropDown","get_CategoryTypes_ForDropDown","get_Category_By_CategoryType_ForDropDownAPI","get_Division_ForDropDown","get_ImageType_ForDropDown","get_Party_ForDropDown","get_PriceList_ForDropDown","postItemData","PostItemDataSuccess","updateItemID","AlertState","Breadcrumb_inputName","getCategoryTypelist","getPartyListAPI","GSTTab","MRPTab","Margin_Tab","GroupTab","UnitConverstion","Image","createdBy","saveDissable","initialFiledFunc","resetFunction","ItemsMaster","props","dispatch","history","EditData","setEditData","modalCss","setModalCss","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","activeTab1","setactiveTab1","initial","Name","Sequence","ShortName","BarCode","Company","BaseUnit","Category","CategoryType","Division","MRP","GST","HSN","isActive","Tag","BrandName","initialInValid","inValidDrop","setInValidDrop","isValidate","setIsValidate","formValue","setFormValue","pageRefresh","setpageRefresh","marginMaster","setMarginMaster","imageTabTable","setImageTabTable","ImageType","ImageUpload","console","log","baseUnitTableData","setBaseUnitTableData","Conversion","Unit","IsBase","MRP_Tab_TableData","setMRP_Tab_TableData","Group_Tab_TableData","setGroup_Tab_TableData","GStDetailsMaster","setGStDetailsMaster","companyList","PostAPIResponse","userAccess","CategoryTypeList","CategoryList","state","ItemMastersReducer","Login","RoleAccessUpdateData","postMessage","categoryTypeReducer","categoryTypeListData","fileds","id","setState","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","editDivision","ItemDivisionDetails","map","index","value","label","DivisionName","editCategoryType","ItemCategoryDetails","CategoryTypeName","editCategory","CategoryName","initialFormValue","CompanyName","BaseUnitName","BaseUnitID","ItemImagesDetails","ImageTypeName","Item_pic","UnitDetails","ItemUnitDetails","forEach","push","UnitName","UnitID","BaseUnitQuantity","length","ItemMRPDetails","ItemMarginDetails","ItemGSTHSNDetails","ItemGroupDetails","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","toggle1","tab","Company_DropdownOptions","data","BaseUnit_DropdownOptions","CategoryTypeList_DropdownOptions","CategoryList_DropdownOptions","Division_DropdownOptions","dropDownValidation","event","type","returnVal","Common_Text_INPUT_Validation","key","OnchangeControl","document","getElementById","className","CommonTab_SimpleText_INPUT_handller_ForAll","validateReturn","filter","indF","CategoryType_Handler","Category_Handler","Division_Handler","handleValidSubmit","values","isvalid","inValidMsg","found","element","GroupTypeName","undefined","itemUnitDetails","val1","unit1","parseFloat","toFixed","i","k","inner","found2","hasAdd_MRP","IsAdd","hasAdd_Margin","hasAdd_GST","jsonBody","CreatedBy","UpdatedBy","PermissionAction","IsEditMode_Css","marginTop","marginBottom","PageHeading","e","v","PageDescription","PageDescriptionDetails","cursor","active","target","control","base","border","checked","TableData","imageTable","setImageTable","paddingLeft","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/Rohit/Git projects/Manthan/src/pages/Adminisrator/ItemPages/ItemMaster/itemIndex.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport MetaTags from \"react-meta-tags\"\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    TabContent,\r\n    TabPane,\r\n} from \"reactstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classnames from \"classnames\"\r\nimport Breadcrumb from \"../../../../components/Common/Breadcrumb\";\r\nimport { AvForm } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport { fetchCompanyList } from \"../../../../store/Administrator/CompanyRedux/actions\"\r\nimport {\r\n    editItemSuccess,\r\n    getBaseUnit_ForDropDown,\r\n    get_CategoryTypes_ForDropDown,\r\n    get_Category_By_CategoryType_ForDropDownAPI,\r\n    get_Division_ForDropDown,\r\n    get_ImageType_ForDropDown,\r\n    get_Party_ForDropDown,\r\n    get_PriceList_ForDropDown,\r\n    postItemData,\r\n    PostItemDataSuccess,\r\n    updateItemID\r\n} from \"../../../../store/Administrator/ItemsRedux/action\";\r\nimport { AlertState, Breadcrumb_inputName, getCategoryTypelist } from \"../../../../store/actions\";\r\nimport { getPartyListAPI } from \"../../../../store/Administrator/PartyRedux/action\";\r\nimport GSTTab from \"./GST_Tab\";\r\nimport MRPTab from \"./MRP_Tab\";\r\nimport Margin_Tab from \"./MarginTab/index\";\r\nimport GroupTab from \"./Group_Tab\";\r\nimport UnitConverstion from \"./UnitConversion_Tab/Index\";\r\nimport Image from \"./Image_Tab/Index\";\r\nimport { createdBy, saveDissable } from \"../../../../components/Common/ComponentRelatedCommonFile/listPageCommonButtons\";\r\nimport { initialFiledFunc, resetFunction } from \"../../../../components/Common/ComponentRelatedCommonFile/validationFunction\";\r\n\r\nconst ItemsMaster = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n\r\n    const [EditData, setEditData] = useState({});\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(\"save\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n    const [activeTab1, setactiveTab1] = useState(\"1\")\r\n\r\n\r\n    let initial = {\r\n        Name: \"\",\r\n        Sequence: \"\",\r\n        ShortName: \"\",\r\n        BarCode: '',\r\n        Company: [],\r\n        BaseUnit: [],\r\n        Category: [],\r\n        CategoryType: [],\r\n        Division: [],\r\n        MRP: '',\r\n        GST: '',\r\n        HSN: '',\r\n        isActive: true,\r\n        Tag: '',\r\n        BrandName: ''\r\n    }\r\n\r\n    const initialInValid = [\"txtName0\", \"txtShortName0\",]\r\n    const [inValidDrop, setInValidDrop] = useState({\r\n        BaseUnit: false,\r\n        Company: false,\r\n        CategoryType: false,\r\n        Category: false,\r\n        Division: false\r\n    })\r\n    let [isValidate, setIsValidate] = useState(initialInValid);\r\n\r\n    const [formValue, setFormValue] = useState(initial);\r\n    const [pageRefresh, setpageRefresh] = useState(false);\r\n\r\n\r\n\r\n    const [marginMaster, setMarginMaster] = useState([]);\r\n\r\n    const [imageTabTable, setImageTabTable] = useState([{\r\n        ImageType: '',\r\n        ImageUpload: ''\r\n    }]);\r\n    console.log(\"imageTabTable\", imageTabTable)\r\n    const [baseUnitTableData, setBaseUnitTableData] = useState([{\r\n        Conversion: '',\r\n        Unit: '',\r\n        IsBase: false\r\n    }]);\r\n\r\n\r\n    const [MRP_Tab_TableData, setMRP_Tab_TableData] = useState([]);\r\n    const [Group_Tab_TableData, setGroup_Tab_TableData] = useState([]);\r\n    const [GStDetailsMaster, setGStDetailsMaster] = useState([]);\r\n\r\n\r\n    const {\r\n        companyList,\r\n        BaseUnit,\r\n        PostAPIResponse,\r\n        userAccess,\r\n        Division,\r\n        CategoryTypeList,\r\n        CategoryList\r\n    } = useSelector((state) => ({\r\n        companyList: state.Company.companyList,\r\n        BaseUnit: state.ItemMastersReducer.BaseUnit,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        PostAPIResponse: state.ItemMastersReducer.postMessage,\r\n        Division: state.ItemMastersReducer.Division,\r\n        CategoryTypeList: state.categoryTypeReducer.categoryTypeListData,\r\n        CategoryList: state.ItemMastersReducer.Category,\r\n    }));\r\n\r\n\r\n    const fileds = {\r\n        id: \"\",\r\n        Name: \"\",\r\n\r\n    }\r\n\r\n    const [state, setState] = useState(() => initialFiledFunc(fileds))\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                setEditData(hasEditVal);\r\n                dispatch(Breadcrumb_inputName(hasEditVal.Name))\r\n\r\n                const editDivision = hasEditVal.ItemDivisionDetails.map(index => ({\r\n                    value: index.Division,\r\n                    label: index.DivisionName\r\n                }))\r\n\r\n                const editCategoryType = {\r\n                    value: hasEditVal.ItemCategoryDetails[0].CategoryType,\r\n                    label: hasEditVal.ItemCategoryDetails[0].CategoryTypeName\r\n                }\r\n\r\n                const editCategory = hasEditVal.ItemCategoryDetails.map(index => ({\r\n                    value: index.Category,\r\n                    label: index.CategoryName\r\n                }))\r\n\r\n                let initialFormValue = {\r\n                    // ====================== Base detail tab ======================\r\n\r\n                    Name: hasEditVal.Name,\r\n                    Sequence: hasEditVal.Sequence,\r\n                    ShortName: hasEditVal.ShortName,\r\n                    BarCode: hasEditVal.BarCode,\r\n                    Company: { label: hasEditVal.CompanyName, value: hasEditVal.Company },\r\n                    CategoryType: editCategoryType,\r\n                    Category: editCategory,\r\n                    Division: editDivision,\r\n                    BaseUnit: { label: hasEditVal.BaseUnitName, value: hasEditVal.BaseUnitID },\r\n                    isActive: hasEditVal.isActive,\r\n                }\r\n                // ====================== Images tab ======================\r\n\r\n                let ItemImagesDetails = hasEditVal.ItemImagesDetails.map((index) => {\r\n                    debugger\r\n                    return {\r\n                        ImageType:\r\n                        {\r\n                            label: index.ImageTypeName,\r\n                            value: index.ImageType\r\n                        },\r\n                        ImageUpload: index.Item_pic\r\n                    }\r\n                })\r\n\r\n\r\n\r\n\r\n                // ====================== Unit Conversion tab  start ======================\r\n\r\n                const UnitDetails = []\r\n                hasEditVal.ItemUnitDetails.forEach((index) => {\r\n                    if (!index.IsBase) {\r\n                        UnitDetails.push({\r\n                            Unit: { label: index.UnitName, value: index.UnitID },\r\n                            Conversion: index.BaseUnitQuantity,\r\n                            IsBase: false\r\n                        })\r\n                    }\r\n                })\r\n\r\n                if ((UnitDetails.length === 0)) {\r\n                    UnitDetails.push({\r\n                        Unit: '',\r\n                        Conversion: '',\r\n                        IsBase: false,\r\n                    })\r\n                };\r\n\r\n                setBaseUnitTableData(UnitDetails)\r\n                // ====================== Unit Conversion tab  end ======================\r\n\r\n                setFormValue(initialFormValue);\r\n                setImageTabTable(ItemImagesDetails)\r\n\r\n                setMRP_Tab_TableData(hasEditVal.ItemMRPDetails)\r\n                setMarginMaster(hasEditVal.ItemMarginDetails)\r\n                setGStDetailsMaster(hasEditVal.ItemGSTHSNDetails)\r\n                setGroup_Tab_TableData(hasEditVal.ItemGroupDetails)\r\n\r\n                dispatch(editItemSuccess({ Status: false }))\r\n\r\n            }\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200) && !(pageMode === \"dropdownAdd\")) {\r\n            dispatch(PostItemDataSuccess({ Status: false }))\r\n            setState(() => resetFunction(fileds, state))//+++++++++ Clear form values\r\n            saveDissable(false);//+++++++++save Button Is enable function\r\n\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/ItemList',\r\n                }))\r\n            }\r\n        }\r\n\r\n        else if (PostAPIResponse.Status === true) {\r\n            saveDissable(false);//+++++++++save Button Is enable function\r\n            dispatch(PostItemDataSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostAPIResponse.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCompanyList());\r\n        dispatch(getBaseUnit_ForDropDown());\r\n        dispatch(get_CategoryTypes_ForDropDown());\r\n        dispatch(getPartyListAPI());\r\n        dispatch(get_ImageType_ForDropDown());\r\n        dispatch(get_Division_ForDropDown());\r\n        dispatch(get_Party_ForDropDown());\r\n        dispatch(get_PriceList_ForDropDown());\r\n        dispatch(getCategoryTypelist());\r\n        dispatch(get_Category_By_CategoryType_ForDropDownAPI());\r\n    }, [dispatch]);\r\n\r\n\r\n    const toggle1 = tab => {\r\n        if (activeTab1 !== tab) {\r\n            setactiveTab1(tab)\r\n        }\r\n    }\r\n\r\n    const Company_DropdownOptions = companyList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    const BaseUnit_DropdownOptions = BaseUnit.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n\r\n    const CategoryTypeList_DropdownOptions = CategoryTypeList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name,\r\n    }));\r\n\r\n    const CategoryList_DropdownOptions = CategoryList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name,\r\n    }));\r\n\r\n\r\n    const Division_DropdownOptions = Division.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n    function dropDownValidation(event, type,) {\r\n\r\n        let returnVal = event.value === ''\r\n        if (returnVal) {\r\n            inValidDrop[type] = true\r\n            return\r\n        } else {\r\n            formValue[type] = event\r\n            inValidDrop[type] = false\r\n\r\n        }\r\n        setpageRefresh(!pageRefresh)\r\n    }\r\n\r\n    function Common_Text_INPUT_Validation(value, type, key) {\r\n\r\n        let OnchangeControl = document.getElementById(`txt${type}${key}`)\r\n\r\n        if (value === '') {\r\n            OnchangeControl.className = 'form-control is-invalid'\r\n            return false\r\n        } else {\r\n            OnchangeControl.className = 'form-control';\r\n            return true\r\n        }\r\n    }\r\n    function CommonTab_SimpleText_INPUT_handller_ForAll(event, type, key) {\r\n\r\n        let validateReturn = Common_Text_INPUT_Validation(event, type, 0);\r\n\r\n        if (validateReturn === false) {\r\n            isValidate.push(`txt${type}0`)\r\n            return\r\n        } else {\r\n\r\n            formValue[type] = event\r\n            isValidate = isValidate.filter((indF) => {\r\n                return !(indF === `txt${type}0`)\r\n            })\r\n            setIsValidate(isValidate)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const CategoryType_Handler = (event) => {\r\n        dropDownValidation(event, \"CategoryType\")\r\n        dispatch(get_Category_By_CategoryType_ForDropDownAPI(event.value))\r\n    };\r\n\r\n    const Category_Handler = (event) => {\r\n        dropDownValidation(event, \"Category\")\r\n    };\r\n\r\n    const Division_Handler = (event) => {\r\n        dropDownValidation(event, \"Division\")\r\n\r\n    };\r\n\r\n    const handleValidSubmit = (event, values) => {\r\n\r\n        let isvalid = true\r\n        let inValidMsg = []\r\n\r\n        if (formValue.Name === '') {\r\n            document.getElementById(\"txtName0\").className = \"form-control is-invalid\"\r\n            inValidMsg.push(\"Name: Is Requried\")\r\n            isvalid = false\r\n        }\r\n        if (formValue.ShortName === '') {\r\n            document.getElementById(\"txtShortName0\").className = \"form-control is-invalid\"\r\n            isvalid = false\r\n            inValidMsg.push(\"ShortName: Is Requried\")\r\n        }\r\n        if (formValue.Company.length < 1) {\r\n            inValidDrop.Company = true\r\n            isvalid = false\r\n            inValidMsg.push(\"Company: Is Requried\")\r\n        }\r\n        if (formValue.BaseUnit.length < 1) {\r\n            inValidDrop.BaseUnit = true\r\n            isvalid = false\r\n            inValidMsg.push(\"BaseUnit: Is Requried\")\r\n\r\n        }\r\n        if (formValue.CategoryType.length < 1) {\r\n            inValidDrop.CategoryType = true\r\n            isvalid = false\r\n            inValidMsg.push(\"CategoryType: Is Requried\")\r\n        }\r\n        if (formValue.Category.length < 1) {\r\n            inValidDrop.Category = true\r\n            isvalid = false\r\n            inValidMsg.push(\"Category: Is Requried\")\r\n\r\n        }\r\n\r\n        if (formValue.Division.length < 1) {\r\n            inValidDrop.Division = true\r\n            isvalid = false\r\n            inValidMsg.push(\"Division:Is Requried\")\r\n        }\r\n        if (!Group_Tab_TableData.length > 0) {\r\n            isvalid = false\r\n            inValidMsg.push(\" GroupType Primary:Is Requried\")\r\n        }\r\n        else {\r\n            const found = Group_Tab_TableData.find(element => {\r\n                return element.GroupTypeName === \"Primary\"\r\n            });\r\n            if (found === undefined) {\r\n                isvalid = false;\r\n                inValidMsg.push(\" GroupType Primary:Is Requried\")\r\n            }\r\n        }\r\n        if (isvalid) {/// ************* is valid if start \r\n\r\n            // ====================== Unit conversion *****start ======================\r\n\r\n            const itemUnitDetails = []\r\n\r\n            baseUnitTableData.forEach((index, key) => {\r\n                let val1 = index.Conversion\r\n                const unit1 = index.Unit.value;\r\n\r\n                if (!(val1 === '')) {\r\n                    val1 = parseFloat(val1).toFixed(3)\r\n                }\r\n\r\n                const found = baseUnitTableData.find((i, k) => {\r\n                    let inner = i.Conversion;\r\n                    if (!(inner === '')) { inner = parseFloat(inner).toFixed(3) }\r\n                    return ((val1 === inner) && (unit1 === i.Unit.value) && !(key === k))\r\n                });\r\n                const found2 = itemUnitDetails.find((i, k) => {\r\n                    return ((val1 === i.BaseUnitQuantity) && (unit1 === i.UnitID) && !(key === k))\r\n                });\r\n\r\n\r\n                if (\r\n                    ((found === undefined) || (found2 === undefined))\r\n                    && !(val1 === '')\r\n                    && !(unit1 === ''))\r\n\r\n                    if (\r\n                        ((found === undefined) || (found2 === undefined))\r\n                        && !(index.Conversion === '')\r\n                        && !(index.Unit === '')) {\r\n                        itemUnitDetails.push({\r\n                            BaseUnitQuantity: index.Conversion,\r\n                            UnitID: index.Unit.value,\r\n                            IsBase: index.IsBase\r\n                        })\r\n                    }\r\n\r\n            });\r\n\r\n\r\n\r\n            if (pageMode === 'save')\r\n                itemUnitDetails.push({\r\n                    BaseUnitQuantity: 1,\r\n                    UnitID: formValue.BaseUnit.value,\r\n                    IsBase: true\r\n                })\r\n\r\n            //  ======================   ItemCategoryDetails *****start   ====================== \r\n\r\n            const ItemCategoryDetails = formValue.Category.map((index) => ({\r\n                CategoryType: formValue.CategoryType.value,\r\n                Category: index.value\r\n            }))\r\n            //  ======================   MRP_Tab_TableData *****start   ====================== \r\n\r\n            let hasAdd_MRP = []\r\n            MRP_Tab_TableData.forEach((index) => {\r\n                if (index.IsAdd === true) { hasAdd_MRP.push(index) }\r\n            })\r\n\r\n            // ======================  marginMaster *****start   ====================== \r\n\r\n            let hasAdd_Margin = []\r\n            marginMaster.forEach((index) => {\r\n                if (index.IsAdd === true) { hasAdd_Margin.push(index) }\r\n            })\r\n\r\n            // ======================  GStDetailsMaster *****start   ====================== \r\n\r\n            let hasAdd_GST = []\r\n            GStDetailsMaster.forEach((index) => {\r\n                if (index.IsAdd === true) { hasAdd_GST.push(index) }\r\n            })\r\n\r\n            debugger\r\n            const jsonBody = JSON.stringify({\r\n                Name: formValue.Name,\r\n                ShortName: formValue.ShortName,\r\n                Sequence: formValue.Sequence,\r\n                BarCode: formValue.BarCode,\r\n                isActive: formValue.isActive,\r\n                Company: formValue.Company.value,\r\n                BaseUnitID: formValue.BaseUnit.value,\r\n                BrandName: formValue.BrandName,\r\n                Tag: formValue.Tag,\r\n                CreatedBy: createdBy(),\r\n                UpdatedBy: createdBy(),\r\n                ItemCategoryDetails: ItemCategoryDetails,\r\n\r\n                ItemUnitDetails: itemUnitDetails,\r\n\r\n                ItemDivisionDetails: formValue.Division.map((i) => {\r\n                    return ({ Division: i.value })\r\n                }),\r\n\r\n                ItemImagesDetails: imageTabTable.map((i) => ({\r\n\r\n                    ImageType: i.ImageType.value,\r\n                    Item_pic: i.ImageUpload\r\n                })),\r\n                ItemMRPDetails: hasAdd_MRP,\r\n                ItemMarginDetails: hasAdd_Margin,\r\n                ItemGSTHSNDetails: hasAdd_GST,\r\n                ItemGroupDetails: Group_Tab_TableData,\r\n\r\n            });\r\n\r\n            saveDissable(true);//+++++++++save Button Is dissable function\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateItemID(jsonBody, EditData.id));\r\n                console.log(\"items edit json\", jsonBody)\r\n            }\r\n\r\n            else {\r\n                dispatch(postItemData(jsonBody));\r\n                console.log(\"items post json\", jsonBody)\r\n            }\r\n        } /// ************* is valid if start \r\n        else { /// ************* is valid esle start \r\n            dispatch(AlertState({\r\n                Type: 4, Status: true,\r\n                Message: JSON.stringify(inValidMsg),\r\n                // Message: (inValidMsg),\r\n                RedirectPath: false,\r\n                PermissionAction: false,\r\n            }));\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    // autocomplet item\r\n\r\n    // function autocomplete(inp, arr) {\r\n    //     /*the autocomplete function takes two arguments,\r\n    //     the text field element and an array of possible autocompleted values:*/\r\n    //     var currentFocus;\r\n    //     /*execute a function when someone writes in the text field:*/\r\n    //     inp.addEventListener(\"input\", function (e) {\r\n    //         var a, b, i, val = this.value;\r\n    //         /*close any already open lists of autocompleted values*/\r\n    //         closeAllLists();\r\n    //         if (!val) { return false; }\r\n    //         currentFocus = -1;\r\n    //         /*create a DIV element that will contain the items (values):*/\r\n    //         a = document.createElement(\"DIV\");\r\n    //         a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n    //         a.setAttribute(\"class\", \"autocomplete-items\");\r\n    //         /*append the DIV element as a child of the autocomplete container:*/\r\n    //         this.parentNode.appendChild(a);\r\n    //         /*for each item in the array...*/\r\n    //         for (i = 0; i < arr.length; i++) {\r\n    //             /*check if the item starts with the same letters as the text field value:*/\r\n    //             if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n    //                 /*create a DIV element for each matching element:*/\r\n    //                 b = document.createElement(\"DIV\");\r\n    //                 /*make the matching letters bold:*/\r\n    //                 b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n    //                 b.innerHTML += arr[i].substr(val.length);\r\n    //                 /*insert a input field that will hold the current array item's value:*/\r\n    //                 b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n    //                 /*execute a function when someone clicks on the item value (DIV element):*/\r\n    //                 b.addEventListener(\"click\", function (e) {\r\n    //                     /*insert the value for the autocomplete text field:*/\r\n    //                     inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n    //                     /*close the list of autocompleted values,\r\n    //                     (or any other open lists of autocompleted values:*/\r\n    //                     closeAllLists();\r\n    //                 });\r\n    //                 a.appendChild(b);\r\n    //             }\r\n    //         }\r\n    //     });\r\n    //     /*execute a function presses a key on the keyboard:*/\r\n    //     inp.addEventListener(\"keydown\", function (e) {\r\n    //         var x = document.getElementById(this.id + \"autocomplete-list\");\r\n    //         if (x) x = x.getElementsByTagName(\"div\");\r\n    //         if (e.keyCode == 40) {\r\n    //             /*If the arrow DOWN key is pressed,\r\n    //             increase the currentFocus variable:*/\r\n    //             currentFocus++;\r\n    //             /*and and make the current item more visible:*/\r\n    //             addActive(x);\r\n    //         } else if (e.keyCode == 38) { //up\r\n    //             /*If the arrow UP key is pressed,\r\n    //             decrease the currentFocus variable:*/\r\n    //             currentFocus--;\r\n    //             /*and and make the current item more visible:*/\r\n    //             addActive(x);\r\n    //         } else if (e.keyCode == 13) {\r\n    //             /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n    //             e.preventDefault();\r\n    //             if (currentFocus > -1) {\r\n    //                 /*and simulate a click on the \"active\" item:*/\r\n    //                 if (x) x[currentFocus].click();\r\n    //             }\r\n    //         }\r\n    //     });\r\n    //     function addActive(x) {\r\n    //         /*a function to classify an item as \"active\":*/\r\n    //         if (!x) return false;\r\n    //         /*start by removing the \"active\" class on all items:*/\r\n    //         removeActive(x);\r\n    //         if (currentFocus >= x.length) currentFocus = 0;\r\n    //         if (currentFocus < 0) currentFocus = (x.length - 1);\r\n    //         /*add class \"autocomplete-active\":*/\r\n    //         x[currentFocus].classList.add(\"autocomplete-active\");\r\n    //     }\r\n    //     function removeActive(x) {\r\n    //         /*a function to remove the \"active\" class from all autocomplete items:*/\r\n    //         for (var i = 0; i < x.length; i++) {\r\n    //             x[i].classList.remove(\"autocomplete-active\");\r\n    //         }\r\n    //     }\r\n    //     function closeAllLists(elmnt) {\r\n    //         /*close all autocomplete lists in the document,\r\n    //         except the one passed as an argument:*/\r\n    //         var x = document.getElementsByClassName(\"autocomplete-items\");\r\n    //         for (var i = 0; i < x.length; i++) {\r\n    //             if (elmnt != x[i] && elmnt != inp) {\r\n    //                 x[i].parentNode.removeChild(x[i]);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     /*execute a function when someone clicks in the document:*/\r\n    //     document.addEventListener(\"click\", function (e) {\r\n    //         closeAllLists(e.target);\r\n    //     });\r\n    // }\r\n\r\n\r\n    // var countries = [\"Afghanistan\", \"Albania\", \"Algeria\",\r\n    //     \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua & Barbuda\", \"Argentina\",\r\n    //     \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\",\r\n    //     \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\",\r\n    //     \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia & Herzegovina\", \"Botswana\",\r\n    //     \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\",\r\n    //     \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central Arfrican Republic\", \"Chad\",\r\n    //     \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cuba\",\r\n    //     \"Curacao\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\",\r\n    //     \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe\",\r\n    //     \"Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\",\r\n    //     \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\",\r\n    //     \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\",\r\n    //     \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\",\r\n    //     \"Kenya\", \"Kiribati\", \"Kosovo\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\",\r\n    //     \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\",\r\n    //     \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Micronesia\", \"Moldova\",\r\n    //     \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauro\", \"Nepal\", \"Netherlands\",\r\n    //     \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"North Korea\", \"Norway\",\r\n    //     \"Oman\", \"Pakistan\", \"Palau\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\",\r\n    //     \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre & Miquelon\", \"Samoa\",\r\n    //     \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\",\r\n    //     \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Korea\", \"South Sudan\", \"Spain\",\r\n    //     \"Sri Lanka\", \"St Kitts & Nevis\", \"St Lucia\", \"St Vincent\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\",\r\n    //     \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad & Tobago\", \"Tunisia\", \"Turkey\",\r\n    //     \"Turkmenistan\", \"Turks & Caicos\",\r\n    //     \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States of America\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\",\r\n    //     \"Vatican City\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\r\n\r\n    // autocomplete(document.getElementById(\"myInput\"), countries);\r\n\r\n    // autocomplet item\r\n\r\n\r\n\r\n\r\n\r\n\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css, marginBottom: \"1cm\" }}>\r\n                    <MetaTags>\r\n                        <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <Container fluid>\r\n                        <Breadcrumb pageHeading={userPageAccessState.PageHeading} />\r\n                        <AvForm onValidSubmit={(e, v) => { handleValidSubmit(e, v); }}>\r\n                            <Row>\r\n                                <Col lg={12}>\r\n                                    <Card className=\"text-black\" >\r\n                                        <CardHeader className=\"card-header   text-black c_card_header\" >\r\n                                            <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                            <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <Nav tabs className=\"nav-tabs-custom nav-justified\">\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-1\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"1\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"1\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Basic Info</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-2\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"2\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"2\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Item Group</span>\r\n\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-3\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"3\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"3\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Unit Conversions</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-5\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"4\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"4\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Image</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-5\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"5\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"5\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">MRP</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-6\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"6\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"6\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">Margin</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                                <NavItem>\r\n                                                    <NavLink\r\n                                                        id=\"nave-link-7\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        className={classnames({\r\n                                                            active: activeTab1 === \"7\",\r\n                                                        })}\r\n                                                        onClick={() => {\r\n                                                            toggle1(\"7\")\r\n                                                        }}\r\n                                                    >\r\n                                                        <span className=\"d-block d-sm-none\">\r\n                                                            <i className=\"fas fa-home\"></i>\r\n                                                        </span>\r\n                                                        <span className=\"d-none d-sm-block\">GST Details</span>\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n\r\n                                            </Nav>\r\n\r\n                                            <TabContent activeTab={activeTab1} className=\"p-3 text-muted\">\r\n\r\n                                                <TabPane tabId=\"1\">{/* +++++++++++ TabPane tabId=\"1\" ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                    <Col md={12}  >\r\n                                                        <Card className=\"text-black\">\r\n                                                            <CardBody className=\"c_card_body\">\r\n                                                                <Row>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label >Name</Label>\r\n                                                                        <Input type=\"text\"\r\n                                                                            id='txtName0'\r\n                                                                            placeholder=\" Please Enter Name \"\r\n                                                                            defaultValue={EditData.Name}\r\n                                                                            autoComplete=\"off\"\r\n                                                                            // onChange={(e) => { dispatch(Breadcrumb_inputName(e.target.value)) }}\r\n                                                                            onChange={(e) => {\r\n                                                                                dispatch(Breadcrumb_inputName(e.target.value));\r\n                                                                                CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Name\")\r\n                                                                            }}\r\n                                                                        />\r\n                                                                          {/* </div> */}\r\n\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label >ShortName</Label>\r\n                                                                        <Input type=\"text\"\r\n                                                                            id='txtShortName0'\r\n                                                                            className=\"\"\r\n                                                                            defaultValue={EditData.ShortName}\r\n                                                                            placeholder=\" Please Enter ShortName \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"ShortName\") }}\r\n                                                                        // onChange={(e) => { formValue.ShortName = e.target.value }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\" col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom21\">Company</Label>\r\n                                                                        <Select\r\n                                                                            id='dropCompany-0'\r\n                                                                            value={formValue.Company}\r\n                                                                            options={Company_DropdownOptions}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.Company ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(event) => dropDownValidation(event, \"Company\")}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\" col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom21\">Base Unit</Label>\r\n                                                                        <Select\r\n                                                                            id='dropBaseUnit-0'\r\n                                                                            value={formValue.BaseUnit}\r\n                                                                            options={BaseUnit_DropdownOptions}\r\n                                                                            isDisabled={pageMode === \"edit\" ? true : false}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.BaseUnit ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(event) => dropDownValidation(event, \"BaseUnit\")}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">BarCode</Label>\r\n                                                                        <Input\r\n                                                                            id='txtBarCode0'\r\n                                                                            placeholder=\" Please Enter BarCode \"\r\n                                                                            defaultValue={EditData.BarCode}\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"BarCode\") }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">Sequence</Label>\r\n                                                                        <Input\r\n                                                                            id='txtSequence0'\r\n                                                                            defaultValue={EditData.Sequence}\r\n                                                                            placeholder=\" Please Enter Sequence \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Sequence\") }}\r\n                                                                        // onChange={(e) => { formValue.Sequence = e.target.value }}\r\n                                                                        />\r\n\r\n                                                                    </FormGroup>\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \">\r\n                                                                        <Label>Category Type</Label>\r\n                                                                        <Select\r\n                                                                            id={`dropCategoryType-${0}`}\r\n                                                                            value={formValue.CategoryType}\r\n                                                                            options={CategoryTypeList_DropdownOptions}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.CategoryType ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(e) => { CategoryType_Handler(e) }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \">\r\n\r\n                                                                        <Label className=\"form-label font-size-13 \">Category</Label>\r\n                                                                        <Select\r\n                                                                            defaultValue={formValue.Category}\r\n                                                                            isMulti={true}\r\n                                                                            className=\"basic-multi-select\"\r\n                                                                            options={CategoryList_DropdownOptions}\r\n                                                                            styles={{\r\n                                                                                control: base => ({\r\n                                                                                    ...base,\r\n                                                                                    border: inValidDrop.Category ? '1px solid red' : '',\r\n\r\n                                                                                })\r\n                                                                            }}\r\n                                                                            onChange={(e) => { Category_Handler(e) }}\r\n                                                                            classNamePrefix=\"select2-selection\"\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">Brand Name</Label>\r\n                                                                        <Input\r\n                                                                            id='txtBrandName0'\r\n                                                                            defaultValue={EditData.BrandName}\r\n                                                                            placeholder=\" Please Enter Brand Name \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"BrandName\") }}\r\n                                                                        // onChange={(e) => { formValue.Sequence = e.target.value }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \">\r\n                                                                        <div className=\"mb-3\">\r\n                                                                            <Label className=\"form-label font-size-13 \">Division</Label>\r\n                                                                            <Select\r\n                                                                                defaultValue={formValue.Division}\r\n                                                                                isMulti={true}\r\n                                                                                className=\"basic-multi-select\"\r\n                                                                                options={Division_DropdownOptions}\r\n                                                                                styles={{\r\n                                                                                    control: base => ({\r\n                                                                                        ...base,\r\n                                                                                        border: (inValidDrop.Division) ? '1px solid red' : '',\r\n\r\n                                                                                    })\r\n                                                                                }}\r\n                                                                                onChange={(e) => { Division_Handler(e) }}\r\n                                                                                classNamePrefix=\"select2-selection\"\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">Item Tag</Label>\r\n                                                                        <Input\r\n                                                                            type=\"textarea\"\r\n                                                                            rows=\"1\"\r\n                                                                            id='txtTag0'\r\n                                                                            defaultValue={EditData.Tag}\r\n                                                                            placeholder=\" Please Enter Item Tag \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            onChange={(e) => { CommonTab_SimpleText_INPUT_handller_ForAll(e.target.value, \"Tag\") }}\r\n                                                                        // onChange={(e) => { formValue.Sequence = e.target.value }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mt-4 col col-md-4\">\r\n                                                                        <Row className=\"justify-content-ml-left \">\r\n                                                                            <Label htmlFor=\"horizontal-firstname-input\"\r\n                                                                                className=\"col-md-3 col-form-label\" >Active </Label>\r\n                                                                            <Col md={6} style={{ marginTop: '9px' }} >\r\n\r\n                                                                                <div className=\"form-check form-switch form-switch-md mb-3\" dir=\"ltr\">\r\n                                                                                    <Input type=\"checkbox\" className=\"form-check-input\" id=\"customSwitchsizemd\"\r\n                                                                                        defaultChecked={formValue.isActive}\r\n                                                                                        onChange={(e) => { formValue.isActive = e.target.checked }}\r\n\r\n                                                                                    />\r\n                                                                                </div>\r\n                                                                            </Col>\r\n                                                                        </Row>\r\n                                                                    </FormGroup>\r\n                                                                </Row>\r\n\r\n\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                    </Col>\r\n\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"2\">{/* +++++++++++ TabPane Group Type ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <GroupTab tableData={Group_Tab_TableData} func={setGroup_Tab_TableData} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </TabPane>\r\n\r\n\r\n                                                <TabPane tabId=\"3\">{/* ++++++++++++ TabPane UnitConverstion ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                    <UnitConverstion\r\n                                                        state={{\r\n                                                            pageMode: pageMode,\r\n                                                            formValue: formValue,\r\n                                                            TableData: baseUnitTableData,\r\n                                                            BaseUnit: BaseUnit\r\n                                                        }}\r\n                                                        settable={setBaseUnitTableData}\r\n                                                        setFormValue={setFormValue}\r\n                                                    />\r\n                                                    {/* <Card className=\"text-black\">\r\n                                                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n                                                            <Row>\r\n                                                                <FormGroup className=\" col col-sm-4 \" >\r\n                                                                    <Label >Base Unit</Label>\r\n                                                                    <Select\r\n                                                                        id={`dropBaseUnit-0`}\r\n                                                                        placeholder=\"Select...\"\r\n                                                                        value={formValue.BaseUnit}\r\n                                                                        isDisabled={pageMode === \"edit\" ? true : false}\r\n                                                                        options={BaseUnit_DropdownOptions}\r\n                                                                        onChange={(e) => Common_DropDown_handller_ForAll(e, \"BaseUnit\", 0)}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Row>\r\n\r\n                                                            {!(formValue.BaseUnit.value === 0)\r\n                                                                ? <Row className=\"mt-3\">\r\n                                                                    <Col md={8}><Table className=\"table table-bordered  \">\r\n                                                                        <Thead >\r\n                                                                            <tr>\r\n                                                                                <th className=\"col-sm-3\">Unit Name</th>\r\n                                                                                <th className=\"col-sm-3 text-center\">Conversion To Base Unit </th>\r\n                                                                                <th className=\"col-sm-2\">Action</th>\r\n                                                                            </tr>\r\n                                                                        </Thead>\r\n                                                                        <Tbody  >\r\n                                                                            {baseUnitTableData.map((TableValue, key) => (\r\n\r\n                                                                                <tr >\r\n                                                                                    <td>\r\n                                                                                        <Row>\r\n                                                                                            <Label className=\" col-sm-2 col-form-label\">1</Label>\r\n                                                                                            <Col md={7}>\r\n                                                                                                <Select\r\n                                                                                                    id={`dropUnit-${key}`}\r\n                                                                                                    placeholder=\"Select...\"\r\n                                                                                                    value={baseUnitTableData[key].Unit}\r\n                                                                                                    options={BaseUnit_DropdownOptions2}\r\n                                                                                                    onChange={(e) => UnitConversionsTab_BaseUnit2_onChange_Handller(e, \"Unit\", key)}\r\n                                                                                                />\r\n                                                                                            </Col>\r\n                                                                                            < Label className=\" col-sm-3 col-form-label\">=</Label>\r\n                                                                                        </Row>\r\n                                                                                    </td>\r\n                                                                                    <td>\r\n                                                                                        <Row>\r\n                                                                                            <Col>\r\n                                                                                                <Input\r\n                                                                                                    type=\"text\"\r\n                                                                                                    id={`txtConversion${key}`}\r\n                                                                                                    placeholder=\"Select...\"\r\n                                                                                                    autoComplete=\"off\"\r\n                                                                                                    value={baseUnitTableData[key].Conversion}\r\n                                                                                                    onChange={(e) => UnitConversionsTab_BaseUnit2_onChange_Handller(e, \"Conversion\", key,)}>\r\n\r\n                                                                                                </Input>\r\n                                                                                            </Col>\r\n                                                                                            <Label className=\" col-sm-4 col-form-label\"> {formValue.BaseUnit.label}</Label>\r\n                                                                                        </Row>\r\n                                                                                    </td>\r\n\r\n                                                                                    <td>\r\n                                                                                        {(baseUnitTableData.length === key + 1) ?\r\n                                                                                            <Row className=\"\">\r\n                                                                                                <Col md={6} className=\" mt-3\">\r\n                                                                                                    {(baseUnitTableData.length > 1) ? <>\r\n                                                                                                        < i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                            UnitConversionsTab_DeleteRow_Handler(key)\r\n                                                                                                        }} >\r\n                                                                                                        </i>\r\n                                                                                                    </> : <Col md={6} ></Col>}\r\n\r\n                                                                                                </Col>\r\n\r\n                                                                                                <Col md={6} >\r\n                                                                                                    <Button className=\"btn btn-sm btn-light mt-3   align-items-sm-end\"\r\n                                                                                                        type=\"button\"\r\n                                                                                                        onClick={() => { UnitConversionsTab_AddRow_Handle(key) }} >\r\n                                                                                                        <i className=\"dripicons-plus\"></i>\r\n                                                                                                    </Button>\r\n                                                                                                </Col>\r\n                                                                                            </Row>\r\n                                                                                            :\r\n\r\n                                                                                            < i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                UnitConversionsTab_DeleteRow_Handler(key)\r\n                                                                                            }} >\r\n                                                                                            </i>\r\n                                                                                        }\r\n                                                                                    </td>\r\n\r\n                                                                                </tr>\r\n                                                                            ))}\r\n                                                                        </Tbody>\r\n                                                                    </Table>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                                :\r\n                                                                <Row className=\"mt-3\">\r\n                                                                    <br></br>\r\n                                                                    <Label className=\"text-danger\">Please select BaseUnit</Label></Row>}\r\n                                                        </CardBody>\r\n                                                    </Card> */}\r\n\r\n                                                </TabPane>\r\n\r\n\r\n                                                <TabPane tabId=\"4\">{/* ++++++++++++ TabPane Item Image ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                    <Image state={{\r\n                                                        imageTable: imageTabTable,\r\n                                                        setImageTable: setImageTabTable,\r\n                                                    }} />\r\n                                                </TabPane>\r\n\r\n\r\n                                                <TabPane tabId=\"5\">{/* ++++++++++++ TabPane MRP_Tab ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <MRPTab tableData={MRP_Tab_TableData} func={setMRP_Tab_TableData} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"6\">{/* ++++++++++++ TabPane Margin ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <Margin_Tab tableData={marginMaster} func={setMarginMaster} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tabId=\"7\">{/* +++++++++++++ TabPane Gst ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Row className=\"mt-3\">\r\n                                                                <Col className=\" col col-12 \">\r\n                                                                    <GSTTab tableData={GStDetailsMaster} func={setGStDetailsMaster} />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </TabPane>\r\n                                            </TabContent>\r\n\r\n                                            <Row >{/* +++++++++++++++++++++++++++ Save Button  ++++++++++++++++++++++++++++++++++++++++++ */}\r\n                                                <Col sm={2}>\r\n                                                    <div style={{ paddingLeft: \"14px\" }}>\r\n                                                        {\r\n                                                            pageMode === \"edit\" ?\r\n                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                    <button\r\n                                                                        type=\"submit\"\r\n                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Role\"\r\n                                                                        className=\"btn btn-success w-md\"\r\n                                                                    >\r\n                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                    </button>\r\n                                                                    :\r\n                                                                    <></>\r\n                                                                : (\r\n                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                        <button\r\n                                                                            type=\"submit\"\r\n                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Role\"\r\n                                                                            className=\"btn btn-primary w-md\"\r\n                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                        </button>\r\n                                                                        :\r\n                                                                        <></>\r\n                                                                )\r\n                                                        }\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </AvForm>\r\n                    </Container>\r\n                </div >\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\nexport default ItemsMaster;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,GAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,GATJ,EAUIC,OAVJ,EAWIC,OAXJ,EAYIC,GAZJ,EAaIC,UAbJ,EAcIC,OAdJ,QAeO,YAfP;AAgBA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,QAAiC,sDAAjC;AACA,SACIC,eADJ,EAEIC,uBAFJ,EAGIC,6BAHJ,EAIIC,2CAJJ,EAKIC,wBALJ,EAMIC,yBANJ,EAOIC,qBAPJ,EAQIC,yBARJ,EASIC,YATJ,EAUIC,mBAVJ,EAWIC,YAXJ,QAYO,mDAZP;AAaA,SAASC,UAAT,EAAqBC,oBAArB,EAA2CC,mBAA3C,QAAsE,2BAAtE;AACA,SAASC,eAAT,QAAgC,mDAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,gFAAxC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,6EAAhD;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,QAAQ,GAAGlC,WAAW,EAA5B;EACA,MAAMmC,OAAO,GAAGpC,UAAU,EAA1B;EAGA,MAAM,CAACqC,QAAD,EAAWC,WAAX,IAA0BtD,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACuD,QAAD,EAAWC,WAAX,IAA0BxD,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACyD,QAAD,EAAWC,WAAX,IAA0B1D,QAAQ,CAAC,MAAD,CAAxC;EACA,MAAM,CAAC2D,mBAAD,EAAsBC,sBAAtB,IAAgD5D,QAAQ,CAAC,EAAD,CAA9D;EACA,MAAM,CAAC6D,UAAD,EAAaC,aAAb,IAA8B9D,QAAQ,CAAC,GAAD,CAA5C;EAGA,IAAI+D,OAAO,GAAG;IACVC,IAAI,EAAE,EADI;IAEVC,QAAQ,EAAE,EAFA;IAGVC,SAAS,EAAE,EAHD;IAIVC,OAAO,EAAE,EAJC;IAKVC,OAAO,EAAE,EALC;IAMVC,QAAQ,EAAE,EANA;IAOVC,QAAQ,EAAE,EAPA;IAQVC,YAAY,EAAE,EARJ;IASVC,QAAQ,EAAE,EATA;IAUVC,GAAG,EAAE,EAVK;IAWVC,GAAG,EAAE,EAXK;IAYVC,GAAG,EAAE,EAZK;IAaVC,QAAQ,EAAE,IAbA;IAcVC,GAAG,EAAE,EAdK;IAeVC,SAAS,EAAE;EAfD,CAAd;EAkBA,MAAMC,cAAc,GAAG,CAAC,UAAD,EAAa,eAAb,CAAvB;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjF,QAAQ,CAAC;IAC3CqE,QAAQ,EAAE,KADiC;IAE3CD,OAAO,EAAE,KAFkC;IAG3CG,YAAY,EAAE,KAH6B;IAI3CD,QAAQ,EAAE,KAJiC;IAK3CE,QAAQ,EAAE;EALiC,CAAD,CAA9C;EAOA,IAAI,CAACU,UAAD,EAAaC,aAAb,IAA8BnF,QAAQ,CAAC+E,cAAD,CAA1C;EAEA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BrF,QAAQ,CAAC+D,OAAD,CAA1C;EACA,MAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCvF,QAAQ,CAAC,KAAD,CAA9C;EAIA,MAAM,CAACwF,YAAD,EAAeC,eAAf,IAAkCzF,QAAQ,CAAC,EAAD,CAAhD;EAEA,MAAM,CAAC0F,aAAD,EAAgBC,gBAAhB,IAAoC3F,QAAQ,CAAC,CAAC;IAChD4F,SAAS,EAAE,EADqC;IAEhDC,WAAW,EAAE;EAFmC,CAAD,CAAD,CAAlD;EAIAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,aAA7B;EACA,MAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CjG,QAAQ,CAAC,CAAC;IACxDkG,UAAU,EAAE,EAD4C;IAExDC,IAAI,EAAE,EAFkD;IAGxDC,MAAM,EAAE;EAHgD,CAAD,CAAD,CAA1D;EAOA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CtG,QAAQ,CAAC,EAAD,CAA1D;EACA,MAAM,CAACuG,mBAAD,EAAsBC,sBAAtB,IAAgDxG,QAAQ,CAAC,EAAD,CAA9D;EACA,MAAM,CAACyG,gBAAD,EAAmBC,mBAAnB,IAA0C1G,QAAQ,CAAC,EAAD,CAAxD;EAGA,MAAM;IACF2G,WADE;IAEFtC,QAFE;IAGFuC,eAHE;IAIFC,UAJE;IAKFrC,QALE;IAMFsC,gBANE;IAOFC;EAPE,IAQF7F,WAAW,CAAE8F,KAAD,KAAY;IACxBL,WAAW,EAAEK,KAAK,CAAC5C,OAAN,CAAcuC,WADH;IAExBtC,QAAQ,EAAE2C,KAAK,CAACC,kBAAN,CAAyB5C,QAFX;IAGxBwC,UAAU,EAAEG,KAAK,CAACE,KAAN,CAAYC,oBAHA;IAIxBP,eAAe,EAAEI,KAAK,CAACC,kBAAN,CAAyBG,WAJlB;IAKxB5C,QAAQ,EAAEwC,KAAK,CAACC,kBAAN,CAAyBzC,QALX;IAMxBsC,gBAAgB,EAAEE,KAAK,CAACK,mBAAN,CAA0BC,oBANpB;IAOxBP,YAAY,EAAEC,KAAK,CAACC,kBAAN,CAAyB3C;EAPf,CAAZ,CAAD,CARf;EAmBA,MAAMiD,MAAM,GAAG;IACXC,EAAE,EAAE,EADO;IAEXxD,IAAI,EAAE;EAFK,CAAf;EAMA,MAAM,CAACgD,KAAD,EAAQS,QAAR,IAAoBzH,QAAQ,CAAC,MAAM+C,gBAAgB,CAACwE,MAAD,CAAvB,CAAlC;EAEA,MAAMG,QAAQ,GAAG,EAAE,GAAGtE,OAAO,CAACsE;EAAb,CAAjB;EACA,MAAMC,cAAc,GAAGD,QAAQ,CAACE,cAAT,CAAwB,WAAxB,CAAvB;EACA,MAAMC,YAAY,GAAG3E,KAAK,CAAC0E,cAAN,CAAqB,WAArB,CAArB,CA7F2B,CAgG3B;;EACA7H,SAAS,CAAC,MAAM;IACZ,IAAI+H,OAAO,GAAG,IAAd;IACA,IAAIC,YAAY,GAAGL,QAAQ,CAACM,QAA5B;;IAEA,IAAIH,YAAJ,EAAkB;MACdE,YAAY,GAAG7E,KAAK,CAAC+E,UAArB;IACH;;IAAA;IAEDH,OAAO,GAAGjB,UAAU,CAACqB,IAAX,CAAiBC,GAAD,IAAS;MAC/B,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BL,YAArC;IACH,CAFS,CAAV;;IAIA,IAAID,OAAJ,EAAa;MACTlE,sBAAsB,CAACkE,OAAD,CAAtB;IACH;;IAAA;EACJ,CAfQ,EAeN,CAACjB,UAAD,CAfM,CAAT;EAiBA9G,SAAS,CAAC,MAAM;IAEZ;IACA,IAAK4H,cAAc,IAAIE,YAAvB,EAAsC;MAElC,IAAIQ,UAAU,GAAG,IAAjB;;MACA,IAAIV,cAAJ,EAAoB;QAChBjE,WAAW,CAACgE,QAAQ,CAACjE,QAAV,CAAX;QACA4E,UAAU,GAAGX,QAAQ,CAACY,SAAtB;MACH,CAHD,MAIK,IAAIT,YAAJ,EAAkB;QACnBQ,UAAU,GAAGnF,KAAK,CAACoF,SAAnB;QACA5E,WAAW,CAACR,KAAK,CAACO,QAAP,CAAX;QACAD,WAAW,CAAC,IAAD,CAAX;MACH;;MAED,IAAI6E,UAAJ,EAAgB;QAEZ/E,WAAW,CAAC+E,UAAD,CAAX;QACAlF,QAAQ,CAACf,oBAAoB,CAACiG,UAAU,CAACrE,IAAZ,CAArB,CAAR;QAEA,MAAMuE,YAAY,GAAGF,UAAU,CAACG,mBAAX,CAA+BC,GAA/B,CAAmCC,KAAK,KAAK;UAC9DC,KAAK,EAAED,KAAK,CAAClE,QADiD;UAE9DoE,KAAK,EAAEF,KAAK,CAACG;QAFiD,CAAL,CAAxC,CAArB;QAKA,MAAMC,gBAAgB,GAAG;UACrBH,KAAK,EAAEN,UAAU,CAACU,mBAAX,CAA+B,CAA/B,EAAkCxE,YADpB;UAErBqE,KAAK,EAAEP,UAAU,CAACU,mBAAX,CAA+B,CAA/B,EAAkCC;QAFpB,CAAzB;QAKA,MAAMC,YAAY,GAAGZ,UAAU,CAACU,mBAAX,CAA+BN,GAA/B,CAAmCC,KAAK,KAAK;UAC9DC,KAAK,EAAED,KAAK,CAACpE,QADiD;UAE9DsE,KAAK,EAAEF,KAAK,CAACQ;QAFiD,CAAL,CAAxC,CAArB;QAKA,IAAIC,gBAAgB,GAAG;UACnB;UAEAnF,IAAI,EAAEqE,UAAU,CAACrE,IAHE;UAInBC,QAAQ,EAAEoE,UAAU,CAACpE,QAJF;UAKnBC,SAAS,EAAEmE,UAAU,CAACnE,SALH;UAMnBC,OAAO,EAAEkE,UAAU,CAAClE,OAND;UAOnBC,OAAO,EAAE;YAAEwE,KAAK,EAAEP,UAAU,CAACe,WAApB;YAAiCT,KAAK,EAAEN,UAAU,CAACjE;UAAnD,CAPU;UAQnBG,YAAY,EAAEuE,gBARK;UASnBxE,QAAQ,EAAE2E,YATS;UAUnBzE,QAAQ,EAAE+D,YAVS;UAWnBlE,QAAQ,EAAE;YAAEuE,KAAK,EAAEP,UAAU,CAACgB,YAApB;YAAkCV,KAAK,EAAEN,UAAU,CAACiB;UAApD,CAXS;UAYnB1E,QAAQ,EAAEyD,UAAU,CAACzD;QAZF,CAAvB,CApBY,CAkCZ;;QAEA,IAAI2E,iBAAiB,GAAGlB,UAAU,CAACkB,iBAAX,CAA6Bd,GAA7B,CAAkCC,KAAD,IAAW;UAChE;UACA,OAAO;YACH9C,SAAS,EACT;cACIgD,KAAK,EAAEF,KAAK,CAACc,aADjB;cAEIb,KAAK,EAAED,KAAK,CAAC9C;YAFjB,CAFG;YAMHC,WAAW,EAAE6C,KAAK,CAACe;UANhB,CAAP;QAQH,CAVuB,CAAxB,CApCY,CAmDZ;;QAEA,MAAMC,WAAW,GAAG,EAApB;QACArB,UAAU,CAACsB,eAAX,CAA2BC,OAA3B,CAAoClB,KAAD,IAAW;UAC1C,IAAI,CAACA,KAAK,CAACtC,MAAX,EAAmB;YACfsD,WAAW,CAACG,IAAZ,CAAiB;cACb1D,IAAI,EAAE;gBAAEyC,KAAK,EAAEF,KAAK,CAACoB,QAAf;gBAAyBnB,KAAK,EAAED,KAAK,CAACqB;cAAtC,CADO;cAEb7D,UAAU,EAAEwC,KAAK,CAACsB,gBAFL;cAGb5D,MAAM,EAAE;YAHK,CAAjB;UAKH;QACJ,CARD;;QAUA,IAAKsD,WAAW,CAACO,MAAZ,KAAuB,CAA5B,EAAgC;UAC5BP,WAAW,CAACG,IAAZ,CAAiB;YACb1D,IAAI,EAAE,EADO;YAEbD,UAAU,EAAE,EAFC;YAGbE,MAAM,EAAE;UAHK,CAAjB;QAKH;;QAAA;QAEDH,oBAAoB,CAACyD,WAAD,CAApB,CAxEY,CAyEZ;;QAEArE,YAAY,CAAC8D,gBAAD,CAAZ;QACAxD,gBAAgB,CAAC4D,iBAAD,CAAhB;QAEAjD,oBAAoB,CAAC+B,UAAU,CAAC6B,cAAZ,CAApB;QACAzE,eAAe,CAAC4C,UAAU,CAAC8B,iBAAZ,CAAf;QACAzD,mBAAmB,CAAC2B,UAAU,CAAC+B,iBAAZ,CAAnB;QACA5D,sBAAsB,CAAC6B,UAAU,CAACgC,gBAAZ,CAAtB;QAEAlH,QAAQ,CAAC3B,eAAe,CAAC;UAAE8I,MAAM,EAAE;QAAV,CAAD,CAAhB,CAAR;MAEH;IACJ;EAEJ,CAxGQ,EAwGN,EAxGM,CAAT;EA2GAvK,SAAS,CAAC,MAAM;IAEZ,IAAK6G,eAAe,CAAC0D,MAAhB,KAA2B,IAA5B,IAAsC1D,eAAe,CAAC2D,UAAhB,KAA+B,GAArE,IAA6E,EAAE9G,QAAQ,KAAK,aAAf,CAAjF,EAAgH;MAC5GN,QAAQ,CAAClB,mBAAmB,CAAC;QAAEqI,MAAM,EAAE;MAAV,CAAD,CAApB,CAAR;MACA7C,QAAQ,CAAC,MAAMzE,aAAa,CAACuE,MAAD,EAASP,KAAT,CAApB,CAAR,CAF4G,CAEhE;;MAC5ClE,YAAY,CAAC,KAAD,CAAZ,CAH4G,CAGxF;;MAEpB,IAAIW,QAAQ,KAAK,aAAjB,EAAgC;QAC5BN,QAAQ,CAAChB,UAAU,CAAC;UAChBqI,IAAI,EAAE,CADU;UAEhBF,MAAM,EAAE,IAFQ;UAGhBG,OAAO,EAAE7D,eAAe,CAAC6D;QAHT,CAAD,CAAX,CAAR;MAKH,CAND,MAOK;QACDtH,QAAQ,CAAChB,UAAU,CAAC;UAChBqI,IAAI,EAAE,CADU;UAEhBF,MAAM,EAAE,IAFQ;UAGhBG,OAAO,EAAE7D,eAAe,CAAC6D,OAHT;UAIhBC,YAAY,EAAE;QAJE,CAAD,CAAX,CAAR;MAMH;IACJ,CApBD,MAsBK,IAAI9D,eAAe,CAAC0D,MAAhB,KAA2B,IAA/B,EAAqC;MACtCxH,YAAY,CAAC,KAAD,CAAZ,CADsC,CAClB;;MACpBK,QAAQ,CAAClB,mBAAmB,CAAC;QAAEqI,MAAM,EAAE;MAAV,CAAD,CAApB,CAAR;MACAnH,QAAQ,CAAChB,UAAU,CAAC;QAChBqI,IAAI,EAAE,CADU;QAEhBF,MAAM,EAAE,IAFQ;QAGhBG,OAAO,EAAEE,IAAI,CAACC,SAAL,CAAehE,eAAe,CAAC6D,OAA/B,CAHO;QAIhBC,YAAY,EAAE,KAJE;QAKhBG,mBAAmB,EAAE;MALL,CAAD,CAAX,CAAR;IAOH;EACJ,CAnCQ,EAmCN,CAACjE,eAAD,CAnCM,CAAT;EAqCA7G,SAAS,CAAC,MAAM;IACZoD,QAAQ,CAAC5B,gBAAgB,EAAjB,CAAR;IACA4B,QAAQ,CAAC1B,uBAAuB,EAAxB,CAAR;IACA0B,QAAQ,CAACzB,6BAA6B,EAA9B,CAAR;IACAyB,QAAQ,CAACb,eAAe,EAAhB,CAAR;IACAa,QAAQ,CAACtB,yBAAyB,EAA1B,CAAR;IACAsB,QAAQ,CAACvB,wBAAwB,EAAzB,CAAR;IACAuB,QAAQ,CAACrB,qBAAqB,EAAtB,CAAR;IACAqB,QAAQ,CAACpB,yBAAyB,EAA1B,CAAR;IACAoB,QAAQ,CAACd,mBAAmB,EAApB,CAAR;IACAc,QAAQ,CAACxB,2CAA2C,EAA5C,CAAR;EACH,CAXQ,EAWN,CAACwB,QAAD,CAXM,CAAT;;EAcA,MAAM2H,OAAO,GAAGC,GAAG,IAAI;IACnB,IAAIlH,UAAU,KAAKkH,GAAnB,EAAwB;MACpBjH,aAAa,CAACiH,GAAD,CAAb;IACH;EACJ,CAJD;;EAMA,MAAMC,uBAAuB,GAAGrE,WAAW,CAAC8B,GAAZ,CAAiBwC,IAAD,KAAW;IACvDtC,KAAK,EAAEsC,IAAI,CAACzD,EAD2C;IAEvDoB,KAAK,EAAEqC,IAAI,CAACjH;EAF2C,CAAX,CAAhB,CAAhC;EAKA,MAAMkH,wBAAwB,GAAG7G,QAAQ,CAACoE,GAAT,CAAcwC,IAAD,KAAW;IACrDtC,KAAK,EAAEsC,IAAI,CAACzD,EADyC;IAErDoB,KAAK,EAAEqC,IAAI,CAACjH;EAFyC,CAAX,CAAb,CAAjC;EAOA,MAAMmH,gCAAgC,GAAGrE,gBAAgB,CAAC2B,GAAjB,CAAsBwC,IAAD,KAAW;IACrEtC,KAAK,EAAEsC,IAAI,CAACzD,EADyD;IAErEoB,KAAK,EAAEqC,IAAI,CAACjH;EAFyD,CAAX,CAArB,CAAzC;EAKA,MAAMoH,4BAA4B,GAAGrE,YAAY,CAAC0B,GAAb,CAAkBwC,IAAD,KAAW;IAC7DtC,KAAK,EAAEsC,IAAI,CAACzD,EADiD;IAE7DoB,KAAK,EAAEqC,IAAI,CAACjH;EAFiD,CAAX,CAAjB,CAArC;EAMA,MAAMqH,wBAAwB,GAAG7G,QAAQ,CAACiE,GAAT,CAAcwC,IAAD,KAAW;IACrDtC,KAAK,EAAEsC,IAAI,CAACzD,EADyC;IAErDoB,KAAK,EAAEqC,IAAI,CAACjH;EAFyC,CAAX,CAAb,CAAjC;;EAMA,SAASsH,kBAAT,CAA4BC,KAA5B,EAAmCC,IAAnC,EAA0C;IAEtC,IAAIC,SAAS,GAAGF,KAAK,CAAC5C,KAAN,KAAgB,EAAhC;;IACA,IAAI8C,SAAJ,EAAe;MACXzG,WAAW,CAACwG,IAAD,CAAX,GAAoB,IAApB;MACA;IACH,CAHD,MAGO;MACHpG,SAAS,CAACoG,IAAD,CAAT,GAAkBD,KAAlB;MACAvG,WAAW,CAACwG,IAAD,CAAX,GAAoB,KAApB;IAEH;;IACDjG,cAAc,CAAC,CAACD,WAAF,CAAd;EACH;;EAED,SAASoG,4BAAT,CAAsC/C,KAAtC,EAA6C6C,IAA7C,EAAmDG,GAAnD,EAAwD;IAEpD,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAyB,MAAKN,IAAK,GAAEG,GAAI,EAAzC,CAAtB;;IAEA,IAAIhD,KAAK,KAAK,EAAd,EAAkB;MACdiD,eAAe,CAACG,SAAhB,GAA4B,yBAA5B;MACA,OAAO,KAAP;IACH,CAHD,MAGO;MACHH,eAAe,CAACG,SAAhB,GAA4B,cAA5B;MACA,OAAO,IAAP;IACH;EACJ;;EACD,SAASC,0CAAT,CAAoDT,KAApD,EAA2DC,IAA3D,EAAiEG,GAAjE,EAAsE;IAElE,IAAIM,cAAc,GAAGP,4BAA4B,CAACH,KAAD,EAAQC,IAAR,EAAc,CAAd,CAAjD;;IAEA,IAAIS,cAAc,KAAK,KAAvB,EAA8B;MAC1B/G,UAAU,CAAC2E,IAAX,CAAiB,MAAK2B,IAAK,GAA3B;MACA;IACH,CAHD,MAGO;MAEHpG,SAAS,CAACoG,IAAD,CAAT,GAAkBD,KAAlB;MACArG,UAAU,GAAGA,UAAU,CAACgH,MAAX,CAAmBC,IAAD,IAAU;QACrC,OAAO,EAAEA,IAAI,KAAM,MAAKX,IAAK,GAAtB,CAAP;MACH,CAFY,CAAb;MAGArG,aAAa,CAACD,UAAD,CAAb;IACH;EAEJ;;EAID,MAAMkH,oBAAoB,GAAIb,KAAD,IAAW;IACpCD,kBAAkB,CAACC,KAAD,EAAQ,cAAR,CAAlB;IACApI,QAAQ,CAACxB,2CAA2C,CAAC4J,KAAK,CAAC5C,KAAP,CAA5C,CAAR;EACH,CAHD;;EAKA,MAAM0D,gBAAgB,GAAId,KAAD,IAAW;IAChCD,kBAAkB,CAACC,KAAD,EAAQ,UAAR,CAAlB;EACH,CAFD;;EAIA,MAAMe,gBAAgB,GAAIf,KAAD,IAAW;IAChCD,kBAAkB,CAACC,KAAD,EAAQ,UAAR,CAAlB;EAEH,CAHD;;EAKA,MAAMgB,iBAAiB,GAAG,CAAChB,KAAD,EAAQiB,MAAR,KAAmB;IAEzC,IAAIC,OAAO,GAAG,IAAd;IACA,IAAIC,UAAU,GAAG,EAAjB;;IAEA,IAAItH,SAAS,CAACpB,IAAV,KAAmB,EAAvB,EAA2B;MACvB6H,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,GAAgD,yBAAhD;MACAW,UAAU,CAAC7C,IAAX,CAAgB,mBAAhB;MACA4C,OAAO,GAAG,KAAV;IACH;;IACD,IAAIrH,SAAS,CAAClB,SAAV,KAAwB,EAA5B,EAAgC;MAC5B2H,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzC,GAAqD,yBAArD;MACAU,OAAO,GAAG,KAAV;MACAC,UAAU,CAAC7C,IAAX,CAAgB,wBAAhB;IACH;;IACD,IAAIzE,SAAS,CAAChB,OAAV,CAAkB6F,MAAlB,GAA2B,CAA/B,EAAkC;MAC9BjF,WAAW,CAACZ,OAAZ,GAAsB,IAAtB;MACAqI,OAAO,GAAG,KAAV;MACAC,UAAU,CAAC7C,IAAX,CAAgB,sBAAhB;IACH;;IACD,IAAIzE,SAAS,CAACf,QAAV,CAAmB4F,MAAnB,GAA4B,CAAhC,EAAmC;MAC/BjF,WAAW,CAACX,QAAZ,GAAuB,IAAvB;MACAoI,OAAO,GAAG,KAAV;MACAC,UAAU,CAAC7C,IAAX,CAAgB,uBAAhB;IAEH;;IACD,IAAIzE,SAAS,CAACb,YAAV,CAAuB0F,MAAvB,GAAgC,CAApC,EAAuC;MACnCjF,WAAW,CAACT,YAAZ,GAA2B,IAA3B;MACAkI,OAAO,GAAG,KAAV;MACAC,UAAU,CAAC7C,IAAX,CAAgB,2BAAhB;IACH;;IACD,IAAIzE,SAAS,CAACd,QAAV,CAAmB2F,MAAnB,GAA4B,CAAhC,EAAmC;MAC/BjF,WAAW,CAACV,QAAZ,GAAuB,IAAvB;MACAmI,OAAO,GAAG,KAAV;MACAC,UAAU,CAAC7C,IAAX,CAAgB,uBAAhB;IAEH;;IAED,IAAIzE,SAAS,CAACZ,QAAV,CAAmByF,MAAnB,GAA4B,CAAhC,EAAmC;MAC/BjF,WAAW,CAACR,QAAZ,GAAuB,IAAvB;MACAiI,OAAO,GAAG,KAAV;MACAC,UAAU,CAAC7C,IAAX,CAAgB,sBAAhB;IACH;;IACD,IAAI,CAACtD,mBAAmB,CAAC0D,MAArB,GAA8B,CAAlC,EAAqC;MACjCwC,OAAO,GAAG,KAAV;MACAC,UAAU,CAAC7C,IAAX,CAAgB,gCAAhB;IACH,CAHD,MAIK;MACD,MAAM8C,KAAK,GAAGpG,mBAAmB,CAAC2B,IAApB,CAAyB0E,OAAO,IAAI;QAC9C,OAAOA,OAAO,CAACC,aAAR,KAA0B,SAAjC;MACH,CAFa,CAAd;;MAGA,IAAIF,KAAK,KAAKG,SAAd,EAAyB;QACrBL,OAAO,GAAG,KAAV;QACAC,UAAU,CAAC7C,IAAX,CAAgB,gCAAhB;MACH;IACJ;;IACD,IAAI4C,OAAJ,EAAa;MAAC;MAEV;MAEA,MAAMM,eAAe,GAAG,EAAxB;MAEA/G,iBAAiB,CAAC4D,OAAlB,CAA0B,CAAClB,KAAD,EAAQiD,GAAR,KAAgB;QACtC,IAAIqB,IAAI,GAAGtE,KAAK,CAACxC,UAAjB;QACA,MAAM+G,KAAK,GAAGvE,KAAK,CAACvC,IAAN,CAAWwC,KAAzB;;QAEA,IAAI,EAAEqE,IAAI,KAAK,EAAX,CAAJ,EAAoB;UAChBA,IAAI,GAAGE,UAAU,CAACF,IAAD,CAAV,CAAiBG,OAAjB,CAAyB,CAAzB,CAAP;QACH;;QAED,MAAMR,KAAK,GAAG3G,iBAAiB,CAACkC,IAAlB,CAAuB,CAACkF,CAAD,EAAIC,CAAJ,KAAU;UAC3C,IAAIC,KAAK,GAAGF,CAAC,CAAClH,UAAd;;UACA,IAAI,EAAEoH,KAAK,KAAK,EAAZ,CAAJ,EAAqB;YAAEA,KAAK,GAAGJ,UAAU,CAACI,KAAD,CAAV,CAAkBH,OAAlB,CAA0B,CAA1B,CAAR;UAAsC;;UAC7D,OAASH,IAAI,KAAKM,KAAV,IAAqBL,KAAK,KAAKG,CAAC,CAACjH,IAAF,CAAOwC,KAAtC,IAAgD,EAAEgD,GAAG,KAAK0B,CAAV,CAAxD;QACH,CAJa,CAAd;QAKA,MAAME,MAAM,GAAGR,eAAe,CAAC7E,IAAhB,CAAqB,CAACkF,CAAD,EAAIC,CAAJ,KAAU;UAC1C,OAASL,IAAI,KAAKI,CAAC,CAACpD,gBAAZ,IAAkCiD,KAAK,KAAKG,CAAC,CAACrD,MAA9C,IAAyD,EAAE4B,GAAG,KAAK0B,CAAV,CAAjE;QACH,CAFc,CAAf;QAKA,IACI,CAAEV,KAAK,KAAKG,SAAX,IAA0BS,MAAM,KAAKT,SAAtC,KACG,EAAEE,IAAI,KAAK,EAAX,CADH,IAEG,EAAEC,KAAK,KAAK,EAAZ,CAHP,EAKI,IACI,CAAEN,KAAK,KAAKG,SAAX,IAA0BS,MAAM,KAAKT,SAAtC,KACG,EAAEpE,KAAK,CAACxC,UAAN,KAAqB,EAAvB,CADH,IAEG,EAAEwC,KAAK,CAACvC,IAAN,KAAe,EAAjB,CAHP,EAG6B;UACzB4G,eAAe,CAAClD,IAAhB,CAAqB;YACjBG,gBAAgB,EAAEtB,KAAK,CAACxC,UADP;YAEjB6D,MAAM,EAAErB,KAAK,CAACvC,IAAN,CAAWwC,KAFF;YAGjBvC,MAAM,EAAEsC,KAAK,CAACtC;UAHG,CAArB;QAKH;MAER,CAlCD;MAsCA,IAAI3C,QAAQ,KAAK,MAAjB,EACIsJ,eAAe,CAAClD,IAAhB,CAAqB;QACjBG,gBAAgB,EAAE,CADD;QAEjBD,MAAM,EAAE3E,SAAS,CAACf,QAAV,CAAmBsE,KAFV;QAGjBvC,MAAM,EAAE;MAHS,CAArB,EA7CK,CAmDT;;MAEA,MAAM2C,mBAAmB,GAAG3D,SAAS,CAACd,QAAV,CAAmBmE,GAAnB,CAAwBC,KAAD,KAAY;QAC3DnE,YAAY,EAAEa,SAAS,CAACb,YAAV,CAAuBoE,KADsB;QAE3DrE,QAAQ,EAAEoE,KAAK,CAACC;MAF2C,CAAZ,CAAvB,CAA5B,CArDS,CAyDT;;MAEA,IAAI6E,UAAU,GAAG,EAAjB;MACAnH,iBAAiB,CAACuD,OAAlB,CAA2BlB,KAAD,IAAW;QACjC,IAAIA,KAAK,CAAC+E,KAAN,KAAgB,IAApB,EAA0B;UAAED,UAAU,CAAC3D,IAAX,CAAgBnB,KAAhB;QAAwB;MACvD,CAFD,EA5DS,CAgET;;MAEA,IAAIgF,aAAa,GAAG,EAApB;MACAlI,YAAY,CAACoE,OAAb,CAAsBlB,KAAD,IAAW;QAC5B,IAAIA,KAAK,CAAC+E,KAAN,KAAgB,IAApB,EAA0B;UAAEC,aAAa,CAAC7D,IAAd,CAAmBnB,KAAnB;QAA2B;MAC1D,CAFD,EAnES,CAuET;;MAEA,IAAIiF,UAAU,GAAG,EAAjB;MACAlH,gBAAgB,CAACmD,OAAjB,CAA0BlB,KAAD,IAAW;QAChC,IAAIA,KAAK,CAAC+E,KAAN,KAAgB,IAApB,EAA0B;UAAEE,UAAU,CAAC9D,IAAX,CAAgBnB,KAAhB;QAAwB;MACvD,CAFD;MAIA;MACA,MAAMkF,QAAQ,GAAGjD,IAAI,CAACC,SAAL,CAAe;QAC5B5G,IAAI,EAAEoB,SAAS,CAACpB,IADY;QAE5BE,SAAS,EAAEkB,SAAS,CAAClB,SAFO;QAG5BD,QAAQ,EAAEmB,SAAS,CAACnB,QAHQ;QAI5BE,OAAO,EAAEiB,SAAS,CAACjB,OAJS;QAK5BS,QAAQ,EAAEQ,SAAS,CAACR,QALQ;QAM5BR,OAAO,EAAEgB,SAAS,CAAChB,OAAV,CAAkBuE,KANC;QAO5BW,UAAU,EAAElE,SAAS,CAACf,QAAV,CAAmBsE,KAPH;QAQ5B7D,SAAS,EAAEM,SAAS,CAACN,SARO;QAS5BD,GAAG,EAAEO,SAAS,CAACP,GATa;QAU5BgJ,SAAS,EAAEhL,SAAS,EAVQ;QAW5BiL,SAAS,EAAEjL,SAAS,EAXQ;QAY5BkG,mBAAmB,EAAEA,mBAZO;QAc5BY,eAAe,EAAEoD,eAdW;QAgB5BvE,mBAAmB,EAAEpD,SAAS,CAACZ,QAAV,CAAmBiE,GAAnB,CAAwB2E,CAAD,IAAO;UAC/C,OAAQ;YAAE5I,QAAQ,EAAE4I,CAAC,CAACzE;UAAd,CAAR;QACH,CAFoB,CAhBO;QAoB5BY,iBAAiB,EAAE7D,aAAa,CAAC+C,GAAd,CAAmB2E,CAAD,KAAQ;UAEzCxH,SAAS,EAAEwH,CAAC,CAACxH,SAAF,CAAY+C,KAFkB;UAGzCc,QAAQ,EAAE2D,CAAC,CAACvH;QAH6B,CAAR,CAAlB,CApBS;QAyB5BqE,cAAc,EAAEsD,UAzBY;QA0B5BrD,iBAAiB,EAAEuD,aA1BS;QA2B5BtD,iBAAiB,EAAEuD,UA3BS;QA4B5BtD,gBAAgB,EAAE9D;MA5BU,CAAf,CAAjB;MAgCAzD,YAAY,CAAC,IAAD,CAAZ,CA/GS,CA+GU;;MAEnB,IAAIW,QAAQ,KAAK,MAAjB,EAAyB;QACrBN,QAAQ,CAACjB,YAAY,CAAC0L,QAAD,EAAWvK,QAAQ,CAACmE,EAApB,CAAb,CAAR;QACA1B,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B6H,QAA/B;MACH,CAHD,MAKK;QACDzK,QAAQ,CAACnB,YAAY,CAAC4L,QAAD,CAAb,CAAR;QACA9H,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B6H,QAA/B;MACH;IACJ,CA1HD,CA0HE;IA1HF,KA2HK;MAAE;MACHzK,QAAQ,CAAChB,UAAU,CAAC;QAChBqI,IAAI,EAAE,CADU;QACPF,MAAM,EAAE,IADD;QAEhBG,OAAO,EAAEE,IAAI,CAACC,SAAL,CAAe8B,UAAf,CAFO;QAGhB;QACAhC,YAAY,EAAE,KAJE;QAKhBqD,gBAAgB,EAAE;MALF,CAAD,CAAX,CAAR;IAOH;EAEJ,CA7LD,CA/W2B,CAgjcAAc,GAAG,EAArB;;EACA,IAAKzK,QAAD,IAAeE,QAAQ,KAAK,aAAhC,EAAgD;IAAEuK,cAAc,GAAG,OAAjB;EAA0B;;EAAA;;EAE5E,IAAI,EAAErK,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;IAC/B,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,uBACI;QAAK,SAAS,EAAC,cAAf;QAA8B,KAAK,EAAE;UAAEsK,SAAS,EAAED,cAAb;UAA6BE,YAAY,EAAE;QAA3C,CAArC;QAAA,wBACI,QAAC,QAAD;UAAA,uBACI;YAAA,WAAQvK,mBAAmB,CAACwK,WAA5B;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII,QAAC,SAAD;UAAW,KAAK,MAAhB;UAAA,wBACI,QAAC,UAAD;YAAY,WAAW,EAAExK,mBAAmB,CAACwK;UAA7C;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,MAAD;YAAQ,aAAa,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;cAAE9B,iBAAiB,CAAC6B,CAAD,EAAIC,CAAJ,CAAjB;YAA0B,CAA7D;YAAA,uBACI,QAAC,GAAD;cAAA,uBACI,QAAC,GAAD;gBAAK,EAAE,EAAE,EAAT;gBAAA,uBACI,QAAC,IAAD;kBAAM,SAAS,EAAC,YAAhB;kBAAA,wBACI,QAAC,UAAD;oBAAY,SAAS,EAAC,wCAAtB;oBAAA,wBACI;sBAAI,SAAS,EAAC,uBAAd;sBAAA,UAAuC1K,mBAAmB,CAAC2K;oBAA3D;sBAAA;sBAAA;sBAAA;oBAAA,QADJ,eAEI;sBAAG,SAAS,EAAC,4BAAb;sBAAA,UAA2C3K,mBAAmB,CAAC4K;oBAA/D;sBAAA;sBAAA;sBAAA;oBAAA,QAFJ;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAKI,QAAC,QAAD;oBAAA,wBACI,QAAC,GAAD;sBAAK,IAAI,MAAT;sBAAU,SAAS,EAAC,+BAApB;sBAAA,wBACI,QAAC,OAAD;wBAAA,uBACI,QAAC,OAAD;0BACI,EAAE,EAAC,aADP;0BAEI,KAAK,EAAE;4BAAEC,MAAM,EAAE;0BAAV,CAFX;0BAGI,SAAS,EAAErN,UAAU,CAAC;4BAClBsN,MAAM,EAAE5K,UAAU,KAAK;0BADL,CAAD,CAHzB;0BAMI,OAAO,EAAE,MAAM;4BACXiH,OAAO,CAAC,GAAD,CAAP;0BACH,CARL;0BAAA,wBAUI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA,uBACI;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAVJ,eAaI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAbJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QADJ,eAmBI,QAAC,OAAD;wBAAA,uBACI,QAAC,OAAD;0BACI,EAAE,EAAC,aADP;0BAEI,KAAK,EAAE;4BAAE0D,MAAM,EAAE;0BAAV,CAFX;0BAGI,SAAS,EAAErN,UAAU,CAAC;4BAClBsN,MAAM,EAAE5K,UAAU,KAAK;0BADL,CAAD,CAHzB;0BAMI,OAAO,EAAE,MAAM;4BACXiH,OAAO,CAAC,GAAD,CAAP;0BACH,CARL;0BAAA,wBAUI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA,uBACI;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAVJ,eAaI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAbJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QAnBJ,eAqCI,QAAC,OAAD;wBAAA,uBACI,QAAC,OAAD;0BACI,EAAE,EAAC,aADP;0BAEI,KAAK,EAAE;4BAAE0D,MAAM,EAAE;0BAAV,CAFX;0BAGI,SAAS,EAAErN,UAAU,CAAC;4BAClBsN,MAAM,EAAE5K,UAAU,KAAK;0BADL,CAAD,CAHzB;0BAMI,OAAO,EAAE,MAAM;4BACXiH,OAAO,CAAC,GAAD,CAAP;0BACH,CARL;0BAAA,wBAUI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA,uBACI;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAVJ,eAaI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAbJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QArCJ,eAsDI,QAAC,OAAD;wBAAA,uBACI,QAAC,OAAD;0BACI,EAAE,EAAC,aADP;0BAEI,KAAK,EAAE;4BAAE0D,MAAM,EAAE;0BAAV,CAFX;0BAGI,SAAS,EAAErN,UAAU,CAAC;4BAClBsN,MAAM,EAAE5K,UAAU,KAAK;0BADL,CAAD,CAHzB;0BAMI,OAAO,EAAE,MAAM;4BACXiH,OAAO,CAAC,GAAD,CAAP;0BACH,CARL;0BAAA,wBAUI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA,uBACI;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAVJ,eAaI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAbJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QAtDJ,eAwEI,QAAC,OAAD;wBAAA,uBACI,QAAC,OAAD;0BACI,EAAE,EAAC,aADP;0BAEI,KAAK,EAAE;4BAAE0D,MAAM,EAAE;0BAAV,CAFX;0BAGI,SAAS,EAAErN,UAAU,CAAC;4BAClBsN,MAAM,EAAE5K,UAAU,KAAK;0BADL,CAAD,CAHzB;0BAMI,OAAO,EAAE,MAAM;4BACXiH,OAAO,CAAC,GAAD,CAAP;0BACH,CARL;0BAAA,wBAUI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA,uBACI;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAVJ,eAaI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAbJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QAxEJ,eA0FI,QAAC,OAAD;wBAAA,uBACI,QAAC,OAAD;0BACI,EAAE,EAAC,aADP;0BAEI,KAAK,EAAE;4BAAE0D,MAAM,EAAE;0BAAV,CAFX;0BAGI,SAAS,EAAErN,UAAU,CAAC;4BAClBsN,MAAM,EAAE5K,UAAU,KAAK;0BADL,CAAD,CAHzB;0BAMI,OAAO,EAAE,MAAM;4BACXiH,OAAO,CAAC,GAAD,CAAP;0BACH,CARL;0BAAA,wBAUI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA,uBACI;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAVJ,eAaI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAbJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QA1FJ,eA4GI,QAAC,OAAD;wBAAA,uBACI,QAAC,OAAD;0BACI,EAAE,EAAC,aADP;0BAEI,KAAK,EAAE;4BAAE0D,MAAM,EAAE;0BAAV,CAFX;0BAGI,SAAS,EAAErN,UAAU,CAAC;4BAClBsN,MAAM,EAAE5K,UAAU,KAAK;0BADL,CAAD,CAHzB;0BAMI,OAAO,EAAE,MAAM;4BACXiH,OAAO,CAAC,GAAD,CAAP;0BACH,CARL;0BAAA,wBAUI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA,uBACI;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAVJ,eAaI;4BAAM,SAAS,EAAC,mBAAhB;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAbJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QA5GJ;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QADJ,eAiII,QAAC,UAAD;sBAAY,SAAS,EAAEjH,UAAvB;sBAAmC,SAAS,EAAC,gBAA7C;sBAAA,wBAEI,QAAC,OAAD;wBAAS,KAAK,EAAC,GAAf;wBAAA,uBACI,QAAC,GAAD;0BAAK,EAAE,EAAE,EAAT;0BAAA,uBACI,QAAC,IAAD;4BAAM,SAAS,EAAC,YAAhB;4BAAA,uBACI,QAAC,QAAD;8BAAU,SAAS,EAAC,aAApB;8BAAA,wBACI,QAAC,GAAD;gCAAA,wBAEI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,KAAD;oCAAO,IAAI,EAAC,MAAZ;oCACI,EAAE,EAAC,UADP;oCAEI,WAAW,EAAC,qBAFhB;oCAGI,YAAY,EAAER,QAAQ,CAACW,IAH3B;oCAII,YAAY,EAAC,KAJjB,CAKI;oCALJ;oCAMI,QAAQ,EAAGoK,CAAD,IAAO;sCACbjL,QAAQ,CAACf,oBAAoB,CAACgM,CAAC,CAACM,MAAF,CAAS/F,KAAV,CAArB,CAAR;sCACAqD,0CAA0C,CAACoC,CAAC,CAACM,MAAF,CAAS/F,KAAV,EAAiB,MAAjB,CAA1C;oCACH;kCATL;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QAFJ,eAmBI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,KAAD;oCAAO,IAAI,EAAC,MAAZ;oCACI,EAAE,EAAC,eADP;oCAEI,SAAS,EAAC,EAFd;oCAGI,YAAY,EAAEtF,QAAQ,CAACa,SAH3B;oCAII,WAAW,EAAC,0BAJhB;oCAKI,YAAY,EAAC,KALjB;oCAMI,QAAQ,EAAGkK,CAAD,IAAO;sCAAEpC,0CAA0C,CAACoC,CAAC,CAACM,MAAF,CAAS/F,KAAV,EAAiB,WAAjB,CAA1C;oCAAyE,CANhG,CAOA;;kCAPA;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QAnBJ,eAgCI,QAAC,SAAD;kCAAW,SAAS,EAAC,gBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAO,OAAO,EAAC,oBAAf;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,MAAD;oCACI,EAAE,EAAC,eADP;oCAEI,KAAK,EAAEvD,SAAS,CAAChB,OAFrB;oCAGI,OAAO,EAAE4G,uBAHb;oCAII,MAAM,EAAE;sCACJ2D,OAAO,EAAEC,IAAI,KAAK,EACd,GAAGA,IADW;wCAEdC,MAAM,EAAE7J,WAAW,CAACZ,OAAZ,GAAsB,eAAtB,GAAwC;sCAFlC,CAAL;oCADT,CAJZ;oCAWI,QAAQ,EAAGmH,KAAD,IAAWD,kBAAkB,CAACC,KAAD,EAAQ,SAAR;kCAX3C;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QAhCJ;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA,QADJ,eAoDI,QAAC,GAAD;gCAAA,wBACI,QAAC,SAAD;kCAAW,SAAS,EAAC,gBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAO,OAAO,EAAC,oBAAf;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,MAAD;oCACI,EAAE,EAAC,gBADP;oCAEI,KAAK,EAAEnG,SAAS,CAACf,QAFrB;oCAGI,OAAO,EAAE6G,wBAHb;oCAII,UAAU,EAAEzH,QAAQ,KAAK,MAAb,GAAsB,IAAtB,GAA6B,KAJ7C;oCAKI,MAAM,EAAE;sCACJkL,OAAO,EAAEC,IAAI,KAAK,EACd,GAAGA,IADW;wCAEdC,MAAM,EAAE7J,WAAW,CAACX,QAAZ,GAAuB,eAAvB,GAAyC;sCAFnC,CAAL;oCADT,CALZ;oCAYI,QAAQ,EAAGkH,KAAD,IAAWD,kBAAkB,CAACC,KAAD,EAAQ,UAAR;kCAZ3C;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QADJ,eAmBI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAO,OAAO,EAAC,oBAAf;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,KAAD;oCACI,EAAE,EAAC,aADP;oCAEI,WAAW,EAAC,wBAFhB;oCAGI,YAAY,EAAElI,QAAQ,CAACc,OAH3B;oCAII,YAAY,EAAC,KAJjB;oCAKI,QAAQ,EAAGiK,CAAD,IAAO;sCAAEpC,0CAA0C,CAACoC,CAAC,CAACM,MAAF,CAAS/F,KAAV,EAAiB,SAAjB,CAA1C;oCAAuE;kCAL9F;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QAnBJ,eA8BI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAO,OAAO,EAAC,oBAAf;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,KAAD;oCACI,EAAE,EAAC,cADP;oCAEI,YAAY,EAAEtF,QAAQ,CAACY,QAF3B;oCAGI,WAAW,EAAC,yBAHhB;oCAII,YAAY,EAAC,KAJjB;oCAKI,QAAQ,EAAGmK,CAAD,IAAO;sCAAEpC,0CAA0C,CAACoC,CAAC,CAACM,MAAF,CAAS/F,KAAV,EAAiB,UAAjB,CAA1C;oCAAwE,CAL/F,CAMA;;kCANA;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QA9BJ;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA,QApDJ,eAgGI,QAAC,GAAD;gCAAA,wBACI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,MAAD;oCACI,EAAE,EAAG,oBAAmB,CAAE,EAD9B;oCAEI,KAAK,EAAEvD,SAAS,CAACb,YAFrB;oCAGI,OAAO,EAAE4G,gCAHb;oCAII,MAAM,EAAE;sCACJwD,OAAO,EAAEC,IAAI,KAAK,EACd,GAAGA,IADW;wCAEdC,MAAM,EAAE7J,WAAW,CAACT,YAAZ,GAA2B,eAA3B,GAA6C;sCAFvC,CAAL;oCADT,CAJZ;oCAWI,QAAQ,EAAG6J,CAAD,IAAO;sCAAEhC,oBAAoB,CAACgC,CAAD,CAApB;oCAAyB;kCAXhD;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QADJ,eAmBI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBAEI,QAAC,KAAD;oCAAO,SAAS,EAAC,0BAAjB;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ,eAGI,QAAC,MAAD;oCACI,YAAY,EAAEhJ,SAAS,CAACd,QAD5B;oCAEI,OAAO,EAAE,IAFb;oCAGI,SAAS,EAAC,oBAHd;oCAII,OAAO,EAAE8G,4BAJb;oCAKI,MAAM,EAAE;sCACJuD,OAAO,EAAEC,IAAI,KAAK,EACd,GAAGA,IADW;wCAEdC,MAAM,EAAE7J,WAAW,CAACV,QAAZ,GAAuB,eAAvB,GAAyC;sCAFnC,CAAL;oCADT,CALZ;oCAYI,QAAQ,EAAG8J,CAAD,IAAO;sCAAE/B,gBAAgB,CAAC+B,CAAD,CAAhB;oCAAqB,CAZ5C;oCAaI,eAAe,EAAC;kCAbpB;oCAAA;oCAAA;oCAAA;kCAAA,QAHJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QAnBJ,eAsCI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAO,OAAO,EAAC,oBAAf;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,KAAD;oCACI,EAAE,EAAC,eADP;oCAEI,YAAY,EAAE/K,QAAQ,CAACyB,SAF3B;oCAGI,WAAW,EAAC,2BAHhB;oCAII,YAAY,EAAC,KAJjB;oCAKI,QAAQ,EAAGsJ,CAAD,IAAO;sCAAEpC,0CAA0C,CAACoC,CAAC,CAACM,MAAF,CAAS/F,KAAV,EAAiB,WAAjB,CAA1C;oCAAyE,CALhG,CAMA;;kCANA;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QAtCJ;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA,QAhGJ,eAmJI,QAAC,GAAD;gCAAA,wBACI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,uBACI;oCAAK,SAAS,EAAC,MAAf;oCAAA,wBACI,QAAC,KAAD;sCAAO,SAAS,EAAC,0BAAjB;sCAAA;oCAAA;sCAAA;sCAAA;sCAAA;oCAAA,QADJ,eAEI,QAAC,MAAD;sCACI,YAAY,EAAEvD,SAAS,CAACZ,QAD5B;sCAEI,OAAO,EAAE,IAFb;sCAGI,SAAS,EAAC,oBAHd;sCAII,OAAO,EAAE6G,wBAJb;sCAKI,MAAM,EAAE;wCACJsD,OAAO,EAAEC,IAAI,KAAK,EACd,GAAGA,IADW;0CAEdC,MAAM,EAAG7J,WAAW,CAACR,QAAb,GAAyB,eAAzB,GAA2C;wCAFrC,CAAL;sCADT,CALZ;sCAYI,QAAQ,EAAG4J,CAAD,IAAO;wCAAE9B,gBAAgB,CAAC8B,CAAD,CAAhB;sCAAqB,CAZ5C;sCAaI,eAAe,EAAC;oCAbpB;sCAAA;sCAAA;sCAAA;oCAAA,QAFJ;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA;gCADJ;kCAAA;kCAAA;kCAAA;gCAAA,QADJ,eAsBI,QAAC,SAAD;kCAAW,SAAS,EAAC,oBAArB;kCAAA,wBACI,QAAC,KAAD;oCAAO,OAAO,EAAC,oBAAf;oCAAA;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,eAEI,QAAC,KAAD;oCACI,IAAI,EAAC,UADT;oCAEI,IAAI,EAAC,GAFT;oCAGI,EAAE,EAAC,SAHP;oCAII,YAAY,EAAE/K,QAAQ,CAACwB,GAJ3B;oCAKI,WAAW,EAAC,yBALhB;oCAMI,YAAY,EAAC,KANjB;oCAOI,QAAQ,EAAGuJ,CAAD,IAAO;sCAAEpC,0CAA0C,CAACoC,CAAC,CAACM,MAAF,CAAS/F,KAAV,EAAiB,KAAjB,CAA1C;oCAAmE,CAP1F,CAQA;;kCARA;oCAAA;oCAAA;oCAAA;kCAAA,QAFJ;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QAtBJ,eAoCI,QAAC,SAAD;kCAAW,SAAS,EAAC,mBAArB;kCAAA,uBACI,QAAC,GAAD;oCAAK,SAAS,EAAC,0BAAf;oCAAA,wBACI,QAAC,KAAD;sCAAO,OAAO,EAAC,4BAAf;sCACI,SAAS,EAAC,yBADd;sCAAA;oCAAA;sCAAA;sCAAA;sCAAA;oCAAA,QADJ,eAGI,QAAC,GAAD;sCAAK,EAAE,EAAE,CAAT;sCAAY,KAAK,EAAE;wCAAEsF,SAAS,EAAE;sCAAb,CAAnB;sCAAA,uBAEI;wCAAK,SAAS,EAAC,4CAAf;wCAA4D,GAAG,EAAC,KAAhE;wCAAA,uBACI,QAAC,KAAD;0CAAO,IAAI,EAAC,UAAZ;0CAAuB,SAAS,EAAC,kBAAjC;0CAAoD,EAAE,EAAC,oBAAvD;0CACI,cAAc,EAAE7I,SAAS,CAACR,QAD9B;0CAEI,QAAQ,EAAGwJ,CAAD,IAAO;4CAAEhJ,SAAS,CAACR,QAAV,GAAqBwJ,CAAC,CAACM,MAAF,CAASI,OAA9B;0CAAuC;wCAF9D;0CAAA;0CAAA;0CAAA;wCAAA;sCADJ;wCAAA;wCAAA;wCAAA;sCAAA;oCAFJ;sCAAA;sCAAA;sCAAA;oCAAA,QAHJ;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA;gCADJ;kCAAA;kCAAA;kCAAA;gCAAA,QApCJ;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA,QAnJJ;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA;wBADJ;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QAFJ,eAqNI,QAAC,OAAD;wBAAS,KAAK,EAAC,GAAf;wBAAA,uBACI,QAAC,GAAD;0BAAA,uBACI,QAAC,GAAD;4BAAK,EAAE,EAAE,EAAT;4BAAA,uBACI,QAAC,GAAD;8BAAK,SAAS,EAAC,MAAf;8BAAA,uBACI,QAAC,GAAD;gCAAK,SAAS,EAAC,cAAf;gCAAA,uBACI,QAAC,QAAD;kCAAU,SAAS,EAAEvI,mBAArB;kCAA0C,IAAI,EAAEC;gCAAhD;kCAAA;kCAAA;kCAAA;gCAAA;8BADJ;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA;wBADJ;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QArNJ,eAkOI,QAAC,OAAD;wBAAS,KAAK,EAAC,GAAf;wBAAA,uBACI,QAAC,eAAD;0BACI,KAAK,EAAE;4BACH/C,QAAQ,EAAEA,QADP;4BAEH2B,SAAS,EAAEA,SAFR;4BAGH2J,SAAS,EAAE/I,iBAHR;4BAIH3B,QAAQ,EAAEA;0BAJP,CADX;0BAOI,QAAQ,EAAE4B,oBAPd;0BAQI,YAAY,EAAEZ;wBARlB;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QAlOJ,eA0VI,QAAC,OAAD;wBAAS,KAAK,EAAC,GAAf;wBAAA,uBACI,QAAC,KAAD;0BAAO,KAAK,EAAE;4BACV2J,UAAU,EAAEtJ,aADF;4BAEVuJ,aAAa,EAAEtJ;0BAFL;wBAAd;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QA1VJ,eAkWI,QAAC,OAAD;wBAAS,KAAK,EAAC,GAAf;wBAAA,uBACI,QAAC,GAAD;0BAAA,uBACI,QAAC,GAAD;4BAAK,EAAE,EAAE,EAAT;4BAAA,uBACI,QAAC,GAAD;8BAAK,SAAS,EAAC,MAAf;8BAAA,uBACI,QAAC,GAAD;gCAAK,SAAS,EAAC,cAAf;gCAAA,uBACI,QAAC,MAAD;kCAAQ,SAAS,EAAEU,iBAAnB;kCAAsC,IAAI,EAAEC;gCAA5C;kCAAA;kCAAA;kCAAA;gCAAA;8BADJ;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA;wBADJ;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QAlWJ,eA8WI,QAAC,OAAD;wBAAS,KAAK,EAAC,GAAf;wBAAA,uBACI,QAAC,GAAD;0BAAA,uBACI,QAAC,GAAD;4BAAK,EAAE,EAAE,EAAT;4BAAA,uBACI,QAAC,GAAD;8BAAK,SAAS,EAAC,MAAf;8BAAA,uBACI,QAAC,GAAD;gCAAK,SAAS,EAAC,cAAf;gCAAA,uBACI,QAAC,UAAD;kCAAY,SAAS,EAAEd,YAAvB;kCAAqC,IAAI,EAAEC;gCAA3C;kCAAA;kCAAA;kCAAA;gCAAA;8BADJ;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA;wBADJ;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QA9WJ,eA2XI,QAAC,OAAD;wBAAS,KAAK,EAAC,GAAf;wBAAA,uBACI,QAAC,GAAD;0BAAA,uBACI,QAAC,GAAD;4BAAK,EAAE,EAAE,EAAT;4BAAA,uBACI,QAAC,GAAD;8BAAK,SAAS,EAAC,MAAf;8BAAA,uBACI,QAAC,GAAD;gCAAK,SAAS,EAAC,cAAf;gCAAA,uBACI,QAAC,MAAD;kCAAQ,SAAS,EAAEgB,gBAAnB;kCAAqC,IAAI,EAAEC;gCAA3C;kCAAA;kCAAA;kCAAA;gCAAA;8BADJ;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA;wBADJ;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA,QA3XJ;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QAjIJ,eAygBI,QAAC,GAAD;sBAAA,uBACI,QAAC,GAAD;wBAAK,EAAE,EAAE,CAAT;wBAAA,uBACI;0BAAK,KAAK,EAAE;4BAAEwI,WAAW,EAAE;0BAAf,CAAZ;0BAAA,UAEQzL,QAAQ,KAAK,MAAb,GACIE,mBAAmB,CAACwL,iBAApB,gBACI;4BACI,IAAI,EAAC,QADT;4BAEI,mBAAgB,SAFpB;4BAE8B,sBAAmB,KAFjD;4BAEuD,KAAK,EAAC,aAF7D;4BAGI,SAAS,EAAC,sBAHd;4BAAA,wBAKI;8BAAG,KAAK,EAAC;4BAAT;8BAAA;8BAAA;8BAAA;4BAAA,QALJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QADJ,gBASI,qCAVR,GAYQxL,mBAAmB,CAACyL,iBAApB,gBACI;4BACI,IAAI,EAAC,QADT;4BAEI,mBAAgB,SAFpB;4BAE8B,sBAAmB,KAFjD;4BAEuD,KAAK,EAAC,WAF7D;4BAGI,SAAS,EAAC,sBAHd;4BAAA,6BAIE;8BAAG,SAAS,EAAC;4BAAb;8BAAA;8BAAA;8BAAA;4BAAA,QAJF;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QADJ,gBAQI;wBAtBpB;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA;oBADJ;sBAAA;sBAAA;sBAAA;oBAAA,QAzgBJ;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QALJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAikBH,CAlkBD,MAmkBK;IACD,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ,CArwCD;;GAAMnM,W;UACehC,W,EACDD,U,EAsEZE,W;;;KAxEF+B,W;AAswCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}